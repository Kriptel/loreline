// Generated by Haxe 4.3.6
using global::Loreline.Internal.Root;

#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Loreline : global::Loreline.Internal.Lang.HxObject {
		
		public Loreline(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public Loreline() {
			global::Loreline.Runtime.Loreline.__hx_ctor_loreline_Loreline(this);
		}
		
		
		protected static void __hx_ctor_loreline_Loreline(global::Loreline.Runtime.Loreline __hx_this) {
		}
		
		
		public static global::Loreline.Runtime.Script parse(string input, string filePath, global::Loreline.Internal.Lang.Function handleFile, global::Loreline.Internal.Lang.Function callback) {
			global::Loreline.Runtime.Lexer lexer = new global::Loreline.Runtime.Lexer(((string) (input) ));
			global::Loreline.Internal.Root.Array<object> tokens = lexer.tokenize();
			global::Loreline.Internal.Root.Array<object> lexerErrors = lexer.getErrors();
			if (( ( lexerErrors != null ) && ( lexerErrors.length > 0 ) )) {
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(((global::Loreline.Runtime.LexerError) (lexerErrors[0]) ))) );
			}
			
			global::Loreline.Runtime.Script[] result = new global::Loreline.Runtime.Script[]{null};
			if (( ( filePath != null ) && ( handleFile != null ) )) {
				global::Loreline.Runtime.Imports imports = new global::Loreline.Runtime.Imports();
				imports.resolve(filePath, tokens, handleFile, ( (( global::Loreline.Runtime.Loreline_parse_52__Fun.__hx_current != null )) ? (global::Loreline.Runtime.Loreline_parse_52__Fun.__hx_current) : (global::Loreline.Runtime.Loreline_parse_52__Fun.__hx_current = ((global::Loreline.Runtime.Loreline_parse_52__Fun) (new global::Loreline.Runtime.Loreline_parse_52__Fun()) )) ), new global::Loreline.Runtime.Loreline_parse_55__Fun(tokens, result, filePath, callback));
				return ((global::Loreline.Runtime.Script) (result[0]) );
			}
			
			global::Loreline.Runtime.Parser parser = new global::Loreline.Runtime.Parser(((global::Loreline.Internal.Root.Array<object>) (tokens) ), default(global::Loreline.Runtime.ParserContext));
			result[0] = parser.parse();
			global::Loreline.Internal.Root.Array<object> parseErrors = parser.getErrors();
			if (( ( parseErrors != null ) && ( parseErrors.length > 0 ) )) {
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(((global::Loreline.Runtime.ParseError) (parseErrors[0]) ))) );
			}
			
			if (( callback != null )) {
				((global::Loreline.Internal.Lang.Function) (callback) ).__hx_invoke1_o(default(double), ((global::Loreline.Runtime.Script) (result[0]) ));
			}
			
			return ((global::Loreline.Runtime.Script) (result[0]) );
		}
		
		
		public static global::Loreline.Runtime.Interpreter play(global::Loreline.Runtime.Script script, global::Loreline.Internal.Lang.Function handleDialogue, global::Loreline.Internal.Lang.Function handleChoice, global::Loreline.Internal.Lang.Function handleFinish, string beatName, global::Loreline.Runtime.InterpreterOptions options) {
			global::Loreline.Runtime.Interpreter interpreter = new global::Loreline.Runtime.Interpreter(((global::Loreline.Runtime.Script) (script) ), ((global::Loreline.Internal.Lang.Function) (handleDialogue) ), ((global::Loreline.Internal.Lang.Function) (handleChoice) ), ((global::Loreline.Internal.Lang.Function) (handleFinish) ), ((global::Loreline.Runtime.InterpreterOptions) (options) ));
			interpreter.start(beatName);
			return interpreter;
		}
		
		
		public static global::Loreline.Runtime.Interpreter resume(global::Loreline.Runtime.Script script, global::Loreline.Internal.Lang.Function handleDialogue, global::Loreline.Internal.Lang.Function handleChoice, global::Loreline.Internal.Lang.Function handleFinish, object saveData, string beatName, global::Loreline.Runtime.InterpreterOptions options) {
			global::Loreline.Runtime.Interpreter interpreter = new global::Loreline.Runtime.Interpreter(((global::Loreline.Runtime.Script) (script) ), ((global::Loreline.Internal.Lang.Function) (handleDialogue) ), ((global::Loreline.Internal.Lang.Function) (handleChoice) ), ((global::Loreline.Internal.Lang.Function) (handleFinish) ), ((global::Loreline.Runtime.InterpreterOptions) (options) ));
			interpreter.restore(saveData);
			if (( beatName != null )) {
				interpreter.start(beatName);
			}
			else {
				interpreter.resume();
			}
			
			return interpreter;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Loreline_parse_52__Fun : global::Loreline.Internal.Lang.Function {
		
		public Loreline_parse_52__Fun() : base(1, 0) {
		}
		
		
		public static global::Loreline.Runtime.Loreline_parse_52__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::Loreline.Runtime.Error error = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Error) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Error) (__fn_dyn1) )) );
			throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(error)) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Loreline_parse_55__Fun : global::Loreline.Internal.Lang.Function {
		
		public Loreline_parse_55__Fun(global::Loreline.Internal.Root.Array<object> tokens, global::Loreline.Runtime.Script[] result, string filePath, global::Loreline.Internal.Lang.Function callback) : base(2, 0) {
			this.tokens = tokens;
			this.result = result;
			this.filePath = filePath;
			this.callback = callback;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Internal.Ds.StringMap<object> resolvedImports = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((object) (__fn_float2) )) ))) )) : (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (__fn_dyn2) ))) )) );
			bool hasErrors = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (global::Loreline.Internal.Lang.Runtime.toBool(((object) (__fn_float1) ))) : (global::Loreline.Internal.Lang.Runtime.toBool(__fn_dyn1)) );
			global::Loreline.Runtime.Parser parser = new global::Loreline.Runtime.Parser(((global::Loreline.Internal.Root.Array<object>) (this.tokens) ), ((global::Loreline.Runtime.ParserContext) (new global::Loreline.Runtime.ParserContext(((string) (this.filePath) ), ((string) (this.filePath) ), ((global::Loreline.Internal.Ds.StringMap<object>) (resolvedImports) ), default(global::Loreline.Internal.Ds.StringMap<bool>))) ));
			this.result[0] = parser.parse();
			global::Loreline.Internal.Root.Array<object> parseErrors = parser.getErrors();
			if (( ( parseErrors != null ) && ( parseErrors.length > 0 ) )) {
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(((global::Loreline.Runtime.ParseError) (parseErrors[0]) ))) );
			}
			
			if (( this.callback != null )) {
				((global::Loreline.Internal.Lang.Function) (this.callback) ).__hx_invoke1_o(default(double), ((global::Loreline.Runtime.Script) (this.result[0]) ));
			}
			
			return null;
		}
		
		
		public global::Loreline.Internal.Root.Array<object> tokens;
		
		public global::Loreline.Runtime.Script[] result;
		
		public string filePath;
		
		public global::Loreline.Internal.Lang.Function callback;
		
	}
}


