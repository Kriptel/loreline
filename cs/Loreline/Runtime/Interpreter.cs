// Generated by Haxe 4.3.6
using global::Loreline.Internal.Root;

#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class RuntimeState : global::Loreline.Internal.Lang.HxObject {
		
		public RuntimeState(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public RuntimeState(object fields, object originalFields) {
			global::Loreline.Runtime.RuntimeState.__hx_ctor_loreline_RuntimeState(this, fields, originalFields);
		}
		
		
		protected static void __hx_ctor_loreline_RuntimeState(global::Loreline.Runtime.RuntimeState __hx_this, object fields, object originalFields) {
			unchecked {
				__hx_this.scope = -1;
				{
					if (( fields != null )) {
						__hx_this.fields = fields;
					}
					else {
						__hx_this.clear();
					}
					
					if (( originalFields != null )) {
						__hx_this.originalFields = originalFields;
					}
					else {
						__hx_this.createOriginalFields();
					}
					
				}
				
			}
		}
		
		
		public int scope;
		
		public object fields;
		
		public object originalFields;
		
		public virtual void clear() {
			this.fields = global::Loreline.Runtime.Objects.createFields(null, null);
		}
		
		
		public virtual void createOriginalFields() {
			this.originalFields = global::Loreline.Runtime.Objects.createFields(null, null);
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 947177898:
					{
						this.originalFields = ((object) (@value) );
						return @value;
					}
					
					
					case 9342585:
					{
						this.fields = ((object) (@value) );
						return @value;
					}
					
					
					case 2027516308:
					{
						this.scope = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 947177898:
					{
						this.originalFields = ((object) (@value) );
						return @value;
					}
					
					
					case 9342585:
					{
						this.fields = ((object) (@value) );
						return @value;
					}
					
					
					case 2027516308:
					{
						this.scope = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 611419590:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "createOriginalFields", 611419590)) );
					}
					
					
					case 1213952397:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "clear", 1213952397)) );
					}
					
					
					case 947177898:
					{
						return this.originalFields;
					}
					
					
					case 9342585:
					{
						return this.fields;
					}
					
					
					case 2027516308:
					{
						return this.scope;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 947177898:
					{
						return ((double) (global::Loreline.Internal.Lang.Runtime.toDouble(this.originalFields)) );
					}
					
					
					case 9342585:
					{
						return ((double) (global::Loreline.Internal.Lang.Runtime.toDouble(this.fields)) );
					}
					
					
					case 2027516308:
					{
						return ((double) (this.scope) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 611419590:
					{
						this.createOriginalFields();
						break;
					}
					
					
					case 1213952397:
					{
						this.clear();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("originalFields");
			baseArr.push("fields");
			baseArr.push("scope");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class RuntimeCharacter : global::Loreline.Runtime.RuntimeState {
		
		public RuntimeCharacter(global::Loreline.Internal.Lang.EmptyObject empty) : base(((global::Loreline.Internal.Lang.EmptyObject) (global::Loreline.Internal.Lang.EmptyObject.EMPTY) )) {
		}
		
		
		public RuntimeCharacter(object fields) : base(global::Loreline.Internal.Lang.EmptyObject.EMPTY) {
			global::Loreline.Runtime.RuntimeCharacter.__hx_ctor_loreline_RuntimeCharacter(this, fields);
		}
		
		
		protected static void __hx_ctor_loreline_RuntimeCharacter(global::Loreline.Runtime.RuntimeCharacter __hx_this, object fields) {
			global::Loreline.Runtime.RuntimeState.__hx_ctor_loreline_RuntimeState(__hx_this, fields, null);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class RuntimeAccess : global::Loreline.Internal.Lang.Enum {
		
		protected RuntimeAccess(int index) : base(index) {
		}
		
		
		public static global::Loreline.Runtime.RuntimeAccess FieldAccess(global::Loreline.Runtime.Position pos, object obj, string name) {
			return new global::Loreline.Runtime.RuntimeAccess_FieldAccess(pos, obj, name);
		}
		
		
		public static global::Loreline.Runtime.RuntimeAccess ArrayAccess(global::Loreline.Runtime.Position pos, object array, int index) {
			return new global::Loreline.Runtime.RuntimeAccess_ArrayAccess(pos, array, index);
		}
		
		
		public static global::Loreline.Runtime.RuntimeAccess CharacterAccess(global::Loreline.Runtime.Position pos, string name) {
			return new global::Loreline.Runtime.RuntimeAccess_CharacterAccess(pos, name);
		}
		
		
		public static global::Loreline.Runtime.RuntimeAccess FunctionAccess(global::Loreline.Runtime.Position pos, string name) {
			return new global::Loreline.Runtime.RuntimeAccess_FunctionAccess(pos, name);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class RuntimeAccess_FieldAccess : global::Loreline.Runtime.RuntimeAccess {
		
		public RuntimeAccess_FieldAccess(global::Loreline.Runtime.Position pos, object obj, string name) : base(0) {
			this.pos = pos;
			this.obj = obj;
			this.name = name;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.pos, this.obj, this.name});
		}
		
		
		public override string getTag() {
			return "FieldAccess";
		}
		
		
		public override int GetHashCode() {
			return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(0, new object[]{this.pos, this.obj, this.name});
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.RuntimeAccess_FieldAccess en = ( other as global::Loreline.Runtime.RuntimeAccess_FieldAccess );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.pos) ), ((object) (en.pos) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.obj) ), ((object) (en.obj) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.name) ), ((object) (en.name) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("FieldAccess", new object[]{this.pos, this.obj, this.name});
		}
		
		
		public readonly global::Loreline.Runtime.Position pos;
		
		public readonly object obj;
		
		public readonly string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class RuntimeAccess_ArrayAccess : global::Loreline.Runtime.RuntimeAccess {
		
		public RuntimeAccess_ArrayAccess(global::Loreline.Runtime.Position pos, object array, int index) : base(1) {
			this.pos = pos;
			this.array = array;
			this.index = index;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.pos, this.array, this.index});
		}
		
		
		public override string getTag() {
			return "ArrayAccess";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(1, new object[]{this.pos, this.array, this.index});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.RuntimeAccess_ArrayAccess en = ( other as global::Loreline.Runtime.RuntimeAccess_ArrayAccess );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.pos) ), ((object) (en.pos) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.array) ), ((object) (en.array) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.index) ), ((object) (en.index) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("ArrayAccess", new object[]{this.pos, this.array, this.index});
		}
		
		
		public readonly global::Loreline.Runtime.Position pos;
		
		public readonly object array;
		
		public readonly int index;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class RuntimeAccess_CharacterAccess : global::Loreline.Runtime.RuntimeAccess {
		
		public RuntimeAccess_CharacterAccess(global::Loreline.Runtime.Position pos, string name) : base(2) {
			this.pos = pos;
			this.name = name;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.pos, this.name});
		}
		
		
		public override string getTag() {
			return "CharacterAccess";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(2, new object[]{this.pos, this.name});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.RuntimeAccess_CharacterAccess en = ( other as global::Loreline.Runtime.RuntimeAccess_CharacterAccess );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.pos) ), ((object) (en.pos) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.name) ), ((object) (en.name) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("CharacterAccess", new object[]{this.pos, this.name});
		}
		
		
		public readonly global::Loreline.Runtime.Position pos;
		
		public readonly string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class RuntimeAccess_FunctionAccess : global::Loreline.Runtime.RuntimeAccess {
		
		public RuntimeAccess_FunctionAccess(global::Loreline.Runtime.Position pos, string name) : base(3) {
			this.pos = pos;
			this.name = name;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.pos, this.name});
		}
		
		
		public override string getTag() {
			return "FunctionAccess";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(3, new object[]{this.pos, this.name});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.RuntimeAccess_FunctionAccess en = ( other as global::Loreline.Runtime.RuntimeAccess_FunctionAccess );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.pos) ), ((object) (en.pos) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.name) ), ((object) (en.name) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("FunctionAccess", new object[]{this.pos, this.name});
		}
		
		
		public readonly global::Loreline.Runtime.Position pos;
		
		public readonly string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class RuntimeScope : global::Loreline.Internal.Lang.HxObject {
		
		public RuntimeScope(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public RuntimeScope(global::Loreline.Internal.Lang.Null<int> id, global::Loreline.Runtime.NBeatDecl beat, global::Loreline.Runtime.AstNode node, global::Loreline.Internal.Root.Array<object> beats, global::Loreline.Runtime.RuntimeState state, global::Loreline.Runtime.AstNode head) {
			global::Loreline.Runtime.RuntimeScope.__hx_ctor_loreline_RuntimeScope(this, id, beat, node, beats, state, head);
		}
		
		
		protected static void __hx_ctor_loreline_RuntimeScope(global::Loreline.Runtime.RuntimeScope __hx_this, global::Loreline.Internal.Lang.Null<int> id, global::Loreline.Runtime.NBeatDecl beat, global::Loreline.Runtime.AstNode node, global::Loreline.Internal.Root.Array<object> beats, global::Loreline.Runtime.RuntimeState state, global::Loreline.Runtime.AstNode head) {
			unchecked {
				__hx_this.head = null;
				__hx_this.state = null;
				__hx_this.beats = null;
				__hx_this.id = -1;
				{
					if (id.hasValue) {
						__hx_this.id = (id).@value;
					}
					
					__hx_this.beat = beat;
					__hx_this.node = node;
					if (( beats != null )) {
						__hx_this.beats = beats;
					}
					
					if (( state != null )) {
						__hx_this.state = state;
					}
					
					if (( head != null )) {
						__hx_this.head = head;
					}
					
				}
				
			}
		}
		
		
		public int id;
		
		public global::Loreline.Runtime.NBeatDecl beat;
		
		public global::Loreline.Runtime.AstNode node;
		
		public global::Loreline.Internal.Root.Array<object> beats;
		
		public global::Loreline.Runtime.RuntimeState state;
		
		public global::Loreline.Runtime.AstNode head;
		
		public virtual global::Loreline.Runtime.NBeatDecl beatByName(string name) {
			if (( this.beats == null )) {
				return null;
			}
			
			{
				int _g = 0;
				int _g1 = this.beats.length;
				while (( _g < _g1 )) {
					int i = _g++;
					global::Loreline.Runtime.NBeatDecl beat = ((global::Loreline.Runtime.NBeatDecl) (this.beats[i]) );
					if (( beat.name == name )) {
						return beat;
					}
					
				}
				
			}
			
			return null;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 23515:
					{
						this.id = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1158359328:
					{
						this.head = ((global::Loreline.Runtime.AstNode) (@value) );
						return @value;
					}
					
					
					case 67859985:
					{
						this.state = ((global::Loreline.Runtime.RuntimeState) (@value) );
						return @value;
					}
					
					
					case 810640957:
					{
						this.beats = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 1225394690:
					{
						this.node = ((global::Loreline.Runtime.AstNode) (@value) );
						return @value;
					}
					
					
					case 1091821942:
					{
						this.beat = ((global::Loreline.Runtime.NBeatDecl) (@value) );
						return @value;
					}
					
					
					case 23515:
					{
						this.id = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 477756888:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "beatByName", 477756888)) );
					}
					
					
					case 1158359328:
					{
						return this.head;
					}
					
					
					case 67859985:
					{
						return this.state;
					}
					
					
					case 810640957:
					{
						return this.beats;
					}
					
					
					case 1225394690:
					{
						return this.node;
					}
					
					
					case 1091821942:
					{
						return this.beat;
					}
					
					
					case 23515:
					{
						return this.id;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 23515:
					{
						return ((double) (this.id) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 477756888:
					{
						return this.beatByName(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("head");
			baseArr.push("state");
			baseArr.push("beats");
			baseArr.push("node");
			baseArr.push("beat");
			baseArr.push("id");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public struct TextTag {
		
		public TextTag(bool closing, string @value, int offset) {
			this.closing = closing;
			this.@value = @value;
			this.offset = offset;
		}
		
		
		public bool closing;
		
		public string @value;
		
		public int offset;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class EvalNext : global::Loreline.Internal.Lang.HxObject {
		
		public EvalNext(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public EvalNext() {
			global::Loreline.Runtime.EvalNext.__hx_ctor_loreline_EvalNext(this);
		}
		
		
		protected static void __hx_ctor_loreline_EvalNext(global::Loreline.Runtime.EvalNext __hx_this) {
			__hx_this.cb = null;
			__hx_this.sync = true;
			{
			}
			
		}
		
		
		public bool sync;
		
		public global::Loreline.Internal.Lang.Function cb;
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 22175:
					{
						this.cb = ((global::Loreline.Internal.Lang.Function) (@value) );
						return @value;
					}
					
					
					case 1281342043:
					{
						this.sync = global::Loreline.Internal.Lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 22175:
					{
						return this.cb;
					}
					
					
					case 1281342043:
					{
						return this.sync;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("cb");
			baseArr.push("sync");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public struct ChoiceOption {
		
		public ChoiceOption(string text, global::Loreline.Internal.Root.Array<global::Loreline.Runtime.TextTag> tags, bool enabled) {
			this.text = text;
			this.tags = tags;
			this.enabled = enabled;
		}
		
		
		public string text;
		
		public global::Loreline.Internal.Root.Array<global::Loreline.Runtime.TextTag> tags;
		
		public bool enabled;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class RuntimeError : global::Loreline.Runtime.Error {
		
		public RuntimeError(global::Loreline.Internal.Lang.EmptyObject empty) : base(global::Loreline.Internal.Lang.EmptyObject.EMPTY) {
		}
		
		
		public RuntimeError(string message, global::Loreline.Runtime.Position pos) : base(global::Loreline.Internal.Lang.EmptyObject.EMPTY) {
			global::Loreline.Runtime.RuntimeError.__hx_ctor_loreline_RuntimeError(this, message, pos);
		}
		
		
		protected static void __hx_ctor_loreline_RuntimeError(global::Loreline.Runtime.RuntimeError __hx_this, string message, global::Loreline.Runtime.Position pos) {
			global::Loreline.Runtime.Error.__hx_ctor_loreline_Error(__hx_this, message, pos);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter : global::Loreline.Internal.Lang.HxObject {
		
		public Interpreter(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public Interpreter(global::Loreline.Runtime.Script script, global::Loreline.Internal.Lang.Function handleDialogue, global::Loreline.Internal.Lang.Function handleChoice, global::Loreline.Internal.Lang.Function handleFinish, global::Loreline.Internal.Ds.StringMap<object> functions) {
			global::Loreline.Runtime.Interpreter.__hx_ctor_loreline_Interpreter(this, script, handleDialogue, handleChoice, handleFinish, functions);
		}
		
		
		protected static void __hx_ctor_loreline_Interpreter(global::Loreline.Runtime.Interpreter __hx_this, global::Loreline.Runtime.Script script, global::Loreline.Internal.Lang.Function handleDialogue, global::Loreline.Internal.Lang.Function handleChoice, global::Loreline.Internal.Lang.Function handleFinish, global::Loreline.Internal.Ds.StringMap<object> functions) {
			unchecked {
				__hx_this._random = null;
				__hx_this.beatToResume = null;
				__hx_this.finishTrigger = null;
				__hx_this.flushing = false;
				__hx_this.syncCallbacks = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				__hx_this.nextScopeId = 1;
				__hx_this.stack = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				__hx_this.topLevelFunctions = new global::Loreline.Internal.Ds.StringMap<object>();
				__hx_this.nodeStates = new global::Loreline.Runtime.NodeIdMap<object>();
				__hx_this.topLevelBeats = new global::Loreline.Internal.Ds.StringMap<object>();
				__hx_this.topLevelCharacters = new global::Loreline.Internal.Ds.StringMap<object>();
				__hx_this.topLevelState = new global::Loreline.Runtime.RuntimeState(default(object), default(object));
				{
					__hx_this.script = script;
					__hx_this.handleDialogue = handleDialogue;
					__hx_this.handleChoice = handleChoice;
					__hx_this.handleFinish = handleFinish;
					__hx_this.lens = new global::Loreline.Runtime.Lens(((global::Loreline.Runtime.Script) (script) ));
					__hx_this.initializeTopLevelFunctions(functions);
					{
						int _g = 0;
						global::Loreline.Internal.Root.Array<object> _g1 = script.body;
						while (( _g < _g1.length )) {
							global::Loreline.Runtime.AstNode decl = ((global::Loreline.Runtime.AstNode) (_g1[_g]) );
							 ++ _g;
							{
								global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (decl) )));
								if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NBeatDecl))) {
									__hx_this.initializeTopLevelBeat(((global::Loreline.Runtime.NBeatDecl) (decl) ));
								}
								else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCharacterDecl))) {
									__hx_this.initializeTopLevelCharacter(((global::Loreline.Runtime.NCharacterDecl) (decl) ));
								}
								else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NStateDecl))) {
									__hx_this.initializeTopLevelState(((global::Loreline.Runtime.NStateDecl) (decl) ));
								}
								else {
								}
								
							}
							
						}
						
					}
					
				}
				
			}
		}
		
		
		public global::Loreline.Runtime.Script script;
		
		public global::Loreline.Internal.Lang.Function handleDialogue;
		
		public global::Loreline.Internal.Lang.Function handleChoice;
		
		public global::Loreline.Internal.Lang.Function handleFinish;
		
		public global::Loreline.Runtime.RuntimeState topLevelState;
		
		public global::Loreline.Internal.Ds.StringMap<object> topLevelCharacters;
		
		public global::Loreline.Internal.Ds.StringMap<object> topLevelBeats;
		
		public global::Loreline.Runtime.NodeIdMap<object> nodeStates;
		
		public global::Loreline.Internal.Ds.StringMap<object> topLevelFunctions;
		
		public global::Loreline.Internal.Root.Array<object> stack;
		
		public global::Loreline.Runtime.Lens lens;
		
		
		
		public virtual global::Loreline.Runtime.RuntimeScope get_currentScope() {
			unchecked {
				if (( this.stack.length > 0 )) {
					return ((global::Loreline.Runtime.RuntimeScope) (this.stack[( this.stack.length - 1 )]) );
				}
				else {
					return null;
				}
				
			}
		}
		
		
		public int nextScopeId;
		
		public global::Loreline.Internal.Root.Array<object> syncCallbacks;
		
		public bool flushing;
		
		public global::Loreline.Runtime.EvalNext finishTrigger;
		
		public global::Loreline.Runtime.NBeatDecl beatToResume;
		
		public virtual void start(string beatName) {
			global::Loreline.Runtime.NBeatDecl resolvedBeat = null;
			if (( beatName != null )) {
				resolvedBeat = ((global::Loreline.Runtime.NBeatDecl) ((((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).@get(beatName)).@value) );
				if (( resolvedBeat == null )) {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Beat ", beatName), " not found")) ), ((global::Loreline.Runtime.Position) (this.script.pos) )))) );
				}
				
			}
			else {
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<object> _g1 = this.script.body;
					while (( _g < _g1.length )) {
						global::Loreline.Runtime.AstNode decl = ((global::Loreline.Runtime.AstNode) (_g1[_g]) );
						 ++ _g;
						if (( decl is global::Loreline.Runtime.NBeatDecl )) {
							global::Loreline.Runtime.NBeatDecl beat = ((global::Loreline.Runtime.NBeatDecl) (decl) );
							if (( beat.name == "_" )) {
								resolvedBeat = beat;
							}
							
							break;
						}
						
					}
					
				}
				
				if (( resolvedBeat == null )) {
					int _g2 = 0;
					global::Loreline.Internal.Root.Array<object> _g3 = this.script.body;
					while (( _g2 < _g3.length )) {
						global::Loreline.Runtime.AstNode decl1 = ((global::Loreline.Runtime.AstNode) (_g3[_g2]) );
						 ++ _g2;
						if (( decl1 is global::Loreline.Runtime.NBeatDecl )) {
							resolvedBeat = ((global::Loreline.Runtime.NBeatDecl) (decl1) );
							break;
						}
						
					}
					
				}
				
				if (( resolvedBeat == null )) {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("No beats found in script") ), ((global::Loreline.Runtime.Position) (this.script.pos) )))) );
				}
				
			}
			
			this.transitionToBeat(resolvedBeat);
			this.flush();
		}
		
		
		public virtual object save() {
			unchecked {
				global::Loreline.Internal.Root.Array<object> _g = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				{
					int _g1 = 0;
					global::Loreline.Internal.Root.Array<object> _g2 = this.stack;
					while (( _g1 < _g2.length )) {
						global::Loreline.Runtime.RuntimeScope scope = ((global::Loreline.Runtime.RuntimeScope) (_g2[_g1]) );
						 ++ _g1;
						_g.push(this.serializeScope(scope));
					}
					
				}
				
				object tmp = this.serializeState(this.topLevelState);
				object tmp1 = this.serializeCharacters();
				{
					object __temp_odecl1 = this.serializeNodeStates();
					return new global::Loreline.Internal.Lang.DynamicObject(new int[]{67856200, 67859985, 283690212, 1439586474}, new object[]{_g, tmp, __temp_odecl1, tmp1}, new int[]{2096228120}, new double[]{((double) (1) )});
				}
				
			}
		}
		
		
		public virtual void restore(object saveData) {
			unchecked {
				if (( ((int) (global::Loreline.Internal.Lang.Runtime.getField_f(saveData, "version", 2096228120, true)) ) != 1 )) {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Unsupported save version: ", global::Loreline.Internal.Lang.Runtime.toString(((int) (global::Loreline.Internal.Lang.Runtime.getField_f(saveData, "version", 2096228120, true)) )))) ), ((global::Loreline.Runtime.Position) (this.script.pos) )))) );
				}
				
				this.stack.resize(0);
				this.nodeStates.map.clear();
				this.nextScopeId = 1;
				this.restoreState(this.topLevelState, global::Loreline.Internal.Lang.Runtime.getField(saveData, "state", 67859985, true));
				this.restoreCharacters(global::Loreline.Internal.Lang.Runtime.getField(saveData, "characters", 1439586474, true));
				this.restoreNodeStates(global::Loreline.Internal.Lang.Runtime.getField(saveData, "nodeStates", 283690212, true));
				if ( ! (this.restoreStack(((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (global::Loreline.Internal.Lang.Runtime.getField(saveData, "stack", 67856200, true)) ))) ))) ) {
					this.beatToResume = this.restoreBeatToResume(((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (global::Loreline.Internal.Lang.Runtime.getField(saveData, "stack", 67856200, true)) ))) ));
				}
				
			}
		}
		
		
		public virtual void resume() {
			if (( this.stack.length == 0 )) {
				this.start(null);
				return;
			}
			
			global::Loreline.Runtime.EvalNext done = this.wrapNext(((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "finish", 109002835)) ));
			this.finishTrigger = done;
			this.resumeNode(((global::Loreline.Runtime.RuntimeScope) (this.stack[0]) ).node, 0, done.cb);
			done.sync = false;
			this.flush();
		}
		
		
		public virtual object getCharacter(string name) {
			global::Loreline.Runtime.RuntimeCharacter tmp = ((global::Loreline.Runtime.RuntimeCharacter) ((((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).@get(name)).@value) );
			if (( tmp != null )) {
				return tmp.fields;
			}
			else {
				return null;
			}
			
		}
		
		
		public virtual object getCharacterField(string character, string name) {
			global::Loreline.Runtime.RuntimeCharacter tmp = ((global::Loreline.Runtime.RuntimeCharacter) ((((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).@get(character)).@value) );
			object fields = ( (( tmp != null )) ? (tmp.fields) : (null) );
			if (( fields != null )) {
				return global::Loreline.Runtime.Objects.getField(this, fields, name);
			}
			
			return null;
		}
		
		
		public virtual object serializeScope(global::Loreline.Runtime.RuntimeScope scope) {
			object result = new global::Loreline.Internal.Lang.DynamicObject(new int[]{}, new object[]{}, new int[]{23515}, new double[]{((double) (scope.id) )});
			if (( scope.beat != null )) {
				global::Loreline.Internal.Lang.Runtime.setField(result, "beat", 1091821942, this.serializeBeatReference(scope.beat));
			}
			
			if (( scope.node != null )) {
				global::Loreline.Internal.Lang.Runtime.setField(result, "node", 1225394690, this.serializeNodeReference(scope.node));
			}
			
			if (( scope.state != null )) {
				global::Loreline.Internal.Lang.Runtime.setField(result, "state", 67859985, this.serializeState(scope.state));
			}
			
			if (( scope.beats != null )) {
				global::Loreline.Internal.Root.Array<object> _g = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				{
					int _g1 = 0;
					global::Loreline.Internal.Root.Array<object> _g2 = scope.beats;
					while (( _g1 < _g2.length )) {
						global::Loreline.Runtime.NBeatDecl beat = ((global::Loreline.Runtime.NBeatDecl) (_g2[_g1]) );
						 ++ _g1;
						_g.push(this.serializeBeatReference(beat));
					}
					
				}
				
				global::Loreline.Internal.Root.Array<object> __temp_expr1 = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (global::Loreline.Internal.Lang.Runtime.setField(result, "beats", 810640957, _g)) ))) );
			}
			
			if (( scope.head != null )) {
				global::Loreline.Internal.Lang.Runtime.setField(result, "head", 1158359328, this.serializeNodeReference(scope.head));
			}
			
			return result;
		}
		
		
		public virtual object serializeState(global::Loreline.Runtime.RuntimeState state) {
			return this.serializeFields(state.fields, state.originalFields);
		}
		
		
		public virtual object serializeCharacters() {
			object result = new global::Loreline.Internal.Lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{});
			{
				global::Loreline.Internal.IMap<string, object> map = ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) );
				global::Loreline.Internal.IMap<string, object> _g_map = map;
				object _g_keys = map.keys();
				while (global::Loreline.Internal.Lang.Runtime.toBool(global::Loreline.Internal.Lang.Runtime.callField(_g_keys, "hasNext", 407283053, null))) {
					string key = global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.callField(_g_keys, "next", 1224901875, null));
					global::Loreline.Runtime.RuntimeCharacter _g_value = ((global::Loreline.Runtime.RuntimeCharacter) ((_g_map.@get(key)).@value) );
					string _g_key = key;
					string name = _g_key;
					global::Loreline.Runtime.RuntimeCharacter character = _g_value;
					{
						object serialized = this.serializeCharacter(character);
						if (( global::Loreline.Internal.Root.Reflect.fields(global::Loreline.Internal.Lang.Runtime.getField(serialized, "fields", 9342585, true)).length > 0 )) {
							global::Loreline.Internal.Root.Reflect.setField(result, name, serialized);
						}
						
					}
					
				}
				
			}
			
			return result;
		}
		
		
		public virtual object serializeNodeStates() {
			object result = new global::Loreline.Internal.Lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{});
			{
				global::Loreline.Runtime.Int64Map<object> _g_map = this.nodeStates.map;
				int _g_index = 0;
				while (( ( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length ) && ( ((object[]) (_g_map._values) )[_g_index] == null ) )) {
					 ++ _g_index;
				}
				
				while (( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length )) {
					int k1 = ((int[]) (_g_map._keys1) )[_g_index];
					int k2 = ((int[]) (_g_map._keys2) )[_g_index];
					object v = ((object[]) (_g_map._values) )[_g_index];
					 ++ _g_index;
					while (( ( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length ) && ( ((object[]) (_g_map._values) )[_g_index] == null ) )) {
						 ++ _g_index;
					}
					
					long _g_key = global::Loreline.Runtime._Node.NodeId_Impl_.fromTwoInt32(k1, k2);
					global::Loreline.Runtime.RuntimeState _g_value = ((global::Loreline.Runtime.RuntimeState) (((object) (v) )) );
					long id = _g_key;
					global::Loreline.Runtime.RuntimeState state = _g_value;
					{
						object serialized = this.serializeState(state);
						if (( global::Loreline.Internal.Root.Reflect.fields(global::Loreline.Internal.Lang.Runtime.getField(serialized, "fields", 9342585, true)).length > 0 )) {
							global::Loreline.Internal.Root.Reflect.setField(result, global::Loreline.Runtime._Node.NodeId_Impl_.toString(id), serialized);
						}
						
					}
					
				}
				
			}
			
			return result;
		}
		
		
		public virtual object serializeBeatReference(global::Loreline.Runtime.NBeatDecl beat) {
			string path = beat.name;
			global::Loreline.Runtime.NBeatDecl parentBeat = beat;
			do {
				parentBeat = ((global::Loreline.Runtime.NBeatDecl) ((this.lens.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (parentBeat) ), ((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ))).@value) );
				if (( parentBeat != null )) {
					path = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(parentBeat.name, "."), path);
				}
				
			}
			while (( parentBeat != null ));
			string tmp = global::Loreline.Runtime._Node.NodeId_Impl_.toString(beat.id);
			return new global::Loreline.Internal.Lang.DynamicObject(new int[]{23515, 1246881189}, new object[]{tmp, beat.name}, new int[]{}, new double[]{});
		}
		
		
		public virtual object serializeNodeReference(global::Loreline.Runtime.AstNode node) {
			string tmp = global::Loreline.Runtime._Node.NodeId_Impl_.toString(node.id);
			{
				string __temp_odecl1 = node.type();
				return new global::Loreline.Internal.Lang.DynamicObject(new int[]{23515, 1292432058}, new object[]{tmp, __temp_odecl1}, new int[]{}, new double[]{});
			}
			
		}
		
		
		public virtual object serializeCharacter(global::Loreline.Runtime.RuntimeCharacter character) {
			return this.serializeFields(character.fields, character.originalFields);
		}
		
		
		public virtual object serializeFields(object fields, object originalFields) {
			string type = null;
			object result = new global::Loreline.Internal.Lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{});
			if (( fields is global::Loreline.Runtime.Fields )) {
				global::System.Type cls = global::Loreline.Internal.Root.Type.getClass<object>(((object) (fields) ));
				if ( ! (global::Loreline.Internal.Lang.Runtime.typeEq(cls, null)) ) {
					type = global::Loreline.Internal.Root.Type.getClassName(cls);
				}
				
				global::Loreline.Runtime.Fields fieldMap = ((global::Loreline.Runtime.Fields) (fields) );
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<string> _g1 = fieldMap.lorelineFields(this);
					while (( _g < _g1.length )) {
						string key = _g1[_g];
						 ++ _g;
						global::Loreline.Internal.Root.Reflect.setField(result, key, this.serializeValue(fieldMap.lorelineGet(this, key)));
					}
					
				}
				
			}
			else if (( fields is global::Loreline.Internal.Ds.StringMap )) {
				global::Loreline.Internal.Ds.StringMap<object> map = ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (fields) ))) );
				{
					object key1 = ((object) (new global::Loreline.Internal.Ds._StringMap.StringMapKeyIterator<object>(((global::Loreline.Internal.Ds.StringMap<object>) (map) ))) );
					while (global::Loreline.Internal.Lang.Runtime.toBool(global::Loreline.Internal.Lang.Runtime.callField(key1, "hasNext", 407283053, null))) {
						string key2 = global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.callField(key1, "next", 1224901875, null));
						object @value = (map.@get(key2)).toDynamic();
						if (( ( ( originalFields == null ) ||  ! (global::Loreline.Runtime.Objects.fieldExists(this, originalFields, key2))  ) ||  ! (global::Loreline.Runtime.Equal.equal(this, global::Loreline.Runtime.Objects.getField(this, originalFields, key2), @value))  )) {
							global::Loreline.Internal.Root.Reflect.setField(result, key2, this.serializeValue(@value));
						}
						
					}
					
				}
				
			}
			else if (global::Loreline.Runtime.Objects.isCsDict(fields)) {
				type = "System.Collections.IDictionary";
				global::Loreline.Internal.Root.Array<string> keys = global::Loreline.Runtime.Objects.getCsDictKeys(fields);
				{
					int _g2 = 0;
					while (( _g2 < keys.length )) {
						string key3 = keys[_g2];
						 ++ _g2;
						global::Loreline.Internal.Root.Reflect.setField(result, key3, this.serializeValue(global::Loreline.Runtime.Objects.getCsDictField(fields, key3)));
					}
					
				}
				
			}
			else {
				global::System.Type cls1 = global::Loreline.Internal.Root.Type.getClass<object>(((object) (fields) ));
				if ( ! (global::Loreline.Internal.Lang.Runtime.typeEq(cls1, null)) ) {
					type = global::Loreline.Internal.Root.Type.getClassName(cls1);
				}
				
				{
					int _g3 = 0;
					global::Loreline.Internal.Root.Array<string> _g4 = global::Loreline.Internal.Root.Reflect.fields(fields);
					while (( _g3 < _g4.length )) {
						string field = _g4[_g3];
						 ++ _g3;
						object value1 = global::Loreline.Internal.Root.Reflect.getProperty(fields, field);
						if (( ( ( originalFields == null ) ||  ! (global::Loreline.Runtime.Objects.fieldExists(this, originalFields, field))  ) ||  ! (global::Loreline.Runtime.Equal.equal(this, global::Loreline.Runtime.Objects.getField(this, originalFields, field), value1))  )) {
							global::Loreline.Internal.Root.Reflect.setField(result, field, this.serializeValue(value1));
						}
						
					}
					
				}
				
			}
			
			if (( type != null )) {
				return new global::Loreline.Internal.Lang.DynamicObject(new int[]{9342585, 1292432058}, new object[]{((object) (result) ), type}, new int[]{}, new double[]{});
			}
			else {
				return new global::Loreline.Internal.Lang.DynamicObject(new int[]{9342585}, new object[]{((object) (result) )}, new int[]{}, new double[]{});
			}
			
		}
		
		
		public virtual object serializeValue(object @value) {
			if (( @value == null )) {
				return null;
			}
			
			if (( ( ( ( @value is string ) || (( ( @value is double ) || ( ( @value is int ) || ( @value is uint ) ) )) ) || (( ( ( @value is int ) || ( @value is uint ) ) || global::Loreline.Internal.Lang.Runtime.isInt(@value) )) ) || ( @value is bool ) )) {
				return @value;
			}
			
			if (global::Loreline.Runtime.Arrays.isArray(@value)) {
				global::Loreline.Internal.Root.Array<object> arr = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				int len = global::Loreline.Runtime.Arrays.arrayLength(@value);
				{
					int _g = 0;
					int _g1 = len;
					while (( _g < _g1 )) {
						int i = _g++;
						arr.push(this.serializeValue(global::Loreline.Runtime.Arrays.arrayGet(@value, i)));
					}
					
				}
				
				return arr;
			}
			
			return this.serializeFields(@value, null);
		}
		
		
		public virtual void resumeNode(global::Loreline.Runtime.AstNode node, int scopeLevel, global::Loreline.Internal.Lang.Function next) {
			unchecked {
				int lastLevel = ( this.stack.length - 1 );
				bool isLastNode = ( scopeLevel >= this.stack.length );
				if ( ! (isLastNode) ) {
					{
						global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )));
						if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NBeatDecl))) {
							this.resumeBeatRun(((global::Loreline.Runtime.NBeatDecl) (node) ), scopeLevel, next);
						}
						else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCall))) {
							if (this.isBeatCall(node, new global::Loreline.Internal.Lang.Null<int>(scopeLevel, true))) {
								this.resumeCall(((global::Loreline.Runtime.NCall) (node) ), scopeLevel, next);
							}
							else {
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Resume execution not supported from node within stack: ", global::Loreline.Internal.Root.Type.getClassName(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) ))))) ), ((global::Loreline.Runtime.Position) (node.pos) )))) );
							}
							
						}
						else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NChoiceOption))) {
							this.resumeChoiceOption(((global::Loreline.Runtime.NChoiceOption) (node) ), scopeLevel, next);
						}
						else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NIfStatement))) {
							this.resumeIf(((global::Loreline.Runtime.NIfStatement) (node) ), scopeLevel, next);
						}
						else {
							throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Resume execution not supported from node within stack: ", global::Loreline.Internal.Root.Type.getClassName(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) ))))) ), ((global::Loreline.Runtime.Position) (node.pos) )))) );
						}
						
					}
					
				}
				else {
					{
						global::System.Type __temp_switch2 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )));
						if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch2, typeof(global::Loreline.Runtime.NCall))) {
							if ( ! (this.isBeatCall(node, default(global::Loreline.Internal.Lang.Null<int>))) ) {
								this.evalCall(((global::Loreline.Runtime.NCall) (node) ), next);
							}
							else {
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Resume execution not supported from last node: ", global::Loreline.Internal.Root.Type.getClassName(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) ))))) ), ((global::Loreline.Runtime.Position) (node.pos) )))) );
							}
							
						}
						else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch2, typeof(global::Loreline.Runtime.NChoiceStatement))) {
							this.evalChoice(((global::Loreline.Runtime.NChoiceStatement) (node) ), next);
						}
						else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch2, typeof(global::Loreline.Runtime.NDialogueStatement))) {
							this.evalDialogue(((global::Loreline.Runtime.NDialogueStatement) (node) ), next);
						}
						else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch2, typeof(global::Loreline.Runtime.NTextStatement))) {
							this.evalText(((global::Loreline.Runtime.NTextStatement) (node) ), next);
						}
						else {
							throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Resume execution not supported from last node: ", global::Loreline.Internal.Root.Type.getClassName(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) ))))) ), ((global::Loreline.Runtime.Position) (node.pos) )))) );
						}
						
					}
					
				}
				
			}
		}
		
		
		public virtual void resumeNodeBody(global::Loreline.Runtime.AstNode node, int scopeLevel, global::Loreline.Internal.Root.Array<object> body, global::Loreline.Internal.Lang.Function next) {
			unchecked {
				global::Loreline.Runtime.RuntimeScope currentScope = ((global::Loreline.Runtime.RuntimeScope) (this.stack[scopeLevel]) );
				int[] index = new int[]{0};
				int[] resumeIndex = new int[]{-1};
				if (( ( currentScope.head == null ) && ( scopeLevel < ( this.stack.length - 1 ) ) )) {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Cannot resume through a body with a no-headed scope that is not at the bottom of the stack") ), ((global::Loreline.Runtime.Position) (node.pos) )))) );
				}
				
				if (( currentScope.head != null )) {
					index[0] = body.indexOf(currentScope.head, default(global::Loreline.Internal.Lang.Null<int>));
					resumeIndex[0] = index[0];
					if (( index[0] == -1 )) {
						throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Failed to resolve head in scope when resuming through body") ), ((global::Loreline.Runtime.Position) (node.pos) )))) );
					}
					
				}
				
				global::Loreline.Internal.Lang.Function[] moveNext = new global::Loreline.Internal.Lang.Function[]{null};
				global::Loreline.Runtime.Interpreter _gthis = this;
				moveNext[0] = new global::Loreline.Runtime.Interpreter_resumeNodeBody_942__Fun(scopeLevel, resumeIndex, next, moveNext, index, currentScope, body, _gthis);
				((global::Loreline.Internal.Lang.Function) (moveNext[0]) ).__hx_invoke0_o();
			}
		}
		
		
		public virtual void resumeBeatRun(global::Loreline.Runtime.NBeatDecl beat, int scopeLevel, global::Loreline.Internal.Lang.Function next) {
			this.resumeNodeBody(beat, scopeLevel, beat.body, next);
		}
		
		
		public virtual void resumeChoiceOption(global::Loreline.Runtime.NChoiceOption option, int scopeLevel, global::Loreline.Internal.Lang.Function next) {
			this.resumeNodeBody(option, scopeLevel, option.body, next);
		}
		
		
		public virtual void resumeIf(global::Loreline.Runtime.NIfStatement ifStmt, int scopeLevel, global::Loreline.Internal.Lang.Function next) {
			unchecked {
				global::Loreline.Runtime.RuntimeScope currentScope = ((global::Loreline.Runtime.RuntimeScope) (this.stack[scopeLevel]) );
				if (( currentScope.head == null )) {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Failed to resolve head in scope when resuming through condition") ), ((global::Loreline.Runtime.Position) (ifStmt.pos) )))) );
				}
				
				bool isTrue = ( ifStmt.thenBranch.body.indexOf(currentScope.head, default(global::Loreline.Internal.Lang.Null<int>)) != -1 );
				global::Loreline.Runtime.NBlock branch = ( (isTrue) ? (ifStmt.thenBranch) : (ifStmt.elseBranch) );
				if (( ( branch != null ) && ( branch.body.length > 0 ) )) {
					this.resumeNodeBody(branch, scopeLevel, branch.body, next);
				}
				else {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Failed to resume condition: invalid scope") ), ((global::Loreline.Runtime.Position) (ifStmt.pos) )))) );
				}
				
			}
		}
		
		
		public virtual void resumeCall(global::Loreline.Runtime.NCall call, int scopeLevel, global::Loreline.Internal.Lang.Function next) {
			unchecked {
				if (( call.target is global::Loreline.Runtime.NAccess )) {
					global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (call.target) );
					if (( access.target == null )) {
						string beatName = access.name;
						global::Loreline.Runtime.NBeatDecl resolvedBeat = null;
						int i = ( this.stack.length - 1 );
						while (( i >= 0 )) {
							global::Loreline.Runtime.RuntimeScope scope = ((global::Loreline.Runtime.RuntimeScope) (this.stack[i]) );
							global::Loreline.Runtime.NBeatDecl beatInScope = scope.beatByName(beatName);
							if (( beatInScope != null )) {
								resolvedBeat = beatInScope;
								break;
							}
							
							 -- i;
						}
						
						if (( ( resolvedBeat == null ) && ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).exists(beatName) )) {
							resolvedBeat = ((global::Loreline.Runtime.NBeatDecl) ((((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).@get(beatName)).@value) );
						}
						
						if (( resolvedBeat != null )) {
							this.resumeBeatRun(resolvedBeat, scopeLevel, next);
							return;
						}
						
					}
					
				}
				
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Cannot resume through a function call that is not at the bottom of the stack") ), ((global::Loreline.Runtime.Position) (call.pos) )))) );
			}
		}
		
		
		public virtual bool restoreStack(global::Loreline.Internal.Root.Array<object> savedStack) {
			unchecked {
				global::Loreline.Internal.Root.Array<object> result = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				int i = ( savedStack.length - 1 );
				while (( i >= 0 )) {
					object savedScope = savedStack[i];
					global::Loreline.Runtime.NBeatDecl beat = this.restoreBeat(global::Loreline.Internal.Lang.Runtime.getField(savedScope, "beat", 1091821942, true));
					if (( beat == null )) {
						return false;
					}
					
					long savedBeatId = global::Loreline.Runtime._Node.NodeId_Impl_.fromString(global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(global::Loreline.Internal.Lang.Runtime.getField(savedScope, "beat", 1091821942, true), "id", 23515, true)));
					object savedNode = global::Loreline.Internal.Lang.Runtime.getField(savedScope, "node", 1225394690, true);
					global::Loreline.Runtime.AstNode node = ( (( savedNode != null )) ? (this.restoreNode(savedNode, savedBeatId, beat)) : (null) );
					if (( ( savedNode != null ) && ( node == null ) )) {
						return false;
					}
					
					global::Loreline.Internal.Root.Array<object> beats = new global::Loreline.Internal.Root.Array<object>(new object[]{});
					if (( ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (global::Loreline.Internal.Lang.Runtime.getField(savedScope, "beats", 810640957, true)) ))) ) != null )) {
						int _g = 0;
						global::Loreline.Internal.Root.Array<object> _g1 = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (global::Loreline.Internal.Lang.Runtime.getField(savedScope, "beats", 810640957, true)) ))) );
						while (( _g < _g1.length )) {
							object savedBeat = _g1[_g];
							 ++ _g;
							global::Loreline.Runtime.NBeatDecl beatInScope = this.restoreBeat(savedBeat);
							if (( beatInScope == null )) {
								return false;
							}
							
							beats.push(beatInScope);
						}
						
					}
					
					object savedState = global::Loreline.Internal.Lang.Runtime.getField(savedScope, "state", 67859985, true);
					global::Loreline.Runtime.RuntimeState state = ( (( savedState != null )) ? (this.restoreState(null, ((object) (global::Loreline.Internal.Lang.Runtime.getField(savedScope, "state", 67859985, true)) ))) : (null) );
					object savedHead = global::Loreline.Internal.Lang.Runtime.getField(savedScope, "head", 1158359328, true);
					global::Loreline.Runtime.AstNode head = ( (( savedHead != null )) ? (this.restoreNode(savedHead, savedBeatId, beat)) : (null) );
					if (( ( savedHead != null ) && ( head == null ) )) {
						return false;
					}
					
					result.push(new global::Loreline.Runtime.RuntimeScope(default(global::Loreline.Internal.Lang.Null<int>), ((global::Loreline.Runtime.NBeatDecl) (beat) ), ((global::Loreline.Runtime.AstNode) (node) ), ((global::Loreline.Internal.Root.Array<object>) (beats) ), ((global::Loreline.Runtime.RuntimeState) (state) ), ((global::Loreline.Runtime.AstNode) (head) )));
					 -- i;
				}
				
				i = ( result.length - 1 );
				while (( i >= 0 )) {
					this.push(((global::Loreline.Runtime.RuntimeScope) (result[i]) ));
					 -- i;
				}
				
				return true;
			}
		}
		
		
		public virtual global::Loreline.Runtime.NBeatDecl restoreBeatToResume(global::Loreline.Internal.Root.Array<object> savedStack) {
			global::Loreline.Runtime.NBeatDecl beat = null;
			if (( savedStack.length > 0 )) {
				object savedScope = savedStack[0];
				beat = this.restoreBeat(global::Loreline.Internal.Lang.Runtime.getField(savedScope, "beat", 1091821942, true));
				if (( beat != null )) {
					global::Loreline.Runtime.NBeatDecl parentBeat = beat;
					do {
						parentBeat = ((global::Loreline.Runtime.NBeatDecl) ((this.lens.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (parentBeat) ), ((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ))).@value) );
						if (( parentBeat != null )) {
							beat = parentBeat;
						}
						
					}
					while (( parentBeat != null ));
				}
				
			}
			
			return beat;
		}
		
		
		public virtual global::Loreline.Runtime.AstNode restoreNode(object savedNode, long savedBeatId, global::Loreline.Runtime.NBeatDecl beat) {
			unchecked {
				int high = ( ( ((int) (( ((long) (beat.id) ) >> 32 )) ) >> 16 ) & 65535 );
				int high1 = ( ( ((int) (( ((long) (savedBeatId) ) >> 32 )) ) >> 16 ) & 65535 );
				int sectionOffset = ( ( (( (( high >= 32768 )) ? (( high - 65536 )) : (high) )) + 32768 ) - (( (( (( high1 >= 32768 )) ? (( high1 - 65536 )) : (high1) )) + 32768 )) );
				long nodeId = global::Loreline.Runtime._Node.NodeId_Impl_.fromString(global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(savedNode, "id", 23515, true)));
				if (global::Loreline.Runtime._Node.NodeId_Impl_.@equals(nodeId, savedBeatId)) {
					return beat;
				}
				
				{
					int high2 = ( ( ((int) (( ((long) (nodeId) ) >> 32 )) ) >> 16 ) & 65535 );
					int section = ( ( (( (( high2 >= 32768 )) ? (( high2 - 65536 )) : (high2) )) + 32768 ) + sectionOffset );
					int @value = ( section - 32768 );
					if (( @value < 0 )) {
						@value = ( ( @value + 65536 ) & 65535 );
					}
					
					nodeId = ((long) (( ( ((long) (((int) (( ( ((int) (( ((long) (nodeId) ) >> 32 )) ) & 65535 ) | ( @value << 16 ) )) )) ) << 32 ) | ( ((long) (((int) (((long) (nodeId) )) )) ) & 0xffffffffL ) )) );
				}
				
				global::Loreline.Runtime.Node node = this.lens.getNodeById(nodeId);
				if (( ( node != null ) && ( node.type() == global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(savedNode, "type", 1292432058, true)) ) )) {
					return ((global::Loreline.Runtime.AstNode) (node) );
				}
				
				return null;
			}
		}
		
		
		public virtual global::Loreline.Runtime.NBeatDecl restoreBeat(object beatRef) {
			return this.lens.findBeatByPathFromNode(global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(beatRef, "path", 1246881189, true)), this.script);
		}
		
		
		public virtual global::Loreline.Runtime.RuntimeState restoreState(global::Loreline.Runtime.RuntimeState state, object data) {
			object tmp = ( (( state != null )) ? (state.fields) : (null) );
			object fields = this.restoreFields(( (( tmp != null )) ? (tmp) : (null) ), data);
			if (( state == null )) {
				state = new global::Loreline.Runtime.RuntimeState(((object) (fields) ), default(object));
			}
			
			return state;
		}
		
		
		public virtual void restoreCharacters(object data) {
			int _g = 0;
			global::Loreline.Internal.Root.Array<string> _g1 = global::Loreline.Internal.Root.Reflect.fields(data);
			while (( _g < _g1.length )) {
				string name = _g1[_g];
				 ++ _g;
				object characterData = global::Loreline.Internal.Root.Reflect.field(data, name);
				if (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).exists(name)) {
					this.restoreCharacter(((global::Loreline.Runtime.RuntimeCharacter) ((((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).@get(name)).@value) ), characterData);
				}
				else {
					global::Loreline.Runtime.RuntimeCharacter newCharacter = this.restoreCharacter(null, characterData);
					((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).@set(name, newCharacter);
				}
				
			}
			
		}
		
		
		public virtual void restoreNodeStates(object data) {
			unchecked {
				int _g = 0;
				global::Loreline.Internal.Root.Array<string> _g1 = global::Loreline.Internal.Root.Reflect.fields(data);
				while (( _g < _g1.length )) {
					string idStr = _g1[_g];
					 ++ _g;
					long id = global::Loreline.Runtime._Node.NodeId_Impl_.fromString(idStr);
					object stateData = global::Loreline.Internal.Root.Reflect.field(this.nodeStates, idStr);
					global::Loreline.Runtime.RuntimeState nodeState = this.restoreState(null, stateData);
					{
						long key = ((long) (id) );
						this.nodeStates.map._set(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ), nodeState);
					}
					
				}
				
			}
		}
		
		
		public virtual global::Loreline.Runtime.RuntimeCharacter restoreCharacter(global::Loreline.Runtime.RuntimeCharacter character, object data) {
			object tmp = ( (( character != null )) ? (character.fields) : (null) );
			object fields = this.restoreFields(( (( tmp != null )) ? (tmp) : (null) ), data);
			if (( character == null )) {
				character = new global::Loreline.Runtime.RuntimeCharacter(((object) (fields) ));
			}
			
			return character;
		}
		
		
		public virtual object restoreFields(object target, object savedFields) {
			if (( ( savedFields == null ) || ( global::Loreline.Internal.Lang.Runtime.getField(savedFields, "fields", 9342585, true) == null ) )) {
				return target;
			}
			
			if (( target == null )) {
				target = global::Loreline.Runtime.Objects.createFields(this, global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(savedFields, "type", 1292432058, true)));
			}
			
			object data = global::Loreline.Internal.Lang.Runtime.getField(savedFields, "fields", 9342585, true);
			if (( target is global::Loreline.Runtime.Fields )) {
				global::Loreline.Runtime.Fields fieldMap = ((global::Loreline.Runtime.Fields) (target) );
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<string> _g1 = global::Loreline.Internal.Root.Reflect.fields(data);
					while (( _g < _g1.length )) {
						string key = _g1[_g];
						 ++ _g;
						fieldMap.lorelineSet(this, key, this.restoreValue(global::Loreline.Internal.Root.Reflect.field(data, key)));
					}
					
				}
				
			}
			else if (( target is global::Loreline.Internal.Ds.StringMap )) {
				global::Loreline.Internal.Ds.StringMap<object> map = ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (target) ))) );
				{
					int _g2 = 0;
					global::Loreline.Internal.Root.Array<string> _g3 = global::Loreline.Internal.Root.Reflect.fields(data);
					while (( _g2 < _g3.length )) {
						string key1 = _g3[_g2];
						 ++ _g2;
						map.@set(key1, this.restoreValue(global::Loreline.Internal.Root.Reflect.field(data, key1)));
					}
					
				}
				
			}
			else if (global::Loreline.Runtime.Objects.isCsDict(target)) {
				int _g4 = 0;
				global::Loreline.Internal.Root.Array<string> _g5 = global::Loreline.Internal.Root.Reflect.fields(data);
				while (( _g4 < _g5.length )) {
					string key2 = _g5[_g4];
					 ++ _g4;
					global::Loreline.Runtime.Objects.setCsDictField(target, key2, this.restoreValue(global::Loreline.Internal.Root.Reflect.field(data, key2)));
				}
				
			}
			else {
				int _g6 = 0;
				global::Loreline.Internal.Root.Array<string> _g7 = global::Loreline.Internal.Root.Reflect.fields(data);
				while (( _g6 < _g7.length )) {
					string field = _g7[_g6];
					 ++ _g6;
					global::Loreline.Internal.Root.Reflect.setField(target, field, this.restoreValue(global::Loreline.Internal.Root.Reflect.field(data, field)));
				}
				
			}
			
			return target;
		}
		
		
		public virtual object restoreValue(object @value) {
			if (( @value == null )) {
				return null;
			}
			
			if (( ( ( ( @value is string ) || (( ( @value is double ) || ( ( @value is int ) || ( @value is uint ) ) )) ) || (( ( ( @value is int ) || ( @value is uint ) ) || global::Loreline.Internal.Lang.Runtime.isInt(@value) )) ) || ( @value is bool ) )) {
				return @value;
			}
			
			if (global::Loreline.Runtime.Arrays.isArray(@value)) {
				int len = global::Loreline.Runtime.Arrays.arrayLength(@value);
				object arr = global::Loreline.Runtime.Arrays.createArray();
				{
					int _g = 0;
					int _g1 = len;
					while (( _g < _g1 )) {
						int i = _g++;
						global::Loreline.Runtime.Arrays.arrayPush(arr, this.restoreValue(global::Loreline.Runtime.Arrays.arrayGet(@value, i)));
					}
					
				}
				
				return arr;
			}
			
			return this.restoreFields(null, ((object) (@value) ));
		}
		
		
		public global::Loreline.Runtime.Random _random;
		
		public virtual double random() {
			unchecked {
				if (( this._random == null )) {
					this._random = new global::Loreline.Runtime.Random(default(global::Loreline.Internal.Lang.Null<double>));
				}
				
				global::Loreline.Runtime.Random _this = this._random;
				return ( ( (_this.seed = ( ( _this.seed * 16807 ) % 2147483647 )) / 2147483647 ) + 0.000000000233 );
			}
		}
		
		
		public virtual void initializeTopLevelFunctions(global::Loreline.Internal.Ds.StringMap<object> functions) {
			global::Loreline.Runtime.Interpreter _gthis = this;
			((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelFunctions) )) ))) ).@set("random", ((object) (new global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1440__Fun(_gthis)) ));
			((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelFunctions) )) ))) ).@set("chance", ((object) (new global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1444__Fun(_gthis)) ));
			((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelFunctions) )) ))) ).@set("wait", ((object) (( (( global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1448__Fun.__hx_current != null )) ? (global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1448__Fun.__hx_current) : (global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1448__Fun.__hx_current = ((global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1448__Fun) (new global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1448__Fun()) )) )) ));
			if (( functions != null )) {
				global::Loreline.Internal.IMap<string, object> map = functions;
				global::Loreline.Internal.IMap<string, object> _g_map = map;
				object _g_keys = map.keys();
				while (global::Loreline.Internal.Lang.Runtime.toBool(global::Loreline.Internal.Lang.Runtime.callField(_g_keys, "hasNext", 407283053, null))) {
					string key = global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.callField(_g_keys, "next", 1224901875, null));
					object _g_value = (_g_map.@get(key)).toDynamic();
					string _g_key = key;
					string key1 = _g_key;
					object func = _g_value;
					((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelFunctions) )) ))) ).@set(key1, func);
				}
				
			}
			
		}
		
		
		public virtual global::Loreline.Runtime.EvalNext wrapNext(global::Loreline.Internal.Lang.Function cb) {
			global::Loreline.Runtime.EvalNext wrapped = new global::Loreline.Runtime.EvalNext();
			wrapped.sync = true;
			global::Loreline.Runtime.Interpreter _gthis = this;
			wrapped.cb = new global::Loreline.Runtime.Interpreter_wrapNext_1480__Fun(wrapped, cb, _gthis);
			return wrapped;
		}
		
		
		public virtual void flush() {
			if (this.flushing) {
				return;
			}
			
			this.flushing = true;
			if (( this.syncCallbacks != null )) {
				while (( this.syncCallbacks.length > 0 )) {
					global::Loreline.Internal.Lang.Function cb = ((global::Loreline.Internal.Lang.Function) ((this.syncCallbacks.shift()).@value) );
					global::Loreline.Internal.Root.Array<object> prevSyncCallbacks = this.syncCallbacks;
					this.syncCallbacks = null;
					((global::Loreline.Internal.Lang.Function) (cb) ).__hx_invoke0_o();
					if (( this.syncCallbacks != null )) {
						int _g = 0;
						int _g1 = this.syncCallbacks.length;
						while (( _g < _g1 )) {
							int i = _g++;
							prevSyncCallbacks.unshift(((global::Loreline.Internal.Lang.Function) (this.syncCallbacks[i]) ));
						}
						
					}
					
					this.syncCallbacks = prevSyncCallbacks;
				}
				
			}
			
			this.flushing = false;
		}
		
		
		public virtual bool pop() {
			if (( this.stack.length > 0 )) {
				global::Loreline.Runtime.RuntimeScope __temp_expr1 = ((global::Loreline.Runtime.RuntimeScope) ((this.stack.pop()).@value) );
				return true;
			}
			
			return false;
		}
		
		
		public virtual void push(global::Loreline.Runtime.RuntimeScope scope) {
			scope.id = this.nextScopeId++;
			this.stack.push(scope);
		}
		
		
		public virtual void initializeTopLevelState(global::Loreline.Runtime.NStateDecl state) {
			if (state.temporary) {
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Top level temporary states are not allowed") ), ((global::Loreline.Runtime.Position) (state.pos) )))) );
			}
			
			{
				int _g = 0;
				global::Loreline.Internal.Root.Array<object> _g1 = state.fields;
				while (( _g < _g1.length )) {
					global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
					 ++ _g;
					object evaluated = this.evaluateExpression(field.@value);
					global::Loreline.Runtime.Objects.setField(this, this.topLevelState.fields, field.name, evaluated);
					if (this.isOriginalScriptExpression(field.@value)) {
						global::Loreline.Runtime.Objects.setField(this, this.topLevelState.originalFields, field.name, evaluated);
					}
					
				}
				
			}
			
		}
		
		
		public virtual void initializeTopLevelBeat(global::Loreline.Runtime.NBeatDecl beat) {
			if (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).exists(beat.name)) {
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Duplicate top level beat: ", beat.name)) ), ((global::Loreline.Runtime.Position) (beat.pos) )))) );
			}
			
			((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).@set(beat.name, beat);
		}
		
		
		public virtual void initializeTopLevelCharacter(global::Loreline.Runtime.NCharacterDecl character) {
			if (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).exists(character.name)) {
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Duplicate top level character: ", character.name)) ), ((global::Loreline.Runtime.Position) (character.pos) )))) );
			}
			
			global::Loreline.Runtime.RuntimeCharacter characterState = new global::Loreline.Runtime.RuntimeCharacter(default(object));
			((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).@set(character.name, characterState);
			{
				int _g = 0;
				global::Loreline.Internal.Root.Array<object> _g1 = character.fields;
				while (( _g < _g1.length )) {
					global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
					 ++ _g;
					object evaluated = this.evaluateExpression(field.@value);
					global::Loreline.Runtime.Objects.setField(this, characterState.fields, field.name, evaluated);
					if (this.isOriginalScriptExpression(field.@value)) {
						global::Loreline.Runtime.Objects.setField(this, characterState.originalFields, field.name, evaluated);
					}
					
				}
				
			}
			
		}
		
		
		public virtual void initializeState(global::Loreline.Runtime.NStateDecl state, global::Loreline.Runtime.RuntimeScope scope) {
			unchecked {
				global::Loreline.Runtime.RuntimeState runtimeState = null;
				if (state.temporary) {
					if (( scope.state == null )) {
						scope.state = new global::Loreline.Runtime.RuntimeState(default(object), default(object));
					}
					
					runtimeState = scope.state;
				}
				else {
					long key = ((long) (scope.node.id) );
					runtimeState = ((global::Loreline.Runtime.RuntimeState) ((this.nodeStates.map._get(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))).@value) );
					if (( runtimeState == null )) {
						runtimeState = new global::Loreline.Runtime.RuntimeState(default(object), default(object));
						{
							long key1 = ((long) (scope.node.id) );
							this.nodeStates.map._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), runtimeState);
						}
						
					}
					
				}
				
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<object> _g1 = state.fields;
					while (( _g < _g1.length )) {
						global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
						 ++ _g;
						object evaluated = this.evaluateExpression(field.@value);
						global::Loreline.Runtime.Objects.setField(this, runtimeState.fields, field.name, evaluated);
						if ((  ! (state.temporary)  && this.isOriginalScriptExpression(field.@value) )) {
							global::Loreline.Runtime.Objects.setField(this, runtimeState.originalFields, field.name, evaluated);
						}
						
					}
					
				}
				
			}
		}
		
		
		public virtual void finish() {
			this.finishTrigger = null;
			if (( this.handleFinish != null )) {
				this.handleFinish.__hx_invoke1_o(default(double), this);
			}
			
		}
		
		
		public virtual void transitionToBeat(global::Loreline.Runtime.NBeatDecl beat) {
			unchecked {
				while (this.pop()) {
				}
				
				this.nextScopeId = 1;
				global::Loreline.Runtime.EvalNext done = this.wrapNext(((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "finish", 109002835)) ));
				this.finishTrigger = done;
				this.evalBeatRun(beat, done.cb);
				done.sync = false;
			}
		}
		
		
		public virtual void evalNode(global::Loreline.Runtime.AstNode node, global::Loreline.Internal.Lang.Function next) {
			{
				global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )));
				if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NAssign))) {
					this.evalAssignment(((global::Loreline.Runtime.NAssign) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NBeatDecl))) {
					this.evalBeatDecl(((global::Loreline.Runtime.NBeatDecl) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCall))) {
					this.evalCall(((global::Loreline.Runtime.NCall) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NChoiceOption))) {
					this.evalChoiceOption(((global::Loreline.Runtime.NChoiceOption) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NChoiceStatement))) {
					this.evalChoice(((global::Loreline.Runtime.NChoiceStatement) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NDialogueStatement))) {
					this.evalDialogue(((global::Loreline.Runtime.NDialogueStatement) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NIfStatement))) {
					this.evalIf(((global::Loreline.Runtime.NIfStatement) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NStateDecl))) {
					this.evalStateDecl(((global::Loreline.Runtime.NStateDecl) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NTextStatement))) {
					this.evalText(((global::Loreline.Runtime.NTextStatement) (node) ), next);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NTransition))) {
					this.evalTransition(((global::Loreline.Runtime.NTransition) (node) ));
				}
				else {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Unsupported node type: ", global::Loreline.Internal.Root.Type.getClassName(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) ))))) ), ((global::Loreline.Runtime.Position) (node.pos) )))) );
				}
				
			}
			
		}
		
		
		public virtual void evalBeatDecl(global::Loreline.Runtime.NBeatDecl beat, global::Loreline.Internal.Lang.Function next) {
			if (( this.get_currentScope().beats == null )) {
				this.get_currentScope().beats = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			}
			else if (( this.get_currentScope().beatByName(beat.name) != null )) {
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Duplicate beat with name: ", beat.name)) ), ((global::Loreline.Runtime.Position) (beat.pos) )))) );
			}
			
			this.get_currentScope().beats.push(beat);
			next.__hx_invoke0_o();
		}
		
		
		public virtual void evalNodeBody(global::Loreline.Runtime.NBeatDecl beat, global::Loreline.Runtime.AstNode node, global::Loreline.Internal.Root.Array<object> body, global::Loreline.Internal.Lang.Function next) {
			this.push(new global::Loreline.Runtime.RuntimeScope(default(global::Loreline.Internal.Lang.Null<int>), ((global::Loreline.Runtime.NBeatDecl) (beat) ), ((global::Loreline.Runtime.AstNode) (node) ), default(global::Loreline.Internal.Root.Array<object>), default(global::Loreline.Runtime.RuntimeState), default(global::Loreline.Runtime.AstNode)));
			int[] index = new int[]{0};
			global::Loreline.Internal.Lang.Function[] moveNext = new global::Loreline.Internal.Lang.Function[]{null};
			global::Loreline.Runtime.Interpreter _gthis = this;
			moveNext[0] = new global::Loreline.Runtime.Interpreter_evalNodeBody_1797__Fun(next, moveNext, index, body, _gthis);
			((global::Loreline.Internal.Lang.Function) (moveNext[0]) ).__hx_invoke0_o();
		}
		
		
		public virtual void evalBeatRun(global::Loreline.Runtime.NBeatDecl beat, global::Loreline.Internal.Lang.Function next) {
			this.evalNodeBody(beat, beat, beat.body, next);
		}
		
		
		public virtual void evalStateDecl(global::Loreline.Runtime.NStateDecl state, global::Loreline.Internal.Lang.Function next) {
			this.initializeState(state, this.get_currentScope());
			next.__hx_invoke0_o();
		}
		
		
		public virtual void evalText(global::Loreline.Runtime.NTextStatement text, global::Loreline.Internal.Lang.Function next) {
			object content = this.evaluateString(text.content);
			this.handleDialogue.__hx_invoke5_o(default(double), this, default(double), null, default(double), global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(content, "text", 1291439277, true)), default(double), ((global::Loreline.Internal.Root.Array<global::Loreline.Runtime.TextTag>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<global::Loreline.Runtime.TextTag>(((global::Loreline.Internal.Root.Array) (global::Loreline.Internal.Lang.Runtime.getField(content, "tags", 1291236569, true)) ))) ), default(double), next);
		}
		
		
		public virtual void evalDialogue(global::Loreline.Runtime.NDialogueStatement dialogue, global::Loreline.Internal.Lang.Function next) {
			object content = this.evaluateString(dialogue.content);
			this.handleDialogue.__hx_invoke5_o(default(double), this, default(double), dialogue.character, default(double), global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(content, "text", 1291439277, true)), default(double), ((global::Loreline.Internal.Root.Array<global::Loreline.Runtime.TextTag>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<global::Loreline.Runtime.TextTag>(((global::Loreline.Internal.Root.Array) (global::Loreline.Internal.Lang.Runtime.getField(content, "tags", 1291236569, true)) ))) ), default(double), next);
		}
		
		
		public virtual void evalChoice(global::Loreline.Runtime.NChoiceStatement choice, global::Loreline.Internal.Lang.Function next) {
			unchecked {
				global::Loreline.Internal.Root.Array<global::Loreline.Runtime.ChoiceOption> options = new global::Loreline.Internal.Root.Array<global::Loreline.Runtime.ChoiceOption>(new global::Loreline.Runtime.ChoiceOption[]{});
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<object> _g1 = choice.options;
					while (( _g < _g1.length )) {
						global::Loreline.Runtime.NChoiceOption option = ((global::Loreline.Runtime.NChoiceOption) (_g1[_g]) );
						 ++ _g;
						bool enabled = ( ( option.condition == null ) || this.evaluateCondition(option.condition) );
						object content = this.evaluateString(option.text);
						options.push(new global::Loreline.Runtime.ChoiceOption(global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(content, "text", 1291439277, true)), ((global::Loreline.Internal.Root.Array<global::Loreline.Runtime.TextTag>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<global::Loreline.Runtime.TextTag>(((global::Loreline.Internal.Root.Array) (global::Loreline.Internal.Lang.Runtime.getField(content, "tags", 1291236569, true)) ))) ), enabled));
					}
					
				}
				
				int[] index = new int[]{-1};
				global::Loreline.Runtime.Interpreter _gthis = this;
				global::Loreline.Runtime.EvalNext choiceCallback = this.wrapNext(new global::Loreline.Runtime.Interpreter_evalChoice_1919__Fun(next, index, choice, _gthis));
				this.handleChoice.__hx_invoke3_o(default(double), this, default(double), options, default(double), new global::Loreline.Runtime.Interpreter_evalChoice_1930__Fun(index, choiceCallback));
				choiceCallback.sync = false;
			}
		}
		
		
		public virtual void evalChoiceOption(global::Loreline.Runtime.NChoiceOption option, global::Loreline.Internal.Lang.Function next) {
			this.evalNodeBody(this.get_currentScope().beat, option, option.body, next);
		}
		
		
		public virtual void evalIf(global::Loreline.Runtime.NIfStatement ifStmt, global::Loreline.Internal.Lang.Function next) {
			bool isTrue = this.evaluateCondition(ifStmt.condition);
			global::Loreline.Runtime.NBlock branch = ( (isTrue) ? (ifStmt.thenBranch) : (ifStmt.elseBranch) );
			if (( ( branch != null ) && ( branch.body.length > 0 ) )) {
				this.evalNodeBody(this.get_currentScope().beat, branch, branch.body, next);
			}
			else {
				next.__hx_invoke0_o();
			}
			
		}
		
		
		public virtual void evalAssignment(global::Loreline.Runtime.NAssign assign, global::Loreline.Internal.Lang.Function next) {
			unchecked {
				global::Loreline.Runtime.RuntimeAccess target = this.resolveAssignmentTarget(assign.target);
				object @value = this.evaluateExpression(assign.@value);
				object currentValue = null;
				switch (assign.op._hx_index) {
					case 13:
					{
						currentValue = @value;
						break;
					}
					
					
					case 14:
					{
						currentValue = this.performOperation(global::Loreline.Runtime.TokenType.OpPlus, this.readAccess(target), @value, assign.pos);
						break;
					}
					
					
					case 15:
					{
						currentValue = this.performOperation(global::Loreline.Runtime.TokenType.OpMinus, this.readAccess(target), @value, assign.pos);
						break;
					}
					
					
					case 16:
					{
						currentValue = this.performOperation(global::Loreline.Runtime.TokenType.OpMultiply, this.readAccess(target), @value, assign.pos);
						break;
					}
					
					
					case 17:
					{
						currentValue = this.performOperation(global::Loreline.Runtime.TokenType.OpDivide, this.readAccess(target), @value, assign.pos);
						break;
					}
					
					
					default:
					{
						throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Invalid assignment operator") ), ((global::Loreline.Runtime.Position) (assign.pos) )))) );
					}
					
				}
				
				this.writeAccess(target, currentValue);
				next.__hx_invoke0_o();
			}
		}
		
		
		public virtual bool isOriginalScriptExpression(global::Loreline.Runtime.NExpr expr) {
			unchecked {
				{
					global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (expr) )));
					if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NBinary))) {
						global::Loreline.Runtime.NBinary bin = ((global::Loreline.Runtime.NBinary) (expr) );
						if (this.isOriginalScriptExpression(bin.left)) {
							return this.isOriginalScriptExpression(bin.right);
						}
						else {
							return false;
						}
						
					}
					else if (( global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NAccess)) || ( global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NArrayAccess)) || global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCall)) ) )) {
						return false;
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NLiteral))) {
						global::Loreline.Runtime.NLiteral lit = ((global::Loreline.Runtime.NLiteral) (expr) );
						global::Loreline.Runtime.LiteralType _g = lit.literalType;
						switch (_g._hx_index) {
							case 0:
							case 1:
							case 2:
							{
								return true;
							}
							
							
							case 3:
							{
								global::Loreline.Internal.Root.Array arr = ((global::Loreline.Internal.Root.Array) (lit.@value) );
								{
									int _g1 = 0;
									while (( _g1 < ((int) (global::Loreline.Internal.Lang.Runtime.getField_f(arr, "length", 520590566, true)) ) )) {
										object elem = arr[_g1];
										 ++ _g1;
										if (( ( elem is global::Loreline.Runtime.NExpr ) &&  ! (this.isOriginalScriptExpression(((global::Loreline.Runtime.NExpr) (elem) )))  )) {
											return false;
										}
										
									}
									
								}
								
								return true;
							}
							
							
							case 4:
							{
								int _g2 = ( _g as global::Loreline.Runtime.LiteralType_Object ).style;
								global::Loreline.Internal.Root.Array<object> fields = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (lit.@value) ))) );
								{
									int _g3 = 0;
									while (( _g3 < fields.length )) {
										global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (fields[_g3]) );
										 ++ _g3;
										if ( ! (this.isOriginalScriptExpression(field.@value)) ) {
											return false;
										}
										
									}
									
								}
								
								return true;
							}
							
							
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NStringLiteral))) {
						global::Loreline.Runtime.NStringLiteral str = ((global::Loreline.Runtime.NStringLiteral) (expr) );
						{
							int _g4 = 0;
							global::Loreline.Internal.Root.Array<object> _g5 = str.parts;
							while (( _g4 < _g5.length )) {
								global::Loreline.Runtime.NStringPart part = ((global::Loreline.Runtime.NStringPart) (_g5[_g4]) );
								 ++ _g4;
								{
									global::Loreline.Runtime.StringPartType _g6 = part.partType;
									switch (_g6._hx_index) {
										case 0:
										{
											string _g7 = ( _g6 as global::Loreline.Runtime.StringPartType_Raw ).text;
											continue;
										}
										
										
										case 1:
										{
											global::Loreline.Runtime.NExpr _g8 = ( _g6 as global::Loreline.Runtime.StringPartType_Expr ).expr;
											return false;
										}
										
										
										case 2:
										{
											bool _g9 = ( _g6 as global::Loreline.Runtime.StringPartType_Tag ).closing;
											{
												global::Loreline.Runtime.NStringLiteral content = ( _g6 as global::Loreline.Runtime.StringPartType_Tag ).expr;
												if ( ! (this.isOriginalScriptExpression(content)) ) {
													return false;
												}
												
											}
											
											break;
										}
										
										
									}
									
								}
								
							}
							
						}
						
						return true;
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NUnary))) {
						global::Loreline.Runtime.NUnary un = ((global::Loreline.Runtime.NUnary) (expr) );
						return this.isOriginalScriptExpression(un.operand);
					}
					
				}
				
				return false;
			}
		}
		
		
		public virtual bool isBeatCall(global::Loreline.Runtime.AstNode node, global::Loreline.Internal.Lang.Null<int> scopeLevel) {
			unchecked {
				int scopeLevel1 = ( ( ! (scopeLevel.hasValue) ) ? (-1) : ((scopeLevel).@value) );
				if (( node is global::Loreline.Runtime.NCall )) {
					return ( this.resolveBeatFromCall(((global::Loreline.Runtime.NCall) (node) ), new global::Loreline.Internal.Lang.Null<int>(scopeLevel1, true)) != null );
				}
				
				return false;
			}
		}
		
		
		public virtual global::Loreline.Runtime.NBeatDecl resolveBeatFromCall(global::Loreline.Runtime.NCall call, global::Loreline.Internal.Lang.Null<int> scopeLevel) {
			unchecked {
				int scopeLevel1 = ( ( ! (scopeLevel.hasValue) ) ? (-1) : ((scopeLevel).@value) );
				if (( call.target is global::Loreline.Runtime.NAccess )) {
					global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (call.target) );
					if (( access.target == null )) {
						string beatName = access.name;
						global::Loreline.Runtime.NBeatDecl resolvedBeat = null;
						int i = ( (( scopeLevel1 == -1 )) ? (( this.stack.length - 1 )) : (scopeLevel1) );
						while (( i >= 0 )) {
							global::Loreline.Runtime.RuntimeScope scope = ((global::Loreline.Runtime.RuntimeScope) (this.stack[i]) );
							global::Loreline.Runtime.NBeatDecl beatInScope = scope.beatByName(beatName);
							if (( beatInScope != null )) {
								resolvedBeat = beatInScope;
								break;
							}
							
							 -- i;
						}
						
						if (( ( resolvedBeat == null ) && ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).exists(beatName) )) {
							resolvedBeat = ((global::Loreline.Runtime.NBeatDecl) ((((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).@get(beatName)).@value) );
						}
						
						if (( resolvedBeat != null )) {
							return resolvedBeat;
						}
						
					}
					
				}
				
				return null;
			}
		}
		
		
		public virtual void evalCall(global::Loreline.Runtime.NCall call, global::Loreline.Internal.Lang.Function next) {
			global::Loreline.Runtime.NBeatDecl resolvedBeat = this.resolveBeatFromCall(call, default(global::Loreline.Internal.Lang.Null<int>));
			if (( resolvedBeat != null )) {
				this.evalBeatRun(resolvedBeat, next);
				return;
			}
			
			this.evaluateFunctionCall(call, next);
		}
		
		
		public virtual void evalTransition(global::Loreline.Runtime.NTransition transition) {
			unchecked {
				string beatName = transition.target;
				if (( beatName == "." )) {
					this.finish();
					return;
				}
				
				global::Loreline.Runtime.NBeatDecl resolvedBeat = null;
				int i = ( this.stack.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.RuntimeScope scope = ((global::Loreline.Runtime.RuntimeScope) (this.stack[i]) );
					global::Loreline.Runtime.NBeatDecl beatInScope = scope.beatByName(beatName);
					if (( beatInScope != null )) {
						resolvedBeat = beatInScope;
						break;
					}
					
					 -- i;
				}
				
				if (( resolvedBeat == null )) {
					if (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).exists(transition.target)) {
						resolvedBeat = ((global::Loreline.Runtime.NBeatDecl) ((((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelBeats) )) ))) ).@get(beatName)).@value) );
					}
					
				}
				
				if (( resolvedBeat == null )) {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Beat ", beatName), " not found")) ), ((global::Loreline.Runtime.Position) (this.script.pos) )))) );
				}
				
				this.transitionToBeat(resolvedBeat);
			}
		}
		
		
		public virtual object evaluateString(global::Loreline.Runtime.NStringLiteral str) {
			unchecked {
				global::System.Text.StringBuilder buf_b = new global::System.Text.StringBuilder();
				global::Loreline.Internal.Root.Array<global::Loreline.Runtime.TextTag> tags = new global::Loreline.Internal.Root.Array<global::Loreline.Runtime.TextTag>(new global::Loreline.Runtime.TextTag[]{});
				int offset = 0;
				bool keepWhitespace = ( str.quotes != ((int) (0) ) );
				{
					int _g = 0;
					int _g1 = str.parts.length;
					while (( _g < _g1 )) {
						int i = _g++;
						global::Loreline.Runtime.NStringPart part = ((global::Loreline.Runtime.NStringPart) (str.parts[i]) );
						{
							global::Loreline.Runtime.StringPartType _g2 = part.partType;
							switch (_g2._hx_index) {
								case 0:
								{
									string text = ( _g2 as global::Loreline.Runtime.StringPartType_Raw ).text;
									{
										if ( ! (keepWhitespace) ) {
											text = text.TrimStart();
										}
										
										int len = text.Length;
										if (( len > 0 )) {
											keepWhitespace = true;
										}
										
										offset += len;
										buf_b.Append(((string) (global::Loreline.Internal.Root.Std.@string(text)) ));
									}
									
									break;
								}
								
								
								case 1:
								{
									global::Loreline.Runtime.NExpr expr = ( _g2 as global::Loreline.Runtime.StringPartType_Expr ).expr;
									{
										keepWhitespace = true;
										if (( expr is global::Loreline.Runtime.NAccess )) {
											global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (expr) );
											global::Loreline.Runtime.RuntimeAccess resolved = this.resolveAccess(access, access.target, access.name);
											if (( resolved._hx_index == 2 )) {
												global::Loreline.Runtime.Position _g3 = ( resolved as global::Loreline.Runtime.RuntimeAccess_CharacterAccess ).pos;
												{
													string name = ( resolved as global::Loreline.Runtime.RuntimeAccess_CharacterAccess ).name;
													{
														object characterFields = this.evaluateExpression(expr);
														object tmp = global::Loreline.Runtime.Objects.getField(this, characterFields, "name");
														object @value = ( (( tmp != null )) ? (tmp) : ((object) (name) ) );
														string text1 = this.valueToString(@value);
														offset += text1.Length;
														buf_b.Append(((string) (global::Loreline.Internal.Root.Std.@string(text1)) ));
													}
													
												}
												
											}
											else {
												object value1 = this.evaluateExpression(expr);
												string text2 = this.valueToString(value1);
												offset += text2.Length;
												buf_b.Append(((string) (global::Loreline.Internal.Root.Std.@string(text2)) ));
											}
											
										}
										else {
											object value2 = this.evaluateExpression(expr);
											string text3 = this.valueToString(value2);
											offset += text3.Length;
											buf_b.Append(((string) (global::Loreline.Internal.Root.Std.@string(text3)) ));
										}
										
									}
									
									break;
								}
								
								
								case 2:
								{
									bool closing = ( _g2 as global::Loreline.Runtime.StringPartType_Tag ).closing;
									global::Loreline.Runtime.NStringLiteral expr1 = ( _g2 as global::Loreline.Runtime.StringPartType_Tag ).expr;
									tags.push(new global::Loreline.Runtime.TextTag(closing, global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(this.evaluateString(expr1), "text", 1291439277, true)), offset));
									break;
								}
								
								
							}
							
						}
						
					}
					
				}
				
				{
					string __temp_odecl1 = buf_b.ToString();
					return new global::Loreline.Internal.Lang.DynamicObject(new int[]{1291236569, 1291439277}, new object[]{tags, __temp_odecl1}, new int[]{}, new double[]{});
				}
				
			}
		}
		
		
		public virtual bool evaluateCondition(global::Loreline.Runtime.NExpr expr) {
			object @value = this.evaluateExpression(expr);
			if (( @value is string )) {
				return ( global::Loreline.Internal.Lang.Runtime.toString(((object) (@value) )).Length > 0 );
			}
			else if (( @value is global::Loreline.Internal.Root.Array )) {
				return ( ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (((object) (@value) )) ))) ).length > 0 );
			}
			else {
				return global::Loreline.Internal.Lang.Runtime.eq(((object) (@value) ), true);
			}
			
		}
		
		
		public virtual object evaluateFunctionCall(global::Loreline.Runtime.NCall call, global::Loreline.Internal.Lang.Function next) {
			if (( call.target is global::Loreline.Runtime.NAccess )) {
				global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (call.target) );
				if (( access.target == null )) {
					object target = this.evaluateExpression(call.target);
					if (( target != null )) {
						if (( ((object) (target) ) is global::Loreline.Internal.Lang.Function )) {
							global::Loreline.Internal.Root.Array<object> _g = new global::Loreline.Internal.Root.Array<object>(new object[]{});
							{
								int _g1 = 0;
								global::Loreline.Internal.Root.Array<object> _g2 = call.args;
								while (( _g1 < _g2.length )) {
									global::Loreline.Runtime.NExpr arg = ((global::Loreline.Runtime.NExpr) (_g2[_g1]) );
									 ++ _g1;
									_g.push(this.evaluateExpression(arg));
								}
								
							}
							
							global::Loreline.Internal.Root.Array<object> args = _g;
							object result = global::Loreline.Internal.Root.Reflect.callMethod(null, ((object) (target) ), args);
							if (( ( result != null ) && ( result is global::Loreline.Runtime.Async ) )) {
								if (( next == null )) {
									throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Cannot call async function in expression") ), ((global::Loreline.Runtime.Position) (call.pos) )))) );
								}
								else {
									global::Loreline.Runtime.Async asyncResult = ((global::Loreline.Runtime.Async) (result) );
									asyncResult.func.__hx_invoke1_o(default(double), next);
								}
								
							}
							else if (( next != null )) {
								next.__hx_invoke0_o();
							}
							
							return result;
						}
						
					}
					
				}
				else {
					object obj = this.evaluateExpression(access.target);
					object method = global::Loreline.Internal.Root.Reflect.getProperty(obj, access.name);
					if (( ((object) (method) ) is global::Loreline.Internal.Lang.Function )) {
						global::Loreline.Internal.Root.Array<object> _g3 = new global::Loreline.Internal.Root.Array<object>(new object[]{});
						{
							int _g4 = 0;
							global::Loreline.Internal.Root.Array<object> _g5 = call.args;
							while (( _g4 < _g5.length )) {
								global::Loreline.Runtime.NExpr arg1 = ((global::Loreline.Runtime.NExpr) (_g5[_g4]) );
								 ++ _g4;
								_g3.push(this.evaluateExpression(arg1));
							}
							
						}
						
						global::Loreline.Internal.Root.Array<object> args1 = _g3;
						object result1 = global::Loreline.Internal.Root.Reflect.callMethod(obj, method, args1);
						if (( ( result1 != null ) && ( result1 is global::Loreline.Runtime.Async ) )) {
							if (( next == null )) {
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Cannot call async function in expression") ), ((global::Loreline.Runtime.Position) (call.pos) )))) );
							}
							else {
								global::Loreline.Runtime.Async asyncResult1 = ((global::Loreline.Runtime.Async) (result1) );
								asyncResult1.func.__hx_invoke1_o(default(double), next);
							}
							
						}
						else if (( next != null )) {
							next.__hx_invoke0_o();
						}
						
						return result1;
					}
					
				}
				
			}
			
			throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Invalid call target: ", global::Loreline.Internal.Root.Type.getClassName(global::Loreline.Internal.Root.Type.getClass<object>(((object) (call.target) ))))) ), ((global::Loreline.Runtime.Position) (call.pos) )))) );
		}
		
		
		public virtual object evaluateArrayLiteral(global::Loreline.Internal.Root.Array expr) {
			System.Collections.Generic.List<object> result = new System.Collections.Generic.List<object>(((int) (global::Loreline.Internal.Lang.Runtime.getField_f(expr, "length", 520590566, true)) ));
			{
				int _g = 0;
				while (( _g < ((int) (global::Loreline.Internal.Lang.Runtime.getField_f(expr, "length", 520590566, true)) ) )) {
					object elem = expr[_g];
					 ++ _g;
					object val = this.evaluateExpression(((global::Loreline.Runtime.NExpr) (elem) ));
					result.Add(val);
				}
				
			}
			
			return result;
		}
		
		
		public virtual object evaluateObjectLiteral(global::Loreline.Internal.Root.Array<object> expr) {
			System.Collections.Generic.Dictionary<string,object> result = new System.Collections.Generic.Dictionary<string,object>();
			{
				int _g = 0;
				while (( _g < expr.length )) {
					global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (expr[_g]) );
					 ++ _g;
					object val = this.evaluateExpression(field.@value);
					result[field.name] = val;
				}
				
			}
			
			return result;
		}
		
		
		public virtual object evaluateExpression(global::Loreline.Runtime.NExpr expr) {
			unchecked {
				{
					global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (expr) )));
					if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NAccess))) {
						global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (expr) );
						global::Loreline.Runtime.RuntimeAccess resolved = this.resolveAccess(access, access.target, access.name);
						return this.readAccess(resolved);
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NArrayAccess))) {
						global::Loreline.Runtime.NArrayAccess arrAccess = ((global::Loreline.Runtime.NArrayAccess) (expr) );
						object target = this.evaluateExpression(arrAccess.target);
						object index = this.evaluateExpression(arrAccess.index);
						if (( global::Loreline.Runtime.Arrays.isArray(target) && (( (( ( ( index is int ) || ( index is uint ) ) || global::Loreline.Internal.Lang.Runtime.isInt(index) )) || (( ( index is double ) || ( ( index is int ) || ( index is uint ) ) )) )) )) {
							int i = ((int) (((double) (global::Loreline.Internal.Lang.Runtime.toDouble(((object) (index) ))) )) );
							if (( ( i < 0 ) || ( i >= global::Loreline.Runtime.Arrays.arrayLength(target) ) )) {
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Array index out of bounds: ", global::Loreline.Internal.Lang.Runtime.toString(i))) ), ((global::Loreline.Runtime.Position) (arrAccess.pos) )))) );
							}
							else {
								return global::Loreline.Runtime.Arrays.arrayGet(target, i);
							}
							
						}
						else if (( index is string )) {
							return global::Loreline.Runtime.Objects.getField(this, target, global::Loreline.Internal.Lang.Runtime.toString(((object) (index) )));
						}
						else {
							throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Invalid array access") ), ((global::Loreline.Runtime.Position) (arrAccess.pos) )))) );
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NBinary))) {
						global::Loreline.Runtime.NBinary bin = ((global::Loreline.Runtime.NBinary) (expr) );
						object left = this.evaluateExpression(bin.left);
						object right = this.evaluateExpression(bin.right);
						return this.performOperation(bin.op, left, right, bin.pos);
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCall))) {
						return this.evaluateFunctionCall(((global::Loreline.Runtime.NCall) (expr) ), null);
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NLiteral))) {
						global::Loreline.Runtime.NLiteral lit = ((global::Loreline.Runtime.NLiteral) (expr) );
						global::Loreline.Runtime.LiteralType _g = lit.literalType;
						switch (_g._hx_index) {
							case 0:
							case 1:
							case 2:
							{
								return lit.@value;
							}
							
							
							case 3:
							{
								return this.evaluateArrayLiteral(((global::Loreline.Internal.Root.Array) (lit.@value) ));
							}
							
							
							case 4:
							{
								int _g1 = ( _g as global::Loreline.Runtime.LiteralType_Object ).style;
								return this.evaluateObjectLiteral(((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (lit.@value) ))) ));
							}
							
							
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NStringLiteral))) {
						global::Loreline.Runtime.NStringLiteral str = ((global::Loreline.Runtime.NStringLiteral) (expr) );
						if (( ( str.parts.length == 1 ) && ( str.quotes == ((int) (0) ) ) )) {
							global::Loreline.Runtime.StringPartType _g2 = ((global::Loreline.Runtime.NStringPart) (str.parts[0]) ).partType;
							if (( _g2._hx_index == 1 )) {
								global::Loreline.Runtime.NExpr expr1 = ( _g2 as global::Loreline.Runtime.StringPartType_Expr ).expr;
								return this.evaluateExpression(expr1);
							}
							else {
								return global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(this.evaluateString(str), "text", 1291439277, true));
							}
							
						}
						else {
							return global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.getField(this.evaluateString(str), "text", 1291439277, true));
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NUnary))) {
						global::Loreline.Runtime.NUnary un = ((global::Loreline.Runtime.NUnary) (expr) );
						object operand = this.evaluateExpression(un.operand);
						switch (un.op._hx_index) {
							case 19:
							{
								if ((( ( ( operand is int ) || ( operand is uint ) ) || global::Loreline.Internal.Lang.Runtime.isInt(operand) ))) {
									int v = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(((object) (operand) ))) );
									return  - (v) ;
								}
								else if ((( ( operand is double ) || ( ( operand is int ) || ( operand is uint ) ) ))) {
									double v1 = ((double) (global::Loreline.Internal.Lang.Runtime.toDouble(((object) (operand) ))) );
									return  - (v1) ;
								}
								else {
									throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Invalid unary operation") ), ((global::Loreline.Runtime.Position) (un.pos) )))) );
								}
								
							}
							
							
							case 31:
							{
								if (( operand is bool )) {
									bool v2 = global::Loreline.Internal.Lang.Runtime.toBool(((object) (operand) ));
									return  ! (v2) ;
								}
								else {
									throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Invalid unary operation") ), ((global::Loreline.Runtime.Position) (un.pos) )))) );
								}
								
							}
							
							
							default:
							{
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Invalid unary operation") ), ((global::Loreline.Runtime.Position) (un.pos) )))) );
							}
							
						}
						
					}
					else {
						throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Unsupported expression type: ", global::Loreline.Internal.Root.Type.getClassName(global::Loreline.Internal.Root.Type.getClass<object>(((object) (expr) ))))) ), ((global::Loreline.Runtime.Position) (expr.pos) )))) );
					}
					
				}
				
				return null;
			}
		}
		
		
		public virtual object readAccess(global::Loreline.Runtime.RuntimeAccess access) {
			unchecked {
				switch (access._hx_index) {
					case 0:
					{
						global::Loreline.Runtime.Position pos = ( access as global::Loreline.Runtime.RuntimeAccess_FieldAccess ).pos;
						object obj = ( access as global::Loreline.Runtime.RuntimeAccess_FieldAccess ).obj;
						string name = ( access as global::Loreline.Runtime.RuntimeAccess_FieldAccess ).name;
						return global::Loreline.Runtime.Objects.getField(this, obj, name);
					}
					
					
					case 1:
					{
						global::Loreline.Runtime.Position pos1 = ( access as global::Loreline.Runtime.RuntimeAccess_ArrayAccess ).pos;
						object array = ( access as global::Loreline.Runtime.RuntimeAccess_ArrayAccess ).array;
						int index = ( access as global::Loreline.Runtime.RuntimeAccess_ArrayAccess ).index;
						return global::Loreline.Runtime.Arrays.arrayGet(array, index);
					}
					
					
					case 2:
					{
						global::Loreline.Runtime.Position pos2 = ( access as global::Loreline.Runtime.RuntimeAccess_CharacterAccess ).pos;
						string name1 = ( access as global::Loreline.Runtime.RuntimeAccess_CharacterAccess ).name;
						if (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).exists(name1)) {
							return ((global::Loreline.Runtime.RuntimeCharacter) ((((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).@get(name1)).@value) ).fields;
						}
						else {
							throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Character not found: ", name1)) ), ((global::Loreline.Runtime.Position) (pos2) )))) );
						}
						
					}
					
					
					case 3:
					{
						global::Loreline.Runtime.Position pos3 = ( access as global::Loreline.Runtime.RuntimeAccess_FunctionAccess ).pos;
						string name2 = ( access as global::Loreline.Runtime.RuntimeAccess_FunctionAccess ).name;
						if (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelFunctions) )) ))) ).exists(name2)) {
							return (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelFunctions) )) ))) ).@get(name2)).toDynamic();
						}
						else {
							throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Function not found: ", name2)) ), ((global::Loreline.Runtime.Position) (pos3) )))) );
						}
						
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual void writeAccess(global::Loreline.Runtime.RuntimeAccess access, object @value) {
			unchecked {
				switch (access._hx_index) {
					case 0:
					{
						global::Loreline.Runtime.Position pos = ( access as global::Loreline.Runtime.RuntimeAccess_FieldAccess ).pos;
						object obj = ( access as global::Loreline.Runtime.RuntimeAccess_FieldAccess ).obj;
						string name = ( access as global::Loreline.Runtime.RuntimeAccess_FieldAccess ).name;
						global::Loreline.Runtime.Objects.setField(this, obj, name, @value);
						break;
					}
					
					
					case 1:
					{
						global::Loreline.Runtime.Position pos1 = ( access as global::Loreline.Runtime.RuntimeAccess_ArrayAccess ).pos;
						object array = ( access as global::Loreline.Runtime.RuntimeAccess_ArrayAccess ).array;
						int index = ( access as global::Loreline.Runtime.RuntimeAccess_ArrayAccess ).index;
						global::Loreline.Runtime.Arrays.arraySet(array, index, @value);
						break;
					}
					
					
					case 2:
					{
						global::Loreline.Runtime.Position pos2 = ( access as global::Loreline.Runtime.RuntimeAccess_CharacterAccess ).pos;
						string name1 = ( access as global::Loreline.Runtime.RuntimeAccess_CharacterAccess ).name;
						throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Cannot overwrite character: ", name1)) ), ((global::Loreline.Runtime.Position) (pos2) )))) );
					}
					
					
					case 3:
					{
						global::Loreline.Runtime.Position pos3 = ( access as global::Loreline.Runtime.RuntimeAccess_FunctionAccess ).pos;
						string name2 = ( access as global::Loreline.Runtime.RuntimeAccess_FunctionAccess ).name;
						throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Cannot overwrite function: ", name2)) ), ((global::Loreline.Runtime.Position) (pos3) )))) );
					}
					
					
				}
				
			}
		}
		
		
		public virtual global::Loreline.Runtime.RuntimeAccess resolveAssignmentTarget(global::Loreline.Runtime.NExpr target) {
			{
				global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (target) )));
				if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NAccess))) {
					global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (target) );
					return this.resolveAccess(access, access.target, access.name);
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NArrayAccess))) {
					global::Loreline.Runtime.NArrayAccess arrAccess = ((global::Loreline.Runtime.NArrayAccess) (target) );
					object target1 = this.evaluateExpression(arrAccess.target);
					object index = this.evaluateExpression(arrAccess.index);
					if (( global::Loreline.Runtime.Arrays.isArray(target1) && (( (( ( ( index is int ) || ( index is uint ) ) || global::Loreline.Internal.Lang.Runtime.isInt(index) )) || (( ( index is double ) || ( ( index is int ) || ( index is uint ) ) )) )) )) {
						int i = ((int) (((double) (global::Loreline.Internal.Lang.Runtime.toDouble(((object) (index) ))) )) );
						return global::Loreline.Runtime.RuntimeAccess.ArrayAccess(arrAccess.pos, target1, i);
					}
					else {
						throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Invalid array access target") ), ((global::Loreline.Runtime.Position) (arrAccess.pos) )))) );
					}
					
				}
				else {
					throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Invalid assignment target") ), ((global::Loreline.Runtime.Position) (target.pos) )))) );
				}
				
			}
			
		}
		
		
		public virtual global::Loreline.Runtime.RuntimeAccess resolveAccess(global::Loreline.Runtime.NAccess access, global::Loreline.Runtime.NExpr target, string name) {
			unchecked {
				if (( target != null )) {
					object evaluated = this.evaluateExpression(target);
					return global::Loreline.Runtime.RuntimeAccess.FieldAccess(target.pos, evaluated, name);
				}
				
				int i = ( this.stack.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.RuntimeScope scope = ((global::Loreline.Runtime.RuntimeScope) (this.stack[i]) );
					if (( scope.state != null )) {
						if (global::Loreline.Runtime.Objects.fieldExists(this, scope.state.fields, name)) {
							global::Loreline.Runtime.Position tmp = ( (( access != null )) ? (access.pos) : (null) );
							global::Loreline.Runtime.Position tmp1 = null;
							if (( tmp != null )) {
								tmp1 = tmp;
							}
							else {
								global::Loreline.Runtime.RuntimeScope tmp2 = this.get_currentScope();
								global::Loreline.Runtime.AstNode tmp3 = ( (( tmp2 != null )) ? (tmp2.node) : (null) );
								tmp1 = ( (( tmp3 != null )) ? (tmp3.pos) : (null) );
							}
							
							return global::Loreline.Runtime.RuntimeAccess.FieldAccess(( (( tmp1 != null )) ? (tmp1) : (this.script.pos) ), scope.state.fields, name);
						}
						
					}
					
					 -- i;
				}
				
				if (global::Loreline.Runtime.Objects.fieldExists(this, this.topLevelState.fields, name)) {
					global::Loreline.Runtime.Position tmp4 = ( (( access != null )) ? (access.pos) : (null) );
					global::Loreline.Runtime.Position tmp5 = null;
					if (( tmp4 != null )) {
						tmp5 = tmp4;
					}
					else {
						global::Loreline.Runtime.RuntimeScope tmp6 = this.get_currentScope();
						global::Loreline.Runtime.AstNode tmp7 = ( (( tmp6 != null )) ? (tmp6.node) : (null) );
						tmp5 = ( (( tmp7 != null )) ? (tmp7.pos) : (null) );
					}
					
					return global::Loreline.Runtime.RuntimeAccess.FieldAccess(( (( tmp5 != null )) ? (tmp5) : (this.script.pos) ), this.topLevelState.fields, name);
				}
				
				if (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelCharacters) )) ))) ).exists(name)) {
					global::Loreline.Runtime.Position tmp8 = ( (( access != null )) ? (access.pos) : (null) );
					global::Loreline.Runtime.Position tmp9 = null;
					if (( tmp8 != null )) {
						tmp9 = tmp8;
					}
					else {
						global::Loreline.Runtime.RuntimeScope tmp10 = this.get_currentScope();
						global::Loreline.Runtime.AstNode tmp11 = ( (( tmp10 != null )) ? (tmp10.node) : (null) );
						tmp9 = ( (( tmp11 != null )) ? (tmp11.pos) : (null) );
					}
					
					return global::Loreline.Runtime.RuntimeAccess.CharacterAccess(( (( tmp9 != null )) ? (tmp9) : (this.script.pos) ), name);
				}
				
				if (((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (((global::Loreline.Internal.IMap<string, object>) (this.topLevelFunctions) )) ))) ).exists(name)) {
					global::Loreline.Runtime.Position tmp12 = ( (( access != null )) ? (access.pos) : (null) );
					global::Loreline.Runtime.Position tmp13 = null;
					if (( tmp12 != null )) {
						tmp13 = tmp12;
					}
					else {
						global::Loreline.Runtime.RuntimeScope tmp14 = this.get_currentScope();
						global::Loreline.Runtime.AstNode tmp15 = ( (( tmp14 != null )) ? (tmp14.node) : (null) );
						tmp13 = ( (( tmp15 != null )) ? (tmp15.pos) : (null) );
					}
					
					return global::Loreline.Runtime.RuntimeAccess.FunctionAccess(( (( tmp13 != null )) ? (tmp13) : (this.script.pos) ), name);
				}
				
				global::Loreline.Runtime.Position tmp16 = ( (( access != null )) ? (access.pos) : (null) );
				global::Loreline.Runtime.Position tmp17 = null;
				if (( tmp16 != null )) {
					tmp17 = tmp16;
				}
				else {
					global::Loreline.Runtime.RuntimeScope tmp18 = this.get_currentScope();
					global::Loreline.Runtime.AstNode tmp19 = ( (( tmp18 != null )) ? (tmp18.node) : (null) );
					tmp17 = ( (( tmp19 != null )) ? (tmp19.pos) : (null) );
				}
				
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (global::Loreline.Internal.Lang.Runtime.concat("Undefined variable: ", name)) ), ((global::Loreline.Runtime.Position) (( (( tmp17 != null )) ? (tmp17) : (this.script.pos) )) )))) );
			}
		}
		
		
		public virtual string getTypeName(global::Loreline.Internal.Root.ValueType t) {
			unchecked {
				switch (t._hx_index) {
					case 0:
					{
						return "Null";
					}
					
					
					case 1:
					{
						return "Int";
					}
					
					
					case 2:
					{
						return "Float";
					}
					
					
					case 3:
					{
						return "Bool";
					}
					
					
					case 4:
					{
						return "Object";
					}
					
					
					case 5:
					{
						return "Function";
					}
					
					
					case 6:
					{
						global::System.Type c = ( t as global::Loreline.Internal.Root.ValueType_TClass ).c;
						return global::Loreline.Internal.Root.Type.getClassName(c);
					}
					
					
					case 7:
					{
						global::System.Type e = ( t as global::Loreline.Internal.Root.ValueType_TEnum ).e;
						return global::Loreline.Internal.Root.Type.getEnumName(e);
					}
					
					
					case 8:
					{
						return "Unknown";
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual object performOperation(global::Loreline.Runtime.TokenType op, object left, object right, global::Loreline.Runtime.Position pos) {
			unchecked {
				global::Loreline.Internal.Root.ValueType leftType = global::Loreline.Internal.Root.Type.@typeof(left);
				global::Loreline.Internal.Root.ValueType rightType = global::Loreline.Internal.Root.Type.@typeof(right);
				switch (op._hx_index) {
					case 18:
					{
						switch (leftType._hx_index) {
							case 1:
							{
								switch (rightType._hx_index) {
									case 1:
									case 2:
									{
										return ( global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Root.Std.@string(left)) + global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Root.Std.@string(right)) );
									}
									
									
									case 6:
									{
										if (global::Loreline.Internal.Lang.Runtime.refEq(( rightType as global::Loreline.Internal.Root.ValueType_TClass ).c, typeof(string))) {
											return global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Root.Std.@string(left), global::Loreline.Internal.Root.Std.@string(right));
										}
										else {
											string tmp = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot add ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
											global::Loreline.Runtime.Position tmp1 = pos;
											global::Loreline.Runtime.Position tmp2 = null;
											if (( tmp1 != null )) {
												tmp2 = tmp1;
											}
											else {
												global::Loreline.Runtime.RuntimeScope tmp3 = this.get_currentScope();
												global::Loreline.Runtime.AstNode tmp4 = ( (( tmp3 != null )) ? (tmp3.node) : (null) );
												tmp2 = ( (( tmp4 != null )) ? (tmp4.pos) : (null) );
											}
											
											throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp) ), ((global::Loreline.Runtime.Position) (( (( tmp2 != null )) ? (tmp2) : (this.script.pos) )) )))) );
										}
										
									}
									
									
									default:
									{
										string tmp5 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot add ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
										global::Loreline.Runtime.Position tmp6 = pos;
										global::Loreline.Runtime.Position tmp7 = null;
										if (( tmp6 != null )) {
											tmp7 = tmp6;
										}
										else {
											global::Loreline.Runtime.RuntimeScope tmp8 = this.get_currentScope();
											global::Loreline.Runtime.AstNode tmp9 = ( (( tmp8 != null )) ? (tmp8.node) : (null) );
											tmp7 = ( (( tmp9 != null )) ? (tmp9.pos) : (null) );
										}
										
										throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp5) ), ((global::Loreline.Runtime.Position) (( (( tmp7 != null )) ? (tmp7) : (this.script.pos) )) )))) );
									}
									
								}
								
							}
							
							
							case 2:
							{
								switch (rightType._hx_index) {
									case 1:
									case 2:
									{
										return ( global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Root.Std.@string(left)) + global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Root.Std.@string(right)) );
									}
									
									
									case 6:
									{
										if (global::Loreline.Internal.Lang.Runtime.refEq(( rightType as global::Loreline.Internal.Root.ValueType_TClass ).c, typeof(string))) {
											return global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Root.Std.@string(left), global::Loreline.Internal.Root.Std.@string(right));
										}
										else {
											string tmp10 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot add ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
											global::Loreline.Runtime.Position tmp11 = pos;
											global::Loreline.Runtime.Position tmp12 = null;
											if (( tmp11 != null )) {
												tmp12 = tmp11;
											}
											else {
												global::Loreline.Runtime.RuntimeScope tmp13 = this.get_currentScope();
												global::Loreline.Runtime.AstNode tmp14 = ( (( tmp13 != null )) ? (tmp13.node) : (null) );
												tmp12 = ( (( tmp14 != null )) ? (tmp14.pos) : (null) );
											}
											
											throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp10) ), ((global::Loreline.Runtime.Position) (( (( tmp12 != null )) ? (tmp12) : (this.script.pos) )) )))) );
										}
										
									}
									
									
									default:
									{
										string tmp15 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot add ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
										global::Loreline.Runtime.Position tmp16 = pos;
										global::Loreline.Runtime.Position tmp17 = null;
										if (( tmp16 != null )) {
											tmp17 = tmp16;
										}
										else {
											global::Loreline.Runtime.RuntimeScope tmp18 = this.get_currentScope();
											global::Loreline.Runtime.AstNode tmp19 = ( (( tmp18 != null )) ? (tmp18.node) : (null) );
											tmp17 = ( (( tmp19 != null )) ? (tmp19.pos) : (null) );
										}
										
										throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp15) ), ((global::Loreline.Runtime.Position) (( (( tmp17 != null )) ? (tmp17) : (this.script.pos) )) )))) );
									}
									
								}
								
							}
							
							
							case 6:
							{
								if (global::Loreline.Internal.Lang.Runtime.refEq(( leftType as global::Loreline.Internal.Root.ValueType_TClass ).c, typeof(string))) {
									return global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Root.Std.@string(left), global::Loreline.Internal.Root.Std.@string(right));
								}
								else if (( rightType._hx_index == 6 )) {
									if (global::Loreline.Internal.Lang.Runtime.refEq(( rightType as global::Loreline.Internal.Root.ValueType_TClass ).c, typeof(string))) {
										return global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Root.Std.@string(left), global::Loreline.Internal.Root.Std.@string(right));
									}
									else {
										string tmp20 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot add ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
										global::Loreline.Runtime.Position tmp21 = pos;
										global::Loreline.Runtime.Position tmp22 = null;
										if (( tmp21 != null )) {
											tmp22 = tmp21;
										}
										else {
											global::Loreline.Runtime.RuntimeScope tmp23 = this.get_currentScope();
											global::Loreline.Runtime.AstNode tmp24 = ( (( tmp23 != null )) ? (tmp23.node) : (null) );
											tmp22 = ( (( tmp24 != null )) ? (tmp24.pos) : (null) );
										}
										
										throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp20) ), ((global::Loreline.Runtime.Position) (( (( tmp22 != null )) ? (tmp22) : (this.script.pos) )) )))) );
									}
									
								}
								else {
									string tmp25 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot add ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
									global::Loreline.Runtime.Position tmp26 = pos;
									global::Loreline.Runtime.Position tmp27 = null;
									if (( tmp26 != null )) {
										tmp27 = tmp26;
									}
									else {
										global::Loreline.Runtime.RuntimeScope tmp28 = this.get_currentScope();
										global::Loreline.Runtime.AstNode tmp29 = ( (( tmp28 != null )) ? (tmp28.node) : (null) );
										tmp27 = ( (( tmp29 != null )) ? (tmp29.pos) : (null) );
									}
									
									throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp25) ), ((global::Loreline.Runtime.Position) (( (( tmp27 != null )) ? (tmp27) : (this.script.pos) )) )))) );
								}
								
							}
							
							
							default:
							{
								if (( rightType._hx_index == 6 )) {
									if (global::Loreline.Internal.Lang.Runtime.refEq(( rightType as global::Loreline.Internal.Root.ValueType_TClass ).c, typeof(string))) {
										return global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Root.Std.@string(left), global::Loreline.Internal.Root.Std.@string(right));
									}
									else {
										string tmp30 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot add ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
										global::Loreline.Runtime.Position tmp31 = pos;
										global::Loreline.Runtime.Position tmp32 = null;
										if (( tmp31 != null )) {
											tmp32 = tmp31;
										}
										else {
											global::Loreline.Runtime.RuntimeScope tmp33 = this.get_currentScope();
											global::Loreline.Runtime.AstNode tmp34 = ( (( tmp33 != null )) ? (tmp33.node) : (null) );
											tmp32 = ( (( tmp34 != null )) ? (tmp34.pos) : (null) );
										}
										
										throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp30) ), ((global::Loreline.Runtime.Position) (( (( tmp32 != null )) ? (tmp32) : (this.script.pos) )) )))) );
									}
									
								}
								else {
									string tmp35 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot add ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
									global::Loreline.Runtime.Position tmp36 = pos;
									global::Loreline.Runtime.Position tmp37 = null;
									if (( tmp36 != null )) {
										tmp37 = tmp36;
									}
									else {
										global::Loreline.Runtime.RuntimeScope tmp38 = this.get_currentScope();
										global::Loreline.Runtime.AstNode tmp39 = ( (( tmp38 != null )) ? (tmp38.node) : (null) );
										tmp37 = ( (( tmp39 != null )) ? (tmp39.pos) : (null) );
									}
									
									throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp35) ), ((global::Loreline.Runtime.Position) (( (( tmp37 != null )) ? (tmp37) : (this.script.pos) )) )))) );
								}
								
							}
							
						}
						
					}
					
					
					case 19:
					case 20:
					case 21:
					case 22:
					{
						switch (leftType._hx_index) {
							case 1:
							case 2:
							{
								switch (rightType._hx_index) {
									case 1:
									case 2:
									{
										double leftNum = global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Root.Std.@string(left));
										double rightNum = global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Root.Std.@string(right));
										switch (op._hx_index) {
											case 19:
											{
												return ( leftNum - rightNum );
											}
											
											
											case 20:
											{
												return ( leftNum * rightNum );
											}
											
											
											case 21:
											{
												if (( rightNum == 0 )) {
													global::Loreline.Runtime.Position tmp40 = pos;
													global::Loreline.Runtime.Position tmp41 = null;
													if (( tmp40 != null )) {
														tmp41 = tmp40;
													}
													else {
														global::Loreline.Runtime.RuntimeScope tmp42 = this.get_currentScope();
														global::Loreline.Runtime.AstNode tmp43 = ( (( tmp42 != null )) ? (tmp42.node) : (null) );
														tmp41 = ( (( tmp43 != null )) ? (tmp43.pos) : (null) );
													}
													
													throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Division by zero") ), ((global::Loreline.Runtime.Position) (( (( tmp41 != null )) ? (tmp41) : (this.script.pos) )) )))) );
												}
												
												return ( leftNum / rightNum );
											}
											
											
											case 22:
											{
												if (( rightNum == 0 )) {
													global::Loreline.Runtime.Position tmp44 = pos;
													global::Loreline.Runtime.Position tmp45 = null;
													if (( tmp44 != null )) {
														tmp45 = tmp44;
													}
													else {
														global::Loreline.Runtime.RuntimeScope tmp46 = this.get_currentScope();
														global::Loreline.Runtime.AstNode tmp47 = ( (( tmp46 != null )) ? (tmp46.node) : (null) );
														tmp45 = ( (( tmp47 != null )) ? (tmp47.pos) : (null) );
													}
													
													throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) ("Modulo by zero") ), ((global::Loreline.Runtime.Position) (( (( tmp45 != null )) ? (tmp45) : (this.script.pos) )) )))) );
												}
												
												return ( leftNum % rightNum );
											}
											
											
											default:
											{
												throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown("Unreachable")) );
											}
											
										}
										
									}
									
									
									default:
									{
										string opName = null;
										switch (op._hx_index) {
											case 19:
											{
												opName = "subtract";
												break;
											}
											
											
											case 20:
											{
												opName = "multiply";
												break;
											}
											
											
											case 21:
											{
												opName = "divide";
												break;
											}
											
											
											case 22:
											{
												opName = "modulo";
												break;
											}
											
											
											default:
											{
												opName = "perform operation on";
												break;
											}
											
										}
										
										string tmp48 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot ", opName), " "), this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
										global::Loreline.Runtime.Position tmp49 = pos;
										global::Loreline.Runtime.Position tmp50 = null;
										if (( tmp49 != null )) {
											tmp50 = tmp49;
										}
										else {
											global::Loreline.Runtime.RuntimeScope tmp51 = this.get_currentScope();
											global::Loreline.Runtime.AstNode tmp52 = ( (( tmp51 != null )) ? (tmp51.node) : (null) );
											tmp50 = ( (( tmp52 != null )) ? (tmp52.pos) : (null) );
										}
										
										throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp48) ), ((global::Loreline.Runtime.Position) (( (( tmp50 != null )) ? (tmp50) : (this.script.pos) )) )))) );
									}
									
								}
								
							}
							
							
							default:
							{
								string opName1 = null;
								switch (op._hx_index) {
									case 19:
									{
										opName1 = "subtract";
										break;
									}
									
									
									case 20:
									{
										opName1 = "multiply";
										break;
									}
									
									
									case 21:
									{
										opName1 = "divide";
										break;
									}
									
									
									case 22:
									{
										opName1 = "modulo";
										break;
									}
									
									
									default:
									{
										opName1 = "perform operation on";
										break;
									}
									
								}
								
								string tmp53 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot ", opName1), " "), this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
								global::Loreline.Runtime.Position tmp54 = pos;
								global::Loreline.Runtime.Position tmp55 = null;
								if (( tmp54 != null )) {
									tmp55 = tmp54;
								}
								else {
									global::Loreline.Runtime.RuntimeScope tmp56 = this.get_currentScope();
									global::Loreline.Runtime.AstNode tmp57 = ( (( tmp56 != null )) ? (tmp56.node) : (null) );
									tmp55 = ( (( tmp57 != null )) ? (tmp57.pos) : (null) );
								}
								
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp53) ), ((global::Loreline.Runtime.Position) (( (( tmp55 != null )) ? (tmp55) : (this.script.pos) )) )))) );
							}
							
						}
						
					}
					
					
					case 23:
					case 24:
					{
						switch (op._hx_index) {
							case 23:
							{
								return global::Loreline.Internal.Lang.Runtime.eq(left, right);
							}
							
							
							case 24:
							{
								return ( ! (global::Loreline.Internal.Lang.Runtime.eq(left, right)) );
							}
							
							
							default:
							{
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown("Unreachable")) );
							}
							
						}
						
					}
					
					
					case 25:
					case 26:
					case 27:
					case 28:
					{
						switch (leftType._hx_index) {
							case 1:
							case 2:
							{
								switch (rightType._hx_index) {
									case 1:
									case 2:
									{
										double leftNum1 = global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Root.Std.@string(left));
										double rightNum1 = global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Root.Std.@string(right));
										switch (op._hx_index) {
											case 25:
											{
												return ( leftNum1 > rightNum1 );
											}
											
											
											case 26:
											{
												return ( leftNum1 < rightNum1 );
											}
											
											
											case 27:
											{
												return ( leftNum1 >= rightNum1 );
											}
											
											
											case 28:
											{
												return ( leftNum1 <= rightNum1 );
											}
											
											
											default:
											{
												throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown("Unreachable")) );
											}
											
										}
										
									}
									
									
									default:
									{
										string tmp58 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot compare ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
										global::Loreline.Runtime.Position tmp59 = pos;
										global::Loreline.Runtime.Position tmp60 = null;
										if (( tmp59 != null )) {
											tmp60 = tmp59;
										}
										else {
											global::Loreline.Runtime.RuntimeScope tmp61 = this.get_currentScope();
											global::Loreline.Runtime.AstNode tmp62 = ( (( tmp61 != null )) ? (tmp61.node) : (null) );
											tmp60 = ( (( tmp62 != null )) ? (tmp62.pos) : (null) );
										}
										
										throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp58) ), ((global::Loreline.Runtime.Position) (( (( tmp60 != null )) ? (tmp60) : (this.script.pos) )) )))) );
									}
									
								}
								
							}
							
							
							default:
							{
								string tmp63 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot compare ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
								global::Loreline.Runtime.Position tmp64 = pos;
								global::Loreline.Runtime.Position tmp65 = null;
								if (( tmp64 != null )) {
									tmp65 = tmp64;
								}
								else {
									global::Loreline.Runtime.RuntimeScope tmp66 = this.get_currentScope();
									global::Loreline.Runtime.AstNode tmp67 = ( (( tmp66 != null )) ? (tmp66.node) : (null) );
									tmp65 = ( (( tmp67 != null )) ? (tmp67.pos) : (null) );
								}
								
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp63) ), ((global::Loreline.Runtime.Position) (( (( tmp65 != null )) ? (tmp65) : (this.script.pos) )) )))) );
							}
							
						}
						
					}
					
					
					case 29:
					{
						bool _g = ( op as global::Loreline.Runtime.TokenType_OpAnd ).word;
						if (( leftType._hx_index == 3 )) {
							if (( rightType._hx_index == 3 )) {
								switch (op._hx_index) {
									case 29:
									{
										bool _g1 = ( op as global::Loreline.Runtime.TokenType_OpAnd ).word;
										if (global::Loreline.Internal.Lang.Runtime.toBool((left))) {
											return right;
										}
										else {
											return false;
										}
										
									}
									
									
									case 30:
									{
										bool _g2 = ( op as global::Loreline.Runtime.TokenType_OpOr ).word;
										if (( ! (global::Loreline.Internal.Lang.Runtime.toBool(left)) )) {
											return right;
										}
										else {
											return true;
										}
										
									}
									
									
									default:
									{
										throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown("Unreachable")) );
									}
									
								}
								
							}
							else {
								string tmp68 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot perform logical operation on ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
								global::Loreline.Runtime.Position tmp69 = pos;
								global::Loreline.Runtime.Position tmp70 = null;
								if (( tmp69 != null )) {
									tmp70 = tmp69;
								}
								else {
									global::Loreline.Runtime.RuntimeScope tmp71 = this.get_currentScope();
									global::Loreline.Runtime.AstNode tmp72 = ( (( tmp71 != null )) ? (tmp71.node) : (null) );
									tmp70 = ( (( tmp72 != null )) ? (tmp72.pos) : (null) );
								}
								
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp68) ), ((global::Loreline.Runtime.Position) (( (( tmp70 != null )) ? (tmp70) : (this.script.pos) )) )))) );
							}
							
						}
						else {
							string tmp73 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot perform logical operation on ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
							global::Loreline.Runtime.Position tmp74 = pos;
							global::Loreline.Runtime.Position tmp75 = null;
							if (( tmp74 != null )) {
								tmp75 = tmp74;
							}
							else {
								global::Loreline.Runtime.RuntimeScope tmp76 = this.get_currentScope();
								global::Loreline.Runtime.AstNode tmp77 = ( (( tmp76 != null )) ? (tmp76.node) : (null) );
								tmp75 = ( (( tmp77 != null )) ? (tmp77.pos) : (null) );
							}
							
							throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp73) ), ((global::Loreline.Runtime.Position) (( (( tmp75 != null )) ? (tmp75) : (this.script.pos) )) )))) );
						}
						
					}
					
					
					case 30:
					{
						bool _g3 = ( op as global::Loreline.Runtime.TokenType_OpOr ).word;
						if (( leftType._hx_index == 3 )) {
							if (( rightType._hx_index == 3 )) {
								switch (op._hx_index) {
									case 29:
									{
										bool _g4 = ( op as global::Loreline.Runtime.TokenType_OpAnd ).word;
										if (global::Loreline.Internal.Lang.Runtime.toBool((left))) {
											return right;
										}
										else {
											return false;
										}
										
									}
									
									
									case 30:
									{
										bool _g5 = ( op as global::Loreline.Runtime.TokenType_OpOr ).word;
										if (( ! (global::Loreline.Internal.Lang.Runtime.toBool(left)) )) {
											return right;
										}
										else {
											return true;
										}
										
									}
									
									
									default:
									{
										throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown("Unreachable")) );
									}
									
								}
								
							}
							else {
								string tmp78 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot perform logical operation on ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
								global::Loreline.Runtime.Position tmp79 = pos;
								global::Loreline.Runtime.Position tmp80 = null;
								if (( tmp79 != null )) {
									tmp80 = tmp79;
								}
								else {
									global::Loreline.Runtime.RuntimeScope tmp81 = this.get_currentScope();
									global::Loreline.Runtime.AstNode tmp82 = ( (( tmp81 != null )) ? (tmp81.node) : (null) );
									tmp80 = ( (( tmp82 != null )) ? (tmp82.pos) : (null) );
								}
								
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp78) ), ((global::Loreline.Runtime.Position) (( (( tmp80 != null )) ? (tmp80) : (this.script.pos) )) )))) );
							}
							
						}
						else {
							string tmp83 = global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("Cannot perform logical operation on ", this.getTypeName(leftType)), " and "), this.getTypeName(rightType));
							global::Loreline.Runtime.Position tmp84 = pos;
							global::Loreline.Runtime.Position tmp85 = null;
							if (( tmp84 != null )) {
								tmp85 = tmp84;
							}
							else {
								global::Loreline.Runtime.RuntimeScope tmp86 = this.get_currentScope();
								global::Loreline.Runtime.AstNode tmp87 = ( (( tmp86 != null )) ? (tmp86.node) : (null) );
								tmp85 = ( (( tmp87 != null )) ? (tmp87.pos) : (null) );
							}
							
							throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp83) ), ((global::Loreline.Runtime.Position) (( (( tmp85 != null )) ? (tmp85) : (this.script.pos) )) )))) );
						}
						
					}
					
					
					default:
					{
						string tmp88 = global::Loreline.Internal.Lang.Runtime.concat("Invalid operation: ", global::Loreline.Internal.Root.Std.@string(op));
						global::Loreline.Runtime.Position tmp89 = pos;
						global::Loreline.Runtime.Position tmp90 = null;
						if (( tmp89 != null )) {
							tmp90 = tmp89;
						}
						else {
							global::Loreline.Runtime.RuntimeScope tmp91 = this.get_currentScope();
							global::Loreline.Runtime.AstNode tmp92 = ( (( tmp91 != null )) ? (tmp91.node) : (null) );
							tmp90 = ( (( tmp92 != null )) ? (tmp92.pos) : (null) );
						}
						
						throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.RuntimeError(((string) (tmp88) ), ((global::Loreline.Runtime.Position) (( (( tmp90 != null )) ? (tmp90) : (this.script.pos) )) )))) );
					}
					
				}
				
			}
		}
		
		
		public virtual string valueToString(object @value) {
			if (( @value == null )) {
				return "null";
			}
			else {
				return global::Loreline.Internal.Root.Std.@string(((object) (@value) ));
			}
			
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1301394908:
					{
						this.nextScopeId = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 637940642:
					{
						this._random = ((global::Loreline.Runtime.Random) (@value) );
						return @value;
					}
					
					
					case 2115507486:
					{
						this.beatToResume = ((global::Loreline.Runtime.NBeatDecl) (@value) );
						return @value;
					}
					
					
					case 1920220453:
					{
						this.finishTrigger = ((global::Loreline.Runtime.EvalNext) (@value) );
						return @value;
					}
					
					
					case 420199582:
					{
						this.flushing = global::Loreline.Internal.Lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1843688755:
					{
						this.syncCallbacks = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 1301394908:
					{
						this.nextScopeId = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1202720510:
					{
						this.lens = ((global::Loreline.Runtime.Lens) (@value) );
						return @value;
					}
					
					
					case 67856200:
					{
						this.stack = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 1310095788:
					{
						this.topLevelFunctions = ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 283690212:
					{
						this.nodeStates = ((global::Loreline.Runtime.NodeIdMap<object>) (global::Loreline.Runtime.NodeIdMap<object>.__hx_cast<object>(((global::Loreline.Runtime.NodeIdMap) (@value) ))) );
						return @value;
					}
					
					
					case 86284558:
					{
						this.topLevelBeats = ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 213667897:
					{
						this.topLevelCharacters = ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 1490987234:
					{
						this.topLevelState = ((global::Loreline.Runtime.RuntimeState) (@value) );
						return @value;
					}
					
					
					case 1420518939:
					{
						this.handleFinish = ((global::Loreline.Internal.Lang.Function) (@value) );
						return @value;
					}
					
					
					case 249292073:
					{
						this.handleChoice = ((global::Loreline.Internal.Lang.Function) (@value) );
						return @value;
					}
					
					
					case 1969968352:
					{
						this.handleDialogue = ((global::Loreline.Internal.Lang.Function) (@value) );
						return @value;
					}
					
					
					case 1197493771:
					{
						this.script = ((global::Loreline.Runtime.Script) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 461333821:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "valueToString", 461333821)) );
					}
					
					
					case 1863180102:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "performOperation", 1863180102)) );
					}
					
					
					case 1539193051:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getTypeName", 1539193051)) );
					}
					
					
					case 1193153968:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resolveAccess", 1193153968)) );
					}
					
					
					case 678409610:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resolveAssignmentTarget", 678409610)) );
					}
					
					
					case 536864739:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "writeAccess", 536864739)) );
					}
					
					
					case 75659674:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readAccess", 75659674)) );
					}
					
					
					case 539737937:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evaluateExpression", 539737937)) );
					}
					
					
					case 1694639191:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evaluateObjectLiteral", 1694639191)) );
					}
					
					
					case 903448271:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evaluateArrayLiteral", 903448271)) );
					}
					
					
					case 420719055:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evaluateFunctionCall", 420719055)) );
					}
					
					
					case 965613058:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evaluateCondition", 965613058)) );
					}
					
					
					case 613631498:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evaluateString", 613631498)) );
					}
					
					
					case 198842449:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalTransition", 198842449)) );
					}
					
					
					case 1615048282:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalCall", 1615048282)) );
					}
					
					
					case 60029898:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resolveBeatFromCall", 60029898)) );
					}
					
					
					case 128133950:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isBeatCall", 128133950)) );
					}
					
					
					case 1050036222:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isOriginalScriptExpression", 1050036222)) );
					}
					
					
					case 1593465353:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalAssignment", 1593465353)) );
					}
					
					
					case 331598489:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalIf", 331598489)) );
					}
					
					
					case 1311373170:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalChoiceOption", 1311373170)) );
					}
					
					
					case 1159150621:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalChoice", 1159150621)) );
					}
					
					
					case 845238484:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalDialogue", 845238484)) );
					}
					
					
					case 1803772521:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalText", 1803772521)) );
					}
					
					
					case 230682591:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalStateDecl", 230682591)) );
					}
					
					
					case 1244803897:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalBeatRun", 1244803897)) );
					}
					
					
					case 1969618304:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalNodeBody", 1969618304)) );
					}
					
					
					case 409826492:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalBeatDecl", 409826492)) );
					}
					
					
					case 1737727934:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "evalNode", 1737727934)) );
					}
					
					
					case 934751238:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "transitionToBeat", 934751238)) );
					}
					
					
					case 109002835:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "finish", 109002835)) );
					}
					
					
					case 500757153:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "initializeState", 500757153)) );
					}
					
					
					case 1849909130:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "initializeTopLevelCharacter", 1849909130)) );
					}
					
					
					case 1777527093:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "initializeTopLevelBeat", 1777527093)) );
					}
					
					
					case 508769650:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "initializeTopLevelState", 508769650)) );
					}
					
					
					case 1247875546:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "push", 1247875546)) );
					}
					
					
					case 5594513:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "pop", 5594513)) );
					}
					
					
					case 43737796:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "flush", 43737796)) );
					}
					
					
					case 341612509:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "wrapNext", 341612509)) );
					}
					
					
					case 1618251324:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "initializeTopLevelFunctions", 1618251324)) );
					}
					
					
					case 932127235:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "random", 932127235)) );
					}
					
					
					case 637940642:
					{
						return this._random;
					}
					
					
					case 238439747:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreValue", 238439747)) );
					}
					
					
					case 304404583:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreFields", 304404583)) );
					}
					
					
					case 803207803:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreCharacter", 803207803)) );
					}
					
					
					case 1865784786:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreNodeStates", 1865784786)) );
					}
					
					
					case 874197400:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreCharacters", 874197400)) );
					}
					
					
					case 1619608547:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreState", 1619608547)) );
					}
					
					
					case 1570649060:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreBeat", 1570649060)) );
					}
					
					
					case 1704221808:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreNode", 1704221808)) );
					}
					
					
					case 738166156:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreBeatToResume", 738166156)) );
					}
					
					
					case 1619604762:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restoreStack", 1619604762)) );
					}
					
					
					case 1985120491:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resumeCall", 1985120491)) );
					}
					
					
					case 28585706:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resumeIf", 28585706)) );
					}
					
					
					case 811551491:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resumeChoiceOption", 811551491)) );
					}
					
					
					case 1765771592:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resumeBeatRun", 1765771592)) );
					}
					
					
					case 33813649:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resumeNodeBody", 33813649)) );
					}
					
					
					case 2107800143:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resumeNode", 2107800143)) );
					}
					
					
					case 1664304497:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeValue", 1664304497)) );
					}
					
					
					case 444663929:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeFields", 444663929)) );
					}
					
					
					case 254255529:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeCharacter", 254255529)) );
					}
					
					
					case 507663209:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeNodeReference", 507663209)) );
					}
					
					
					case 159640949:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeBeatReference", 159640949)) );
					}
					
					
					case 1855995620:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeNodeStates", 1855995620)) );
					}
					
					
					case 864408234:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeCharacters", 864408234)) );
					}
					
					
					case 897989649:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeState", 897989649)) );
					}
					
					
					case 710162324:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "serializeScope", 710162324)) );
					}
					
					
					case 1226371975:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getCharacterField", 1226371975)) );
					}
					
					
					case 1361606707:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getCharacter", 1361606707)) );
					}
					
					
					case 142895533:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resume", 142895533)) );
					}
					
					
					case 1789945678:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "restore", 1789945678)) );
					}
					
					
					case 1280150333:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "save", 1280150333)) );
					}
					
					
					case 67859554:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "start", 67859554)) );
					}
					
					
					case 2115507486:
					{
						return this.beatToResume;
					}
					
					
					case 1920220453:
					{
						return this.finishTrigger;
					}
					
					
					case 420199582:
					{
						return this.flushing;
					}
					
					
					case 1843688755:
					{
						return this.syncCallbacks;
					}
					
					
					case 1301394908:
					{
						return this.nextScopeId;
					}
					
					
					case 1149518628:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "get_currentScope", 1149518628)) );
					}
					
					
					case 1071994523:
					{
						return this.get_currentScope();
					}
					
					
					case 1202720510:
					{
						return this.lens;
					}
					
					
					case 67856200:
					{
						return this.stack;
					}
					
					
					case 1310095788:
					{
						return this.topLevelFunctions;
					}
					
					
					case 283690212:
					{
						return this.nodeStates;
					}
					
					
					case 86284558:
					{
						return this.topLevelBeats;
					}
					
					
					case 213667897:
					{
						return this.topLevelCharacters;
					}
					
					
					case 1490987234:
					{
						return this.topLevelState;
					}
					
					
					case 1420518939:
					{
						return this.handleFinish;
					}
					
					
					case 249292073:
					{
						return this.handleChoice;
					}
					
					
					case 1969968352:
					{
						return this.handleDialogue;
					}
					
					
					case 1197493771:
					{
						return this.script;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1301394908:
					{
						return ((double) (this.nextScopeId) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 461333821:
					{
						return this.valueToString(dynargs[0]);
					}
					
					
					case 1863180102:
					{
						return this.performOperation(((global::Loreline.Runtime.TokenType) (dynargs[0]) ), dynargs[1], dynargs[2], ((global::Loreline.Runtime.Position) (dynargs[3]) ));
					}
					
					
					case 1539193051:
					{
						return this.getTypeName(((global::Loreline.Internal.Root.ValueType) (dynargs[0]) ));
					}
					
					
					case 1193153968:
					{
						return this.resolveAccess(((global::Loreline.Runtime.NAccess) (dynargs[0]) ), ((global::Loreline.Runtime.NExpr) (( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )) ), global::Loreline.Internal.Lang.Runtime.toString(dynargs[2]));
					}
					
					
					case 678409610:
					{
						return this.resolveAssignmentTarget(((global::Loreline.Runtime.NExpr) (dynargs[0]) ));
					}
					
					
					case 536864739:
					{
						this.writeAccess(((global::Loreline.Runtime.RuntimeAccess) (dynargs[0]) ), dynargs[1]);
						break;
					}
					
					
					case 75659674:
					{
						return this.readAccess(((global::Loreline.Runtime.RuntimeAccess) (dynargs[0]) ));
					}
					
					
					case 539737937:
					{
						return this.evaluateExpression(((global::Loreline.Runtime.NExpr) (dynargs[0]) ));
					}
					
					
					case 1694639191:
					{
						return this.evaluateObjectLiteral(((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (dynargs[0]) ))) ));
					}
					
					
					case 903448271:
					{
						return this.evaluateArrayLiteral(((global::Loreline.Internal.Root.Array) (dynargs[0]) ));
					}
					
					
					case 420719055:
					{
						return this.evaluateFunctionCall(((global::Loreline.Runtime.NCall) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
					}
					
					
					case 965613058:
					{
						return this.evaluateCondition(((global::Loreline.Runtime.NExpr) (dynargs[0]) ));
					}
					
					
					case 613631498:
					{
						return this.evaluateString(((global::Loreline.Runtime.NStringLiteral) (dynargs[0]) ));
					}
					
					
					case 198842449:
					{
						this.evalTransition(((global::Loreline.Runtime.NTransition) (dynargs[0]) ));
						break;
					}
					
					
					case 1615048282:
					{
						this.evalCall(((global::Loreline.Runtime.NCall) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 60029898:
					{
						return this.resolveBeatFromCall(((global::Loreline.Runtime.NCall) (dynargs[0]) ), global::Loreline.Internal.Lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )));
					}
					
					
					case 128133950:
					{
						return this.isBeatCall(((global::Loreline.Runtime.AstNode) (dynargs[0]) ), global::Loreline.Internal.Lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )));
					}
					
					
					case 1050036222:
					{
						return this.isOriginalScriptExpression(((global::Loreline.Runtime.NExpr) (dynargs[0]) ));
					}
					
					
					case 1593465353:
					{
						this.evalAssignment(((global::Loreline.Runtime.NAssign) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 331598489:
					{
						this.evalIf(((global::Loreline.Runtime.NIfStatement) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 1311373170:
					{
						this.evalChoiceOption(((global::Loreline.Runtime.NChoiceOption) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 1159150621:
					{
						this.evalChoice(((global::Loreline.Runtime.NChoiceStatement) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 845238484:
					{
						this.evalDialogue(((global::Loreline.Runtime.NDialogueStatement) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 1803772521:
					{
						this.evalText(((global::Loreline.Runtime.NTextStatement) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 230682591:
					{
						this.evalStateDecl(((global::Loreline.Runtime.NStateDecl) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 1244803897:
					{
						this.evalBeatRun(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 1969618304:
					{
						this.evalNodeBody(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ), ((global::Loreline.Runtime.AstNode) (dynargs[1]) ), ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (dynargs[2]) ))) ), ((global::Loreline.Internal.Lang.Function) (dynargs[3]) ));
						break;
					}
					
					
					case 409826492:
					{
						this.evalBeatDecl(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 1737727934:
					{
						this.evalNode(((global::Loreline.Runtime.AstNode) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 934751238:
					{
						this.transitionToBeat(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
						break;
					}
					
					
					case 109002835:
					{
						this.finish();
						break;
					}
					
					
					case 500757153:
					{
						this.initializeState(((global::Loreline.Runtime.NStateDecl) (dynargs[0]) ), ((global::Loreline.Runtime.RuntimeScope) (dynargs[1]) ));
						break;
					}
					
					
					case 1849909130:
					{
						this.initializeTopLevelCharacter(((global::Loreline.Runtime.NCharacterDecl) (dynargs[0]) ));
						break;
					}
					
					
					case 1777527093:
					{
						this.initializeTopLevelBeat(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
						break;
					}
					
					
					case 508769650:
					{
						this.initializeTopLevelState(((global::Loreline.Runtime.NStateDecl) (dynargs[0]) ));
						break;
					}
					
					
					case 1247875546:
					{
						this.push(((global::Loreline.Runtime.RuntimeScope) (dynargs[0]) ));
						break;
					}
					
					
					case 5594513:
					{
						return this.pop();
					}
					
					
					case 43737796:
					{
						this.flush();
						break;
					}
					
					
					case 341612509:
					{
						return this.wrapNext(((global::Loreline.Internal.Lang.Function) (dynargs[0]) ));
					}
					
					
					case 1618251324:
					{
						this.initializeTopLevelFunctions(((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (dynargs[0]) ))) ));
						break;
					}
					
					
					case 932127235:
					{
						return this.random();
					}
					
					
					case 238439747:
					{
						return this.restoreValue(dynargs[0]);
					}
					
					
					case 304404583:
					{
						return this.restoreFields(dynargs[0], dynargs[1]);
					}
					
					
					case 803207803:
					{
						return this.restoreCharacter(((global::Loreline.Runtime.RuntimeCharacter) (dynargs[0]) ), dynargs[1]);
					}
					
					
					case 1865784786:
					{
						this.restoreNodeStates(dynargs[0]);
						break;
					}
					
					
					case 874197400:
					{
						this.restoreCharacters(dynargs[0]);
						break;
					}
					
					
					case 1619608547:
					{
						return this.restoreState(((global::Loreline.Runtime.RuntimeState) (dynargs[0]) ), dynargs[1]);
					}
					
					
					case 1570649060:
					{
						return this.restoreBeat(dynargs[0]);
					}
					
					
					case 1704221808:
					{
						return this.restoreNode(dynargs[0], ((long) (dynargs[1]) ), ((global::Loreline.Runtime.NBeatDecl) (dynargs[2]) ));
					}
					
					
					case 738166156:
					{
						return this.restoreBeatToResume(((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (dynargs[0]) ))) ));
					}
					
					
					case 1619604762:
					{
						return this.restoreStack(((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (dynargs[0]) ))) ));
					}
					
					
					case 1985120491:
					{
						this.resumeCall(((global::Loreline.Runtime.NCall) (dynargs[0]) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ), ((global::Loreline.Internal.Lang.Function) (dynargs[2]) ));
						break;
					}
					
					
					case 28585706:
					{
						this.resumeIf(((global::Loreline.Runtime.NIfStatement) (dynargs[0]) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ), ((global::Loreline.Internal.Lang.Function) (dynargs[2]) ));
						break;
					}
					
					
					case 811551491:
					{
						this.resumeChoiceOption(((global::Loreline.Runtime.NChoiceOption) (dynargs[0]) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ), ((global::Loreline.Internal.Lang.Function) (dynargs[2]) ));
						break;
					}
					
					
					case 1765771592:
					{
						this.resumeBeatRun(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ), ((global::Loreline.Internal.Lang.Function) (dynargs[2]) ));
						break;
					}
					
					
					case 33813649:
					{
						this.resumeNodeBody(((global::Loreline.Runtime.AstNode) (dynargs[0]) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ), ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (dynargs[2]) ))) ), ((global::Loreline.Internal.Lang.Function) (dynargs[3]) ));
						break;
					}
					
					
					case 2107800143:
					{
						this.resumeNode(((global::Loreline.Runtime.AstNode) (dynargs[0]) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ), ((global::Loreline.Internal.Lang.Function) (dynargs[2]) ));
						break;
					}
					
					
					case 1664304497:
					{
						return this.serializeValue(dynargs[0]);
					}
					
					
					case 444663929:
					{
						return this.serializeFields(dynargs[0], ( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) ));
					}
					
					
					case 254255529:
					{
						return this.serializeCharacter(((global::Loreline.Runtime.RuntimeCharacter) (dynargs[0]) ));
					}
					
					
					case 507663209:
					{
						return this.serializeNodeReference(((global::Loreline.Runtime.AstNode) (dynargs[0]) ));
					}
					
					
					case 159640949:
					{
						return this.serializeBeatReference(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
					}
					
					
					case 1855995620:
					{
						return this.serializeNodeStates();
					}
					
					
					case 864408234:
					{
						return this.serializeCharacters();
					}
					
					
					case 897989649:
					{
						return this.serializeState(((global::Loreline.Runtime.RuntimeState) (dynargs[0]) ));
					}
					
					
					case 710162324:
					{
						return this.serializeScope(((global::Loreline.Runtime.RuntimeScope) (dynargs[0]) ));
					}
					
					
					case 1226371975:
					{
						return this.getCharacterField(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), global::Loreline.Internal.Lang.Runtime.toString(dynargs[1]));
					}
					
					
					case 1361606707:
					{
						return this.getCharacter(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 142895533:
					{
						this.resume();
						break;
					}
					
					
					case 1789945678:
					{
						this.restore(dynargs[0]);
						break;
					}
					
					
					case 1280150333:
					{
						return this.save();
					}
					
					
					case 67859554:
					{
						this.start(global::Loreline.Internal.Lang.Runtime.toString(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 1149518628:
					{
						return this.get_currentScope();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("_random");
			baseArr.push("beatToResume");
			baseArr.push("finishTrigger");
			baseArr.push("flushing");
			baseArr.push("syncCallbacks");
			baseArr.push("nextScopeId");
			baseArr.push("currentScope");
			baseArr.push("lens");
			baseArr.push("stack");
			baseArr.push("topLevelFunctions");
			baseArr.push("nodeStates");
			baseArr.push("topLevelBeats");
			baseArr.push("topLevelCharacters");
			baseArr.push("topLevelState");
			baseArr.push("handleFinish");
			baseArr.push("handleChoice");
			baseArr.push("handleDialogue");
			baseArr.push("script");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_resumeNodeBody_942__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_resumeNodeBody_942__Fun(int scopeLevel, int[] resumeIndex, global::Loreline.Internal.Lang.Function next, global::Loreline.Internal.Lang.Function[] moveNext, int[] index, global::Loreline.Runtime.RuntimeScope currentScope, global::Loreline.Internal.Root.Array<object> body, global::Loreline.Runtime.Interpreter _gthis) : base(0, 0) {
			this.scopeLevel = scopeLevel;
			this.resumeIndex = resumeIndex;
			this.next = next;
			this.moveNext = moveNext;
			this.index = index;
			this.currentScope = currentScope;
			this.body = body;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			unchecked {
				if (( ( this.index[0] != -1 ) && ( this.index[0] == this.resumeIndex[0] ) )) {
					global::Loreline.Runtime.AstNode childNode = ((global::Loreline.Runtime.AstNode) (this.body[this.index[0]]) );
					this.index[0]++;
					global::Loreline.Runtime.EvalNext done = this._gthis.wrapNext(this.moveNext[0]);
					this._gthis.resumeNode(childNode, ( this.scopeLevel + 1 ), done.cb);
					done.sync = false;
				}
				else if (( this.index[0] < this.body.length )) {
					global::Loreline.Runtime.AstNode childNode1 = ((global::Loreline.Runtime.AstNode) (this.body[this.index[0]]) );
					this.currentScope.head = childNode1;
					this.index[0]++;
					global::Loreline.Runtime.EvalNext done1 = this._gthis.wrapNext(this.moveNext[0]);
					this._gthis.evalNode(childNode1, done1.cb);
					done1.sync = false;
				}
				else {
					this._gthis.pop();
					this.next.__hx_invoke0_o();
				}
				
				return null;
			}
		}
		
		
		public int scopeLevel;
		
		public int[] resumeIndex;
		
		public global::Loreline.Internal.Lang.Function next;
		
		public global::Loreline.Internal.Lang.Function[] moveNext;
		
		public int[] index;
		
		public global::Loreline.Runtime.RuntimeScope currentScope;
		
		public global::Loreline.Internal.Root.Array<object> body;
		
		public global::Loreline.Runtime.Interpreter _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_initializeTopLevelFunctions_1440__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_initializeTopLevelFunctions_1440__Fun(global::Loreline.Runtime.Interpreter _gthis) : base(2, 1) {
			this._gthis = _gthis;
		}
		
		
		public override double __hx_invoke2_f(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				int max = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((int) (__fn_float2) )) : (((int) (global::Loreline.Internal.Lang.Runtime.toInt(__fn_dyn2)) )) );
				int min = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::Loreline.Internal.Lang.Runtime.toInt(__fn_dyn1)) )) );
				return ((double) (((int) (global::System.Math.Floor(((double) (( min + ( this._gthis.random() * (( ( max + 1 ) - min )) ) )) ))) )) );
			}
		}
		
		
		public global::Loreline.Runtime.Interpreter _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_initializeTopLevelFunctions_1444__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_initializeTopLevelFunctions_1444__Fun(global::Loreline.Runtime.Interpreter _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int n = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::Loreline.Internal.Lang.Runtime.toInt(__fn_dyn1)) )) );
			return ( ((int) (global::System.Math.Floor(((double) (( this._gthis.random() * n )) ))) ) == 0 );
		}
		
		
		public global::Loreline.Runtime.Interpreter _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_initializeTopLevelFunctions_1449__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_initializeTopLevelFunctions_1449__Fun(double seconds) : base(1, 0) {
			this.seconds = seconds;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::Loreline.Internal.Lang.Function done = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Internal.Lang.Function) (((object) (__fn_float1) )) )) : (((global::Loreline.Internal.Lang.Function) (__fn_dyn1) )) );
				global::System.Threading.Thread.Sleep(((int) (((int) (( this.seconds * 1000 )) )) ));
				done.__hx_invoke0_o();
				return null;
			}
		}
		
		
		public double seconds;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_initializeTopLevelFunctions_1448__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_initializeTopLevelFunctions_1448__Fun() : base(1, 0) {
		}
		
		
		public static global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1448__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			double seconds = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((double) (__fn_float1) )) : (((double) (global::Loreline.Internal.Lang.Runtime.toDouble(__fn_dyn1)) )) );
			return new global::Loreline.Runtime.Async(((global::Loreline.Internal.Lang.Function) (new global::Loreline.Runtime.Interpreter_initializeTopLevelFunctions_1449__Fun(seconds)) ));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_wrapNext_1480__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_wrapNext_1480__Fun(global::Loreline.Runtime.EvalNext wrapped, global::Loreline.Internal.Lang.Function cb, global::Loreline.Runtime.Interpreter _gthis) : base(0, 0) {
			this.wrapped = wrapped;
			this.cb = cb;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			if (this.wrapped.sync) {
				if (( this._gthis.syncCallbacks == null )) {
					this._gthis.syncCallbacks = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				}
				
				this._gthis.syncCallbacks.push(this.wrapped.cb);
			}
			else {
				this.cb.__hx_invoke0_o();
				this._gthis.flush();
				this.wrapped.cb = null;
				if (( this._gthis.finishTrigger == this.wrapped )) {
					this._gthis.finish();
				}
				
			}
			
			return null;
		}
		
		
		public global::Loreline.Runtime.EvalNext wrapped;
		
		public global::Loreline.Internal.Lang.Function cb;
		
		public global::Loreline.Runtime.Interpreter _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_evalNodeBody_1797__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_evalNodeBody_1797__Fun(global::Loreline.Internal.Lang.Function next, global::Loreline.Internal.Lang.Function[] moveNext, int[] index, global::Loreline.Internal.Root.Array<object> body, global::Loreline.Runtime.Interpreter _gthis) : base(0, 0) {
			this.next = next;
			this.moveNext = moveNext;
			this.index = index;
			this.body = body;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			if (( this.index[0] < this.body.length )) {
				global::Loreline.Runtime.AstNode childNode = ((global::Loreline.Runtime.AstNode) (this.body[this.index[0]]) );
				this._gthis.get_currentScope().head = childNode;
				this.index[0]++;
				global::Loreline.Runtime.EvalNext done = this._gthis.wrapNext(this.moveNext[0]);
				this._gthis.evalNode(childNode, done.cb);
				done.sync = false;
			}
			else {
				this._gthis.pop();
				this.next.__hx_invoke0_o();
			}
			
			return null;
		}
		
		
		public global::Loreline.Internal.Lang.Function next;
		
		public global::Loreline.Internal.Lang.Function[] moveNext;
		
		public int[] index;
		
		public global::Loreline.Internal.Root.Array<object> body;
		
		public global::Loreline.Runtime.Interpreter _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_evalChoice_1919__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_evalChoice_1919__Fun(global::Loreline.Internal.Lang.Function next, int[] index, global::Loreline.Runtime.NChoiceStatement choice, global::Loreline.Runtime.Interpreter _gthis) : base(0, 0) {
			this.next = next;
			this.index = index;
			this.choice = choice;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			if (( ( this.index[0] >= 0 ) && ( this.index[0] < this.choice.options.length ) )) {
				this._gthis.evalChoiceOption(((global::Loreline.Runtime.NChoiceOption) (this.choice.options[this.index[0]]) ), this.next);
			}
			else {
				this.next.__hx_invoke0_o();
			}
			
			return null;
		}
		
		
		public global::Loreline.Internal.Lang.Function next;
		
		public int[] index;
		
		public global::Loreline.Runtime.NChoiceStatement choice;
		
		public global::Loreline.Runtime.Interpreter _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Interpreter_evalChoice_1930__Fun : global::Loreline.Internal.Lang.Function {
		
		public Interpreter_evalChoice_1930__Fun(int[] index, global::Loreline.Runtime.EvalNext choiceCallback) : base(1, 0) {
			this.index = index;
			this.choiceCallback = choiceCallback;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int index_ = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::Loreline.Internal.Lang.Runtime.toInt(__fn_dyn1)) )) );
			this.index[0] = index_;
			this.choiceCallback.cb.__hx_invoke0_o();
			return null;
		}
		
		
		public int[] index;
		
		public global::Loreline.Runtime.EvalNext choiceCallback;
		
	}
}


