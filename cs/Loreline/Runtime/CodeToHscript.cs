// Generated by Haxe 4.3.6

#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime._CodeToHscript {
	public sealed class CodeToHscriptStackType_Impl_ {
		
		static CodeToHscriptStackType_Impl_() {
			unchecked{
				global::Loreline.Runtime._CodeToHscript.CodeToHscriptStackType_Impl_.ObjectBrace = ((int) (0) );
				global::Loreline.Runtime._CodeToHscript.CodeToHscriptStackType_Impl_.ArrayBracket = ((int) (1) );
				global::Loreline.Runtime._CodeToHscript.CodeToHscriptStackType_Impl_.Brace = ((int) (2) );
				global::Loreline.Runtime._CodeToHscript.CodeToHscriptStackType_Impl_.Indent = ((int) (3) );
				global::Loreline.Runtime._CodeToHscript.CodeToHscriptStackType_Impl_.Bracket = ((int) (4) );
				global::Loreline.Runtime._CodeToHscript.CodeToHscriptStackType_Impl_.Paren = ((int) (5) );
			}
		}
		
		
		public static int ObjectBrace;
		
		public static int ArrayBracket;
		
		public static int Brace;
		
		public static int Indent;
		
		public static int Bracket;
		
		public static int Paren;
		
		public static string toString(int this1) {
			unchecked {
				switch (this1) {
					case 0:
					{
						return "ObjectBrace";
					}
					
					
					case 1:
					{
						return "ArrayBracket";
					}
					
					
					case 2:
					{
						return "Brace";
					}
					
					
					case 3:
					{
						return "Indent";
					}
					
					
					case 4:
					{
						return "Bracket";
					}
					
					
					case 5:
					{
						return "Paren";
					}
					
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class CodeToHscript : global::Loreline.Internal.Lang.HxObject {
		
		static CodeToHscript() {
			global::Loreline.Runtime.CodeToHscript.CONTROL_KEYWORDS = new global::Loreline.Internal.Root.Array<string>(new string[]{"for", "while", "if", "else", "switch", "catch"});
		}
		
		
		public CodeToHscript(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public CodeToHscript() {
			global::Loreline.Runtime.CodeToHscript.__hx_ctor_loreline_CodeToHscript(this);
		}
		
		
		protected static void __hx_ctor_loreline_CodeToHscript(global::Loreline.Runtime.CodeToHscript __hx_this) {
			__hx_this.indentStack = null;
			__hx_this.indentLevel = 0;
			__hx_this.inControlWithoutParens = false;
			__hx_this.inControl = false;
			__hx_this.currentPosOffset = 0;
			__hx_this.posOffsets = null;
			__hx_this.inString = false;
			__hx_this.inComment = false;
			__hx_this.indent = 0;
			__hx_this.length = 0;
			__hx_this.lineOutput = null;
			__hx_this.output = null;
			__hx_this.input = null;
			__hx_this.index = 0;
			{
			}
			
		}
		
		
		public static global::Loreline.Internal.Root.Array<string> CONTROL_KEYWORDS;
		
		public int index;
		
		public string input;
		
		public global::Loreline.Internal.Root.StringBuf output;
		
		public global::Loreline.Internal.Root.StringBuf lineOutput;
		
		public int length;
		
		public int indent;
		
		public bool inComment;
		
		public bool inString;
		
		public global::Loreline.Internal.Root.Array<int> posOffsets;
		
		public int currentPosOffset;
		
		public bool inControl;
		
		public bool inControlWithoutParens;
		
		public int indentLevel;
		
		public global::Loreline.Internal.Root.Array<int> indentStack;
		
		public global::Loreline.Internal.Root.Array<int> stack;
		
		public virtual string process(string input) {
			input = global::Loreline.Internal.Lang.Runtime.concat(input, "\n//");
			this.input = input;
			this.index = 0;
			this.output = new global::Loreline.Internal.Root.StringBuf();
			this.lineOutput = new global::Loreline.Internal.Root.StringBuf();
			this.length = input.Length;
			this.indent = 0;
			this.inComment = false;
			this.inString = false;
			this.posOffsets = new global::Loreline.Internal.Root.Array<int>(new int[]{});
			this.currentPosOffset = 0;
			this.inControl = false;
			this.inControlWithoutParens = false;
			this.indentStack = new global::Loreline.Internal.Root.Array<int>(new int[]{});
			this.indentLevel = 0;
			this.stack = new global::Loreline.Internal.Root.Array<int>(new int[]{});
			this.processInput(default(global::Loreline.Internal.Lang.Null<int>));
			return global::Loreline.Internal.Lang.Runtime.concat(this.output.b.ToString().TrimEnd(), "\n");
		}
		
		
		public virtual global::Loreline.Runtime.Position toLorelinePos(global::Loreline.Runtime.Position funcPos, int pmin, int pmax) {
			unchecked {
				int min = this.inputPosFromProcessedPos(pmin);
				int max = this.inputPosFromProcessedPos(pmax);
				int len = ( ( max + 1 ) - min );
				return funcPos.withOffset(this.input, min, new global::Loreline.Internal.Lang.Null<int>(len, true), new global::Loreline.Internal.Lang.Null<int>(funcPos.offset, true));
			}
		}
		
		
		public virtual int inputPosFromProcessedPos(int pos) {
			unchecked {
				if (( pos < 0 )) {
					return 0;
				}
				
				if (( pos >= this.posOffsets.length )) {
					return ( ( this.input.Length - 1 ) - this.posOffsets[( this.input.Length - 1 )] );
				}
				
				return ( pos - this.posOffsets[pos] );
			}
		}
		
		
		public virtual int processedPosFromInputPos(int pos) {
			unchecked {
				if (( pos < 0 )) {
					return 0;
				}
				
				if (( pos >= this.input.Length )) {
					return ( this.output.b.Length - 1 );
				}
				
				int count = 0;
				{
					int _g = 0;
					int _g1 = this.posOffsets.length;
					while (( _g < _g1 )) {
						int i = _g++;
						if (( ( i - this.posOffsets[i] ) > pos )) {
							return ( i - 1 );
						}
						else if (( ( i - this.posOffsets[i] ) == pos )) {
							return i;
						}
						
						count = i;
					}
					
				}
				
				return count;
			}
		}
		
		
		public virtual void processInput(global::Loreline.Internal.Lang.Null<int> until) {
			unchecked {
				int until1 = ( ( ! (until.hasValue) ) ? (-1) : ((until).@value) );
				int braceLevel = 0;
				int bracketLevel = 0;
				int parenLevel = 0;
				while (( this.index < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.index);
					if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 34)) {
						this.processString();
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 39)) {
						this.error("Unexpected single quote");
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 47)) {
						global::Loreline.Internal.Lang.Null<int> cc = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 1 ));
						if (( global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 47) || global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 42) )) {
							this.processComment();
						}
						else {
							this._add((c).@value, true);
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 10)) {
						this._add((c).@value, true);
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 123)) {
						 ++ braceLevel;
						this._add((c).@value, true);
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 125)) {
						 -- braceLevel;
						if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), until1) && ( braceLevel < 0 ) )) {
							return;
						}
						else {
							this._add((c).@value, true);
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 91)) {
						 ++ bracketLevel;
						this._add((c).@value, true);
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 93)) {
						 -- bracketLevel;
						if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), until1) && ( bracketLevel < 0 ) )) {
							return;
						}
						else {
							this._add((c).@value, true);
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 40)) {
						 ++ parenLevel;
						this._add((c).@value, true);
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 41)) {
						 -- parenLevel;
						if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), until1) && ( parenLevel < 0 ) )) {
							return;
						}
						else {
							this._add((c).@value, true);
						}
						
					}
					else if (( ( this.isAlphaNumeric((c).@value) && ( this.index > 0 ) ) &&  ! (this.isAlphaNumeric((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index - 1 ))).@value))  )) {
						if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 97)) {
							if (( ( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 1 ))).toDynamic(), 110) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 2 ))).toDynamic(), 100) ) &&  ! (this.isAlphaNumeric((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 3 ))).@value))  )) {
								this._add(38, true);
								this._add(38, true);
								this._add(32, true);
							}
							else {
								this._add((c).@value, true);
							}
							
						}
						else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 111)) {
							if (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 1 ))).toDynamic(), 114) &&  ! (this.isAlphaNumeric((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 2 ))).@value))  )) {
								this._add(124, true);
								this._add(124, true);
								this._add(32, true);
							}
							else {
								this._add((c).@value, true);
							}
							
						}
						else {
							this._add((c).@value, true);
						}
						
					}
					else {
						this._add((c).@value, true);
					}
					
				}
				
			}
		}
		
		
		public virtual void processString() {
			unchecked {
				this.inString = true;
				this._add(34, true);
				bool escaped = false;
				while (( this.index < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.index);
					if (escaped) {
						this._add((c).@value, true);
						escaped = false;
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 92)) {
						escaped = true;
						this._add(92, true);
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 34)) {
						this._add((c).@value, true);
						this.inString = false;
						return;
					}
					else if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 36) &&  ! (escaped)  )) {
						this.index++;
						c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.index);
						if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 123)) {
							this.currentPosOffset--;
							this._add(34, false);
							this._add(43, false);
							this._add(40, true);
							this.inString = false;
							this.processComplexInterpolation();
							this.inString = true;
							this._add(41, true);
							this.currentPosOffset--;
							this._add(43, false);
							this._add(34, false);
							this.currentPosOffset++;
						}
						else {
							int c1 = (c).@value;
							if (( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) )) {
								this.currentPosOffset--;
								this._add(34, false);
								this._add(43, false);
								this.processFieldAccessInterpolation();
								this.currentPosOffset--;
								this._add(43, false);
								this._add(34, false);
								this.currentPosOffset++;
							}
							else {
								this.error("Expected identifier or { after $");
							}
							
						}
						
					}
					else {
						this._add((c).@value, true);
					}
					
				}
				
				this.error("Unterminated string");
			}
		}
		
		
		public virtual void processComplexInterpolation() {
			unchecked {
				this.processInput(new global::Loreline.Internal.Lang.Null<int>(125, true));
			}
		}
		
		
		public virtual void processFieldAccessInterpolation() {
			unchecked {
				int c = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.index)).@value;
				if ( ! ((( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) ))) ) {
					this.error("Expected identifier in field access");
				}
				
				this.processIdentifier();
				while (( this.index < this.length )) {
					global::Loreline.Internal.Lang.Null<int> _g = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.index);
					if ( ! (_g.hasValue) ) {
						break;
					}
					else {
						switch (((_g)).@value) {
							case 40:
							{
								this._add(40, true);
								this.processInput(new global::Loreline.Internal.Lang.Null<int>(41, true));
								this._add(41, true);
								break;
							}
							
							
							case 46:
							{
								bool tmp = default(bool);
								if (( ( this.index + 1 ) < this.length )) {
									int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 1 ))).@value;
									tmp = ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) );
								}
								else {
									tmp = false;
								}
								
								if (tmp) {
									this._add(46, true);
									this.processIdentifier();
								}
								else {
									goto label1;
								}
								
								break;
							}
							
							
							case 91:
							{
								this._add(91, true);
								this.processInput(new global::Loreline.Internal.Lang.Null<int>(93, true));
								break;
							}
							
							
							default:
							{
								goto label1;
							}
							
						}
						
					}
					
				}
				label1: {};
			}
		}
		
		
		public virtual void processIdentifier() {
			unchecked {
				while (( this.index < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.index);
					int c1 = (c).@value;
					if ( ! ((( ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ) || ( ( c1 >= 48 ) && ( c1 <= 57 ) ) ))) ) {
						break;
					}
					
					this._add((c).@value, true);
				}
				
			}
		}
		
		
		public bool isDigit(int c) {
			unchecked {
				if (( c >= 48 )) {
					return ( c <= 57 );
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public bool isIdentifierStart(int c) {
			unchecked {
				if ( ! ((( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ))) ) {
					return ( c == 95 );
				}
				else {
					return true;
				}
				
			}
		}
		
		
		public bool isIdentifierPart(int c) {
			unchecked {
				if ( ! ((( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) ))) ) {
					if (( c >= 48 )) {
						return ( c <= 57 );
					}
					else {
						return false;
					}
					
				}
				else {
					return true;
				}
				
			}
		}
		
		
		public virtual void processComment() {
			unchecked {
				this.inComment = true;
				global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 1 ));
				if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 47)) {
					this._add(32, true);
					this._add(32, true);
					while (( this.index < this.length )) {
						global::Loreline.Internal.Lang.Null<int> cc = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.index);
						if (global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 10)) {
							break;
						}
						
						this._add(32, true);
					}
					
				}
				else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 42)) {
					this._add(32, true);
					this._add(32, true);
					while (( this.index < this.length )) {
						global::Loreline.Internal.Lang.Null<int> cc1 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.index);
						if (( ( global::Loreline.Internal.Lang.Runtime.eq((cc1).toDynamic(), 42) && ( ( this.index + 1 ) < this.length ) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.index + 1 ))).toDynamic(), 47) )) {
							this._add(32, true);
							this._add(32, true);
							break;
						}
						else if (global::Loreline.Internal.Lang.Runtime.eq((cc1).toDynamic(), 10)) {
							this._add(10, true);
						}
						else {
							this._add(32, true);
						}
						
					}
					
				}
				
				this.inComment = false;
			}
		}
		
		
		public virtual bool endsWithChar(string line, int c) {
			unchecked {
				if (( line.Length == 0 )) {
					return false;
				}
				
				string trimmed = line.TrimEnd();
				int len = trimmed.Length;
				if (( len > 0 )) {
					return global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(trimmed, ( len - 1 ))).toDynamic(), c);
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public virtual bool followsWithChar(int c, int pos) {
			unchecked {
				int tempIndex = pos;
				while (( tempIndex < this.length )) {
					global::Loreline.Internal.Lang.Null<int> cc = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, tempIndex);
					if (( ( ( global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 32) || global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 9) ) || global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 10) ) || global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 13) )) {
						 ++ tempIndex;
						continue;
					}
					
					if (( global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 47) && ( ( tempIndex + 1 ) < this.length ) )) {
						global::Loreline.Internal.Lang.Null<int> nextChar = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( tempIndex + 1 ));
						if (global::Loreline.Internal.Lang.Runtime.eq((nextChar).toDynamic(), 47)) {
							tempIndex += 2;
							while (( ( tempIndex < this.length ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, tempIndex)).toDynamic(), 10)) ) )) {
								 ++ tempIndex;
							}
							
							if (( tempIndex < this.length )) {
								 ++ tempIndex;
							}
							
							continue;
						}
						
						if (global::Loreline.Internal.Lang.Runtime.eq((nextChar).toDynamic(), 42)) {
							tempIndex += 2;
							while (( ( tempIndex + 1 ) < this.length )) {
								if (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, tempIndex)).toDynamic(), 42) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( tempIndex + 1 ))).toDynamic(), 47) )) {
									tempIndex += 2;
									break;
								}
								
								 ++ tempIndex;
							}
							
							continue;
						}
						
					}
					
					return global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), c);
				}
				
				return false;
			}
		}
		
		
		public virtual bool endsOrFollowsWithChar(string line, int c, int pos) {
			if ( ! (this.endsWithChar(line, c)) ) {
				return this.followsWithChar(c, pos);
			}
			else {
				return true;
			}
			
		}
		
		
		public virtual int nextLineIndentOffset(string line, int pos) {
			unchecked {
				string currentLine = line.TrimStart();
				if (( currentLine.Length == 0 )) {
					return 0;
				}
				
				int currentIndent = ( line.Length - currentLine.Length );
				while (( pos < this.length )) {
					int endLine = global::Loreline.Internal.Lang.StringExt.indexOf(this.input, "\n", new global::Loreline.Internal.Lang.Null<int>(pos, true));
					if (( endLine == -1 )) {
						endLine = this.length;
					}
					
					string nextLine = global::Loreline.Internal.Lang.StringExt.substring(this.input, pos, new global::Loreline.Internal.Lang.Null<int>(endLine, true));
					string trimmed = nextLine.TrimStart();
					if (( trimmed.Length > 0 )) {
						int nextIndent = ( nextLine.Length - trimmed.Length );
						return ( nextIndent - currentIndent );
					}
					
					pos = ( endLine + 1 );
				}
				
				return 0;
			}
		}
		
		
		public virtual bool followsWithIf(int pos) {
			unchecked {
				int tempIndex = pos;
				while (( tempIndex < this.length )) {
					global::Loreline.Internal.Lang.Null<int> cc = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, tempIndex);
					if (( ( ( global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 32) || global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 9) ) || global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 10) ) || global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 13) )) {
						 ++ tempIndex;
						continue;
					}
					
					if (( global::Loreline.Internal.Lang.Runtime.eq((cc).toDynamic(), 47) && ( ( tempIndex + 1 ) < this.length ) )) {
						global::Loreline.Internal.Lang.Null<int> nextChar = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( tempIndex + 1 ));
						if (global::Loreline.Internal.Lang.Runtime.eq((nextChar).toDynamic(), 47)) {
							tempIndex += 2;
							while (( ( tempIndex < this.length ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, tempIndex)).toDynamic(), 10)) ) )) {
								 ++ tempIndex;
							}
							
							continue;
						}
						
						if (global::Loreline.Internal.Lang.Runtime.eq((nextChar).toDynamic(), 42)) {
							tempIndex += 2;
							while (( ( tempIndex + 1 ) < this.length )) {
								if (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, tempIndex)).toDynamic(), 42) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( tempIndex + 1 ))).toDynamic(), 47) )) {
									tempIndex += 2;
									break;
								}
								
								 ++ tempIndex;
							}
							
							continue;
						}
						
					}
					
					if (( ( ( ( tempIndex + 1 ) < this.length ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, tempIndex)).toDynamic(), 105) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( tempIndex + 1 ))).toDynamic(), 102) )) {
						if (( ( ( tempIndex + 2 ) >= this.length ) ||  ! (this.isAlphaNumeric((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( tempIndex + 2 ))).@value))  )) {
							return true;
						}
						
					}
					
					return false;
				}
				
				return false;
			}
		}
		
		
		public virtual bool endsWithControlKeyword(string line, int pos) {
			unchecked {
				string trimmed = line.TrimEnd();
				if (( trimmed.Length == 0 )) {
					return false;
				}
				
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<string> _g1 = global::Loreline.Runtime.CodeToHscript.CONTROL_KEYWORDS;
					while (( _g < _g1.length )) {
						string keyword = _g1[_g];
						 ++ _g;
						if (trimmed.EndsWith(keyword)) {
							int trimmedSize = ( line.Length - trimmed.Length );
							int keywordPos = ( trimmed.Length - keyword.Length );
							bool hasValidPrefix = ( ( keywordPos == 0 ) ||  ! (this.isAlphaNumeric((global::Loreline.Internal.Lang.StringExt.charCodeAt(trimmed, ( keywordPos - 1 ))).@value))  );
							int nextPos = pos;
							bool hasValidSuffix = ( ( nextPos < this.length ) && (( ( trimmedSize > 0 ) ||  ! (this.isAlphaNumeric((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, nextPos)).@value))  )) );
							if (( hasValidPrefix && hasValidSuffix )) {
								if (( ( keyword != "else" ) ||  ! (this.followsWithIf(pos))  )) {
									return true;
								}
								
							}
							
						}
						
					}
					
				}
				
				return false;
			}
		}
		
		
		public virtual bool endsWithArrayIndexable(string line) {
			unchecked {
				int length = line.Length;
				if (( length == 0 )) {
					return false;
				}
				
				int lastNonWhitespacePos = ( length - 1 );
				while (( lastNonWhitespacePos >= 0 )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(line, lastNonWhitespacePos);
					if ( ! (this.isWhitespace((c).@value)) ) {
						break;
					}
					
					 -- lastNonWhitespacePos;
				}
				
				if (( lastNonWhitespacePos < 0 )) {
					return false;
				}
				
				global::Loreline.Internal.Lang.Null<int> lastChar = global::Loreline.Internal.Lang.StringExt.charCodeAt(line, lastNonWhitespacePos);
				if ( ! ((( ( global::Loreline.Internal.Lang.Runtime.eq((lastChar).toDynamic(), 41) || global::Loreline.Internal.Lang.Runtime.eq((lastChar).toDynamic(), 125) ) || global::Loreline.Internal.Lang.Runtime.eq((lastChar).toDynamic(), 93) ))) ) {
					return this.isAlphaNumeric((lastChar).@value);
				}
				else {
					return true;
				}
				
			}
		}
		
		
		public virtual bool isWhitespace(int c) {
			unchecked {
				if ( ! ((( ( ( c == 32 ) || ( c == 10 ) ) || ( c == 9 ) ))) ) {
					return ( c == 13 );
				}
				else {
					return true;
				}
				
			}
		}
		
		
		public virtual bool isAlphaNumeric(int c) {
			unchecked {
				if ( ! ((( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) ))) ) {
					return ( c == 95 );
				}
				else {
					return true;
				}
				
			}
		}
		
		
		public virtual bool inStatementsBlock() {
			unchecked {
				int i = ( this.stack.length - 1 );
				if (( i >= 0 )) {
					if (( this.stack[i] != ((int) (2) ) )) {
						return ( this.stack[i] == ((int) (3) ) );
					}
					else {
						return true;
					}
					
				}
				
				return true;
			}
		}
		
		
		public virtual bool inObjectBlock() {
			unchecked {
				int i = ( this.stack.length - 1 );
				while (( i >= 0 )) {
					if (( this.stack[i] != ((int) (3) ) )) {
						bool res = ( this.stack[i] == ((int) (0) ) );
						return res;
					}
					
					 -- i;
				}
				
				return false;
			}
		}
		
		
		public virtual bool inArrayBlock() {
			unchecked {
				int i = ( this.stack.length - 1 );
				while (( i >= 0 )) {
					if (( this.stack[i] != ((int) (3) ) )) {
						bool res = ( this.stack[i] == ((int) (1) ) );
						return res;
					}
					
					 -- i;
				}
				
				return false;
			}
		}
		
		
		public virtual bool isLabelStart(int pos) {
			unchecked {
				pos = this.skipWhitespaceAndComments(pos);
				int c = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value;
				if ( ! ((( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) ))) ) {
					return false;
				}
				
				int startPos = pos;
				 ++ pos;
				while (true) {
					bool tmp = default(bool);
					if (( pos < this.length )) {
						int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value;
						tmp = ( ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ) || ( ( c1 >= 48 ) && ( c1 <= 57 ) ) );
					}
					else {
						tmp = false;
					}
					
					if ( ! (tmp) ) {
						break;
					}
					
					 ++ pos;
				}
				
				while (( ( pos < this.length ) && this.isWhitespace((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value) )) {
					 ++ pos;
				}
				
				if (( ( pos >= this.length ) || ( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 58)) ) )) {
					return false;
				}
				
				string word = global::Loreline.Internal.Lang.StringExt.substr(this.input, startPos, new global::Loreline.Internal.Lang.Null<int>(( pos - startPos ), true));
				if (( word == "case" )) {
					return false;
				}
				
				return true;
			}
		}
		
		
		public virtual int skipWhitespaceAndComments(int pos) {
			unchecked {
				int startPos = pos;
				bool foundContent = false;
				while (( pos < this.length )) {
					while (( ( pos < this.length ) && (( ( ( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 32) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 9) ) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 10) ) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 13) )) )) {
						 ++ pos;
						foundContent = true;
					}
					
					if (( pos < ( this.length - 1 ) )) {
						if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 47)) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 47)) {
								pos = startPos;
								return pos;
							}
							else if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 42)) {
								pos += 2;
								foundContent = true;
								bool commentClosed = false;
								while (( pos < ( this.length - 1 ) )) {
									if (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 42) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 47) )) {
										pos += 2;
										commentClosed = true;
										break;
									}
									
									 ++ pos;
								}
								
								if ( ! (commentClosed) ) {
									pos = startPos;
									return pos;
								}
								
								continue;
							}
							
						}
						
					}
					
					break;
				}
				
				if (foundContent) {
					return pos;
				}
				else {
					return startPos;
				}
				
			}
		}
		
		
		public void stackPush(int item) {
			this.stack.push(item);
		}
		
		
		public global::Loreline.Internal.Lang.Null<int> stackPop() {
			return this.stack.pop();
		}
		
		
		public virtual void _add(int c, bool incrementIndex) {
			unchecked {
				if (incrementIndex) {
					this.index++;
				}
				else {
					this.currentPosOffset++;
				}
				
				if (this.inString) {
					this.lineOutput.addChar(( (( c == 34 )) ? (c) : (32) ));
					this.output.addChar(c);
					this.posOffsets.push(this.currentPosOffset);
				}
				else if (( c == 10 )) {
					if (this.inControlWithoutParens) {
						this.inControlWithoutParens = false;
						if (( ! (global::Loreline.Internal.Lang.Runtime.eq((this.stack.pop()).toDynamic(), ((int) (5) ))) )) {
							this.error("Unexpected end of line");
						}
						
						this.currentPosOffset++;
						this.lineOutput.addChar(41);
						this.output.addChar(41);
						this.posOffsets.push(this.currentPosOffset);
					}
					
					this.inControl = false;
					string line = this.lineOutput.b.ToString();
					this.lineOutput = new global::Loreline.Internal.Root.StringBuf();
					if (( ( this.inStatementsBlock() || this.inObjectBlock() ) || this.inArrayBlock() )) {
						int indent = this.nextLineIndentOffset(line, this.index);
						if (( line.Trim().Length == 0 )) {
						}
						else if (( ( ( indent > 0 ) &&  ! (this.endsOrFollowsWithChar(line, 123, this.index))  ) &&  ! (this.endsOrFollowsWithChar(line, 91, this.index))  )) {
							this.stack.push(((int) (3) ));
							this.indentLevel += indent;
							this.indentStack.push(this.indentLevel);
							this.currentPosOffset++;
							this.output.addChar(32);
							this.posOffsets.push(this.currentPosOffset);
							this.currentPosOffset++;
							this.output.addChar(123);
							this.posOffsets.push(this.currentPosOffset);
						}
						else if (( ( ( indent < 0 ) && ( this.stack.length > 0 ) ) && ( this.stack[( this.stack.length - 1 )] == ((int) (3) ) ) )) {
							if ((  ! (this.inObjectBlock())  &&  ! (this.endsOrFollowsWithChar(line, 59, this.index))  )) {
								this.currentPosOffset++;
								this.output.addChar(59);
								this.posOffsets.push(this.currentPosOffset);
							}
							
							this.indentLevel += indent;
							bool first = true;
							while (( ( ( this.indentStack[( this.indentStack.length - 1 )] > this.indentLevel ) && ( this.stack.length > 0 ) ) && ( this.stack[( this.stack.length - 1 )] == ((int) (3) ) ) )) {
								this.stack.pop();
								this.indentStack.pop();
								if (first) {
									first = false;
									this.currentPosOffset++;
									this.output.addChar(32);
									this.posOffsets.push(this.currentPosOffset);
								}
								
								this.currentPosOffset++;
								this.output.addChar(125);
								this.posOffsets.push(this.currentPosOffset);
							}
							
						}
						else if (( ( ( indent == 0 ) &&  ! (this.endsOrFollowsWithChar(line, 59, this.index))  ) &&  ! (this.endsOrFollowsWithChar(line, 44, this.index))  )) {
							if (this.inObjectBlock()) {
								this.currentPosOffset++;
								this.output.addChar(44);
								this.posOffsets.push(this.currentPosOffset);
							}
							else if (this.inArrayBlock()) {
								this.currentPosOffset++;
								this.output.addChar(44);
								this.posOffsets.push(this.currentPosOffset);
							}
							else {
								this.currentPosOffset++;
								this.output.addChar(59);
								this.posOffsets.push(this.currentPosOffset);
							}
							
						}
						
					}
					
					this.output.addChar(c);
					this.posOffsets.push(this.currentPosOffset);
				}
				else if (( (  ! (this.inControl)  &&  ! (this.isWhitespace(c))  ) && this.endsWithControlKeyword(this.lineOutput.b.ToString(), ( this.index - 1 )) )) {
					this.inControl = true;
					if ( ! (this.followsWithChar(40, this.index)) ) {
						this.inControlWithoutParens = true;
						this.stack.push(((int) (5) ));
						this.currentPosOffset++;
						this.lineOutput.addChar(c);
						this.output.addChar(40);
						this.posOffsets.push(this.currentPosOffset);
					}
					
					this.lineOutput.addChar(c);
					this.output.addChar(c);
					this.posOffsets.push(this.currentPosOffset);
				}
				else {
					if (( c == 40 )) {
						this.stack.push(((int) (5) ));
					}
					else if (( c == 41 )) {
						if (( ! (global::Loreline.Internal.Lang.Runtime.eq((this.stack.pop()).toDynamic(), ((int) (5) ))) )) {
							this.error("Unexpected: )");
						}
						
					}
					else if (( c == 91 )) {
						if ( ! (this.endsWithArrayIndexable(this.lineOutput.b.ToString())) ) {
							this.stack.push(((int) (1) ));
						}
						else {
							this.stack.push(((int) (4) ));
						}
						
					}
					else if (( c == 93 )) {
						global::Loreline.Internal.Lang.Null<int> popped = this.stack.pop();
						if (( ( ! (global::Loreline.Internal.Lang.Runtime.eq((popped).toDynamic(), ((int) (4) ))) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((popped).toDynamic(), ((int) (1) ))) ) )) {
							this.error("Unexpected: ]");
						}
						
					}
					else if (( c == 123 )) {
						if (this.isLabelStart(this.index)) {
							this.stack.push(((int) (0) ));
						}
						else {
							this.stack.push(((int) (2) ));
						}
						
					}
					else if (( c == 125 )) {
						global::Loreline.Internal.Lang.Null<int> popped1 = this.stack.pop();
						if (( ( ! (global::Loreline.Internal.Lang.Runtime.eq((popped1).toDynamic(), ((int) (2) ))) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((popped1).toDynamic(), ((int) (0) ))) ) )) {
							this.error("Unexpected: }");
						}
						
					}
					
					this.lineOutput.addChar(c);
					this.output.addChar(c);
					this.posOffsets.push(this.currentPosOffset);
				}
				
			}
		}
		
		
		public virtual void error(string message) {
			throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(new global::Loreline.Runtime.Error(((string) (message) ), ((global::Loreline.Runtime.Position) (global::Loreline.Runtime.Position.fromContentAndIndex(this.input, this.index, default(global::Loreline.Internal.Lang.Null<int>))) )))) );
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 933032312:
					{
						this.indentLevel = ((int) (@value) );
						return @value;
					}
					
					
					case 1285965006:
					{
						this.currentPosOffset = ((int) (@value) );
						return @value;
					}
					
					
					case 334695532:
					{
						this.indent = ((int) (@value) );
						return @value;
					}
					
					
					case 520590566:
					{
						this.length = ((int) (@value) );
						return @value;
					}
					
					
					case 1041537810:
					{
						this.index = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 67856200:
					{
						this.stack = ((global::Loreline.Internal.Root.Array<int>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<int>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 1229275964:
					{
						this.indentStack = ((global::Loreline.Internal.Root.Array<int>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<int>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 933032312:
					{
						this.indentLevel = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1197201529:
					{
						this.inControlWithoutParens = global::Loreline.Internal.Lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 2139336184:
					{
						this.inControl = global::Loreline.Internal.Lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1285965006:
					{
						this.currentPosOffset = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1839230540:
					{
						this.posOffsets = ((global::Loreline.Internal.Root.Array<int>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<int>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 430862998:
					{
						this.inString = global::Loreline.Internal.Lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1735572730:
					{
						this.inComment = global::Loreline.Internal.Lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 334695532:
					{
						this.indent = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 520590566:
					{
						this.length = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1630079509:
					{
						this.lineOutput = ((global::Loreline.Internal.Root.StringBuf) (@value) );
						return @value;
					}
					
					
					case 209784577:
					{
						this.output = ((global::Loreline.Internal.Root.StringBuf) (@value) );
						return @value;
					}
					
					
					case 1042138122:
					{
						this.input = global::Loreline.Internal.Lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1041537810:
					{
						this.index = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1932118984:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "error", 1932118984)) );
					}
					
					
					case 1058354978:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "_add", 1058354978)) );
					}
					
					
					case 430140201:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "stackPop", 430140201)) );
					}
					
					
					case 1432283458:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "stackPush", 1432283458)) );
					}
					
					
					case 1049493423:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "skipWhitespaceAndComments", 1049493423)) );
					}
					
					
					case 1913514584:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isLabelStart", 1913514584)) );
					}
					
					
					case 2096143673:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "inArrayBlock", 2096143673)) );
					}
					
					
					case 1687338537:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "inObjectBlock", 1687338537)) );
					}
					
					
					case 684564196:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "inStatementsBlock", 684564196)) );
					}
					
					
					case 903219737:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isAlphaNumeric", 903219737)) );
					}
					
					
					case 397157895:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isWhitespace", 397157895)) );
					}
					
					
					case 2090772433:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "endsWithArrayIndexable", 2090772433)) );
					}
					
					
					case 1745227786:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "endsWithControlKeyword", 1745227786)) );
					}
					
					
					case 273776389:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "followsWithIf", 273776389)) );
					}
					
					
					case 1365207622:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "nextLineIndentOffset", 1365207622)) );
					}
					
					
					case 873998019:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "endsOrFollowsWithChar", 873998019)) );
					}
					
					
					case 1660787710:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "followsWithChar", 1660787710)) );
					}
					
					
					case 499027028:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "endsWithChar", 499027028)) );
					}
					
					
					case 869186480:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "processComment", 869186480)) );
					}
					
					
					case 1821243014:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isIdentifierPart", 1821243014)) );
					}
					
					
					case 1449108079:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isIdentifierStart", 1449108079)) );
					}
					
					
					case 1984794979:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isDigit", 1984794979)) );
					}
					
					
					case 385314744:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "processIdentifier", 385314744)) );
					}
					
					
					case 1241311189:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "processFieldAccessInterpolation", 1241311189)) );
					}
					
					
					case 2023816419:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "processComplexInterpolation", 2023816419)) );
					}
					
					
					case 1736653984:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "processString", 1736653984)) );
					}
					
					
					case 634543899:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "processInput", 634543899)) );
					}
					
					
					case 655239674:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "processedPosFromInputPos", 655239674)) );
					}
					
					
					case 145414650:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "inputPosFromProcessedPos", 145414650)) );
					}
					
					
					case 1603104271:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "toLorelinePos", 1603104271)) );
					}
					
					
					case 1900716655:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "process", 1900716655)) );
					}
					
					
					case 67856200:
					{
						return this.stack;
					}
					
					
					case 1229275964:
					{
						return this.indentStack;
					}
					
					
					case 933032312:
					{
						return this.indentLevel;
					}
					
					
					case 1197201529:
					{
						return this.inControlWithoutParens;
					}
					
					
					case 2139336184:
					{
						return this.inControl;
					}
					
					
					case 1285965006:
					{
						return this.currentPosOffset;
					}
					
					
					case 1839230540:
					{
						return this.posOffsets;
					}
					
					
					case 430862998:
					{
						return this.inString;
					}
					
					
					case 1735572730:
					{
						return this.inComment;
					}
					
					
					case 334695532:
					{
						return this.indent;
					}
					
					
					case 520590566:
					{
						return this.length;
					}
					
					
					case 1630079509:
					{
						return this.lineOutput;
					}
					
					
					case 209784577:
					{
						return this.output;
					}
					
					
					case 1042138122:
					{
						return this.input;
					}
					
					
					case 1041537810:
					{
						return this.index;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 933032312:
					{
						return ((double) (this.indentLevel) );
					}
					
					
					case 1285965006:
					{
						return ((double) (this.currentPosOffset) );
					}
					
					
					case 334695532:
					{
						return ((double) (this.indent) );
					}
					
					
					case 520590566:
					{
						return ((double) (this.length) );
					}
					
					
					case 1041537810:
					{
						return ((double) (this.index) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1932118984:
					{
						this.error(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]));
						break;
					}
					
					
					case 1058354978:
					{
						this._add(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ), global::Loreline.Internal.Lang.Runtime.toBool(dynargs[1]));
						break;
					}
					
					
					case 430140201:
					{
						return (this.stackPop()).toDynamic();
					}
					
					
					case 1432283458:
					{
						this.stackPush(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
						break;
					}
					
					
					case 1049493423:
					{
						return this.skipWhitespaceAndComments(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1913514584:
					{
						return this.isLabelStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 2096143673:
					{
						return this.inArrayBlock();
					}
					
					
					case 1687338537:
					{
						return this.inObjectBlock();
					}
					
					
					case 684564196:
					{
						return this.inStatementsBlock();
					}
					
					
					case 903219737:
					{
						return this.isAlphaNumeric(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 397157895:
					{
						return this.isWhitespace(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 2090772433:
					{
						return this.endsWithArrayIndexable(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 1745227786:
					{
						return this.endsWithControlKeyword(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ));
					}
					
					
					case 273776389:
					{
						return this.followsWithIf(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1365207622:
					{
						return this.nextLineIndentOffset(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ));
					}
					
					
					case 873998019:
					{
						return this.endsOrFollowsWithChar(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[2])) ));
					}
					
					
					case 1660787710:
					{
						return this.followsWithChar(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ));
					}
					
					
					case 499027028:
					{
						return this.endsWithChar(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ));
					}
					
					
					case 869186480:
					{
						this.processComment();
						break;
					}
					
					
					case 1821243014:
					{
						return this.isIdentifierPart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1449108079:
					{
						return this.isIdentifierStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1984794979:
					{
						return this.isDigit(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 385314744:
					{
						this.processIdentifier();
						break;
					}
					
					
					case 1241311189:
					{
						this.processFieldAccessInterpolation();
						break;
					}
					
					
					case 2023816419:
					{
						this.processComplexInterpolation();
						break;
					}
					
					
					case 1736653984:
					{
						this.processString();
						break;
					}
					
					
					case 634543899:
					{
						this.processInput(global::Loreline.Internal.Lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 655239674:
					{
						return this.processedPosFromInputPos(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 145414650:
					{
						return this.inputPosFromProcessedPos(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1603104271:
					{
						return this.toLorelinePos(((global::Loreline.Runtime.Position) (dynargs[0]) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[1])) ), ((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[2])) ));
					}
					
					
					case 1900716655:
					{
						return this.process(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("stack");
			baseArr.push("indentStack");
			baseArr.push("indentLevel");
			baseArr.push("inControlWithoutParens");
			baseArr.push("inControl");
			baseArr.push("currentPosOffset");
			baseArr.push("posOffsets");
			baseArr.push("inString");
			baseArr.push("inComment");
			baseArr.push("indent");
			baseArr.push("length");
			baseArr.push("lineOutput");
			baseArr.push("output");
			baseArr.push("input");
			baseArr.push("index");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


