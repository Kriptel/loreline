// Generated by Haxe 4.3.6
using global::Loreline.Internal.Root;

#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Reference<T> : global::Loreline.Internal.Lang.HxObject, global::Loreline.Runtime.Reference {
		
		public Reference(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public Reference(T target, global::Loreline.Runtime.Node origin) {
			global::Loreline.Runtime.Reference<object>.__hx_ctor_loreline_Reference<T>(((global::Loreline.Runtime.Reference<T>) (this) ), global::Loreline.Internal.Lang.Runtime.genericCast<T>(target), ((global::Loreline.Runtime.Node) (origin) ));
		}
		
		
		protected static void __hx_ctor_loreline_Reference<T_c>(global::Loreline.Runtime.Reference<T_c> __hx_this, T_c target, global::Loreline.Runtime.Node origin) {
			__hx_this.target = target;
			__hx_this.origin = origin;
		}
		
		
		public static object __hx_cast<T_c_c>(global::Loreline.Runtime.Reference me) {
			return ( (( me != null )) ? (me.loreline_Reference_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object loreline_Reference_cast<T_c>() {
			if (global::Loreline.Internal.Lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::Loreline.Runtime.Reference<T_c> new_me = new global::Loreline.Runtime.Reference<T_c>(global::Loreline.Internal.Lang.EmptyObject.EMPTY);
			global::Loreline.Internal.Root.Array<string> fields = global::Loreline.Internal.Root.Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = fields[i++];
				global::Loreline.Internal.Root.Reflect.setField(new_me, field, global::Loreline.Internal.Root.Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public T target;
		
		public global::Loreline.Runtime.Node origin;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 116192081:
					{
						this.target = global::Loreline.Internal.Lang.Runtime.genericCast<T>(((object) (@value) ));
						return ((double) (global::Loreline.Internal.Lang.Runtime.toDouble(((object) (@value) ))) );
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1258363366:
					{
						this.origin = ((global::Loreline.Runtime.Node) (@value) );
						return @value;
					}
					
					
					case 116192081:
					{
						this.target = global::Loreline.Internal.Lang.Runtime.genericCast<T>(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1258363366:
					{
						return this.origin;
					}
					
					
					case 116192081:
					{
						return this.target;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 116192081:
					{
						return ((double) (global::Loreline.Internal.Lang.Runtime.toDouble(((object) (this.target) ))) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("origin");
			baseArr.push("target");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	[global::Loreline.Internal.Lang.GenericInterface(typeof(global::Loreline.Runtime.Reference<object>))]
	public interface Reference : global::Loreline.Internal.Lang.IHxObject, global::Loreline.Internal.Lang.IGenericObject {
		
		object loreline_Reference_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class FuncHscript : global::Loreline.Internal.Lang.HxObject {
		
		public FuncHscript(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public FuncHscript(global::Loreline.Runtime.NFunctionDecl func) {
			global::Loreline.Runtime.FuncHscript.__hx_ctor_loreline_FuncHscript(this, func);
		}
		
		
		protected static void __hx_ctor_loreline_FuncHscript(global::Loreline.Runtime.FuncHscript __hx_this, global::Loreline.Runtime.NFunctionDecl func) {
			unchecked {
				__hx_this.error = null;
				__hx_this.expr = null;
				__hx_this.hscript = null;
				{
					__hx_this.func = func;
					__hx_this.codeToHscript = new global::Loreline.Runtime.CodeToHscript();
					try {
						__hx_this.hscript = __hx_this.codeToHscript.process(func.code);
					}
					catch (global::System.Exception _g){
						object e = ((object) (global::Loreline.Internal.Exception.caught(_g).unwrap()) );
						{
							if (( e is global::Loreline.Runtime.Error )) {
								__hx_this.error = ((global::Loreline.Runtime.Error) (((object) (e) )) );
								__hx_this.error.pos = func.pos.withOffset(__hx_this.codeToHscript.input, __hx_this.error.pos.offset, new global::Loreline.Internal.Lang.Null<int>(__hx_this.error.pos.length, true), new global::Loreline.Internal.Lang.Null<int>(func.pos.offset, true));
							}
							
							__hx_this.hscript = __hx_this.codeToHscript.output.b.ToString();
						}
						
					}
					
					
					try {
						global::Loreline.Internal.Hscript.Parser parser = new global::Loreline.Internal.Hscript.Parser();
						parser.resumeErrors = false;
						parser.allowJSON = true;
						parser.allowTypes = true;
						string tmp = func.name;
						__hx_this.expr = parser.parseString(__hx_this.hscript, ( (( tmp != null )) ? (tmp) : ("?") ), default(global::Loreline.Internal.Lang.Null<int>));
					}
					catch (global::System.Exception _g1){
						object e1 = ((object) (global::Loreline.Internal.Exception.caught(_g1).unwrap()) );
						{
							if (( __hx_this.error == null )) {
								if (( e1 is global::Loreline.Internal.Hscript.Error )) {
									global::Loreline.Internal.Hscript.Error hscriptError = ((global::Loreline.Internal.Hscript.Error) (e1) );
									string tmp1 = null;
									global::Loreline.Internal.Hscript.ErrorDef _g2 = hscriptError.e;
									switch (_g2._hx_index) {
										case 0:
										{
											int c = ( _g2 as global::Loreline.Internal.Hscript.ErrorDef_EInvalidChar ).c;
											tmp1 = global::Loreline.Internal.Lang.Runtime.concat("Invalid character: ", global::Loreline.Internal.Lang.Runtime.toString(c));
											break;
										}
										
										
										case 1:
										{
											string s = ( _g2 as global::Loreline.Internal.Hscript.ErrorDef_EUnexpected ).s;
											tmp1 = global::Loreline.Internal.Lang.Runtime.concat("Unexpected: ", s);
											break;
										}
										
										
										case 2:
										{
											tmp1 = "Unterminated string";
											break;
										}
										
										
										case 3:
										{
											tmp1 = "Unterminated comment";
											break;
										}
										
										
										case 4:
										{
											string msg = ( _g2 as global::Loreline.Internal.Hscript.ErrorDef_EInvalidPreprocessor ).msg;
											tmp1 = global::Loreline.Internal.Lang.Runtime.concat("Invalid preprocessor: ", msg);
											break;
										}
										
										
										case 5:
										{
											string v = ( _g2 as global::Loreline.Internal.Hscript.ErrorDef_EUnknownVariable ).v;
											tmp1 = global::Loreline.Internal.Lang.Runtime.concat("Unknown variable: ", v);
											break;
										}
										
										
										case 6:
										{
											string v1 = ( _g2 as global::Loreline.Internal.Hscript.ErrorDef_EInvalidIterator ).v;
											tmp1 = global::Loreline.Internal.Lang.Runtime.concat("Invalid iterator: ", v1);
											break;
										}
										
										
										case 7:
										{
											string op = ( _g2 as global::Loreline.Internal.Hscript.ErrorDef_EInvalidOp ).op;
											tmp1 = global::Loreline.Internal.Lang.Runtime.concat("Invalid operator: ", op);
											break;
										}
										
										
										case 8:
										{
											string f = ( _g2 as global::Loreline.Internal.Hscript.ErrorDef_EInvalidAccess ).f;
											tmp1 = global::Loreline.Internal.Lang.Runtime.concat("Invalid access: ", f);
											break;
										}
										
										
										case 9:
										{
											string msg1 = ( _g2 as global::Loreline.Internal.Hscript.ErrorDef_ECustom ).msg;
											tmp1 = msg1;
											break;
										}
										
										
									}
									
									__hx_this.error = new global::Loreline.Runtime.WrappedError<object>(((object) (hscriptError) ), ((string) (tmp1) ), ((global::Loreline.Runtime.Position) (__hx_this.codeToHscript.toLorelinePos(func.pos, hscriptError.pmin, hscriptError.pmax)) ));
								}
								else if (( e1 is global::Loreline.Runtime.Error )) {
									__hx_this.error = ((global::Loreline.Runtime.Error) (e1) );
									__hx_this.error.pos = func.pos.withOffset(__hx_this.codeToHscript.input, __hx_this.error.pos.offset, new global::Loreline.Internal.Lang.Null<int>(__hx_this.error.pos.length, true), new global::Loreline.Internal.Lang.Null<int>(func.pos.offset, true));
								}
								
							}
							
							try {
								global::Loreline.Internal.Hscript.Parser parser1 = new global::Loreline.Internal.Hscript.Parser();
								parser1.resumeErrors = true;
								parser1.allowJSON = true;
								parser1.allowTypes = true;
								string tmp2 = func.name;
								__hx_this.expr = parser1.parseString(__hx_this.hscript, ( (( tmp2 != null )) ? (tmp2) : ("?") ), default(global::Loreline.Internal.Lang.Null<int>));
							}
							catch (global::System.Exception _g3){
							}
							
							
						}
						
					}
					
					
				}
				
			}
		}
		
		
		public global::Loreline.Runtime.NFunctionDecl func;
		
		public global::Loreline.Runtime.CodeToHscript codeToHscript;
		
		public string hscript;
		
		public object expr;
		
		public global::Loreline.Runtime.Error error;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1126038837:
					{
						this.expr = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1932118984:
					{
						this.error = ((global::Loreline.Runtime.Error) (@value) );
						return @value;
					}
					
					
					case 1126038837:
					{
						this.expr = ((object) (@value) );
						return @value;
					}
					
					
					case 739806323:
					{
						this.hscript = global::Loreline.Internal.Lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 758375755:
					{
						this.codeToHscript = ((global::Loreline.Runtime.CodeToHscript) (@value) );
						return @value;
					}
					
					
					case 1136978756:
					{
						this.func = ((global::Loreline.Runtime.NFunctionDecl) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1932118984:
					{
						return this.error;
					}
					
					
					case 1126038837:
					{
						return this.expr;
					}
					
					
					case 739806323:
					{
						return this.hscript;
					}
					
					
					case 758375755:
					{
						return this.codeToHscript;
					}
					
					
					case 1136978756:
					{
						return this.func;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1126038837:
					{
						return ((double) (global::Loreline.Internal.Lang.Runtime.toDouble(this.expr)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("error");
			baseArr.push("expr");
			baseArr.push("global::Loreline.Internal.Hscript");
			baseArr.push("codeToHscript");
			baseArr.push("func");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class HscriptCompletion : global::Loreline.Internal.Lang.HxObject {
		
		public HscriptCompletion(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public HscriptCompletion(global::Loreline.Internal.Ds.StringMap<object> locals, global::Loreline.Internal.Hscript.Completion completion) {
			global::Loreline.Runtime.HscriptCompletion.__hx_ctor_loreline_HscriptCompletion(this, locals, completion);
		}
		
		
		protected static void __hx_ctor_loreline_HscriptCompletion(global::Loreline.Runtime.HscriptCompletion __hx_this, global::Loreline.Internal.Ds.StringMap<object> locals, global::Loreline.Internal.Hscript.Completion completion) {
			__hx_this.completion = null;
			__hx_this.locals = null;
			{
				if (( locals != null )) {
					__hx_this.locals = locals;
				}
				
				if (( completion != null )) {
					__hx_this.completion = completion;
				}
				
			}
			
		}
		
		
		public global::Loreline.Internal.Ds.StringMap<object> locals;
		
		public global::Loreline.Internal.Hscript.Completion completion;
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 39308060:
					{
						this.completion = ((global::Loreline.Internal.Hscript.Completion) (@value) );
						return @value;
					}
					
					
					case 1505719464:
					{
						this.locals = ((global::Loreline.Internal.Ds.StringMap<object>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 39308060:
					{
						return this.completion;
					}
					
					
					case 1505719464:
					{
						return this.locals;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("completion");
			baseArr.push("locals");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens : global::Loreline.Internal.Lang.HxObject {
		
		public Lens(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public Lens(global::Loreline.Runtime.Script script) {
			global::Loreline.Runtime.Lens.__hx_ctor_loreline_Lens(this, script);
		}
		
		
		protected static void __hx_ctor_loreline_Lens(global::Loreline.Runtime.Lens __hx_this, global::Loreline.Runtime.Script script) {
			__hx_this.hscriptFunctions = new global::Loreline.Runtime.NodeIdMap<object>();
			__hx_this.childNodes = new global::Loreline.Runtime.NodeIdMap<object>();
			__hx_this.parentNodes = new global::Loreline.Runtime.NodeIdMap<object>();
			__hx_this.nodesById = new global::Loreline.Runtime.NodeIdMap<object>();
			{
				__hx_this.script = script;
				__hx_this.initialize();
			}
			
		}
		
		
		public global::Loreline.Runtime.Script script;
		
		public global::Loreline.Runtime.NodeIdMap<object> nodesById;
		
		public global::Loreline.Runtime.NodeIdMap<object> parentNodes;
		
		public global::Loreline.Runtime.NodeIdMap<object> childNodes;
		
		public global::Loreline.Runtime.NodeIdMap<object> hscriptFunctions;
		
		public virtual void initialize() {
			global::Loreline.Runtime.Lens _gthis = this;
			this.script.each(new global::Loreline.Runtime.Lens_initialize_155__Fun(_gthis));
		}
		
		
		public virtual global::Loreline.Runtime.Node getNodeById(long id) {
			unchecked {
				long key = ((long) (id) );
				return ((global::Loreline.Runtime.Node) ((this.nodesById.map._get(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))).@value) );
			}
		}
		
		
		public virtual global::Loreline.Runtime.Node getNodeAtPosition(global::Loreline.Runtime.Position pos) {
			global::Loreline.Runtime.Node[] bestMatch = new global::Loreline.Runtime.Node[]{null};
			this.script.eachExcludingImported(new global::Loreline.Runtime.Lens_getNodeAtPosition_186__Fun(pos, bestMatch));
			return ((global::Loreline.Runtime.Node) (bestMatch[0]) );
		}
		
		
		public virtual global::Loreline.Runtime.Node getClosestNodeAtOrBeforePosition(global::Loreline.Runtime.Position pos) {
			unchecked {
				global::Loreline.Runtime.Node[] bestMatch = new global::Loreline.Runtime.Node[]{null};
				int[] bestDistance = new int[]{999999999};
				this.script.eachExcludingImported(new global::Loreline.Runtime.Lens_getClosestNodeAtOrBeforePosition_208__Fun(pos, bestMatch, bestDistance));
				return ((global::Loreline.Runtime.Node) (bestMatch[0]) );
			}
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<T> getNodesOfType<T>(global::System.Type nodeType, global::Loreline.Internal.Lang.Null<bool> includeImported) {
			bool includeImported1 = ( ( ! (includeImported.hasValue) ) ? (false) : ((includeImported).@value) );
			global::Loreline.Internal.Root.Array<T> matches = new global::Loreline.Internal.Root.Array<T>(new T[]{});
			global::Loreline.Runtime.Lens _gthis = this;
			this.traverse(this.script, new global::Loreline.Runtime.Lens_getNodesOfType_227__Fun<T>(nodeType, matches, includeImported1, _gthis));
			return matches;
		}
		
		
		public virtual global::Loreline.Runtime.Node getParentNode(global::Loreline.Runtime.Node node) {
			unchecked {
				long key = ((long) (node.id) );
				return ((global::Loreline.Runtime.Node) ((this.parentNodes.map._get(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))).@value) );
			}
		}
		
		
		public virtual global::Loreline.Internal.Lang.Null<T> getFirstParentOfType<T>(global::Loreline.Runtime.Node node, global::System.Type type) {
			object current = node;
			while (( current != null )) {
				current = this.getParentNode(((global::Loreline.Runtime.Node) (((object) (current) )) ));
				if (( ( current != null ) && global::Loreline.Internal.Lang.Runtime.typeEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (current) )), type) )) {
					return global::Loreline.Internal.Lang.Null<object>.ofDynamic<T>(((object) (current) ));
				}
				
			}
			
			return default(global::Loreline.Internal.Lang.Null<T>);
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<string> getImportedPaths(string rootPath) {
			global::Loreline.Internal.Root.Array<string> result = new global::Loreline.Internal.Root.Array<string>(new string[]{});
			this._getImportedPaths(rootPath, this.script, result, new global::Loreline.Internal.Ds.StringMap<bool>());
			return result;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<string> _getImportedPaths(string rootPath, global::Loreline.Runtime.Script script, global::Loreline.Internal.Root.Array<string> result, global::Loreline.Internal.Ds.StringMap<bool> used) {
			string rootDir = global::Loreline.Internal.Io.Path.directory(rootPath);
			if (( script == null )) {
				script = this.script;
			}
			
			{
				int _g = 0;
				global::Loreline.Internal.Root.Array<object> _g1 = script.body;
				while (( _g < _g1.length )) {
					global::Loreline.Runtime.AstNode node = ((global::Loreline.Runtime.AstNode) (_g1[_g]) );
					 ++ _g;
					if (( node is global::Loreline.Runtime.NImportStatement )) {
						global::Loreline.Runtime.NImportStatement importNode = ((global::Loreline.Runtime.NImportStatement) (node) );
						string importPath = null;
						global::Loreline.Runtime.StringPartType _g2 = ((global::Loreline.Runtime.NStringPart) (importNode.path.parts[0]) ).partType;
						if (( _g2._hx_index == 0 )) {
							string text = ( _g2 as global::Loreline.Runtime.StringPartType_Raw ).text;
							importPath = text;
						}
						else {
							importPath = "";
						}
						
						if ( ! (global::Loreline.Internal.Io.Path.isAbsolute(importPath)) ) {
							importPath = global::Loreline.Internal.Io.Path.@join(new global::Loreline.Internal.Root.Array<string>(new string[]{rootDir, importPath}));
						}
						
						importPath = global::Loreline.Internal.Io.Path.normalize(importPath);
						if ( ! (importPath.ToLowerInvariant().EndsWith(".lor")) ) {
							importPath = global::Loreline.Internal.Lang.Runtime.concat(importPath, ".lor");
						}
						
						if ( ! (used.exists(importPath)) ) {
							used.@set(importPath, true);
							result.push(importPath);
							if (( importNode.script != null )) {
								this._getImportedPaths(importPath, importNode.script, result, used);
							}
							
						}
						
					}
					
				}
				
			}
			
			return result;
		}
		
		
		public virtual global::Loreline.Runtime.Node resolveArrayAccess(global::Loreline.Runtime.NArrayAccess access) {
			global::Loreline.Runtime.Node targetNode = null;
			if (( access.target is global::Loreline.Runtime.NAccess )) {
				targetNode = this.resolveAccess(((global::Loreline.Runtime.NAccess) (access.target) ));
			}
			else if (( access.target is global::Loreline.Runtime.NArrayAccess )) {
				targetNode = this.resolveArrayAccess(((global::Loreline.Runtime.NArrayAccess) (access.target) ));
			}
			
			if (( targetNode == null )) {
				return null;
			}
			
			{
				global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (targetNode) )));
				if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NLiteral))) {
					global::Loreline.Runtime.NLiteral literal = ((global::Loreline.Runtime.NLiteral) (targetNode) );
					if (( literal.literalType == global::Loreline.Runtime.LiteralType.Array )) {
						global::Loreline.Internal.Root.Array elements = ((global::Loreline.Internal.Root.Array) (literal.@value) );
						if (( access.index is global::Loreline.Runtime.NLiteral )) {
							global::Loreline.Runtime.NLiteral indexLit = ((global::Loreline.Runtime.NLiteral) (access.index) );
							if (( indexLit.literalType == global::Loreline.Runtime.LiteralType.Number )) {
								int index = ((int) (((double) (global::Loreline.Internal.Lang.Runtime.toDouble(((object) (indexLit.@value) ))) )) );
								if (( ( index >= 0 ) && ( index < ((int) (global::Loreline.Internal.Lang.Runtime.getField_f(elements, "length", 520590566, true)) ) ) )) {
									object element = elements[index];
									if (( element is global::Loreline.Runtime.Node )) {
										return ((global::Loreline.Runtime.Node) (element) );
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NObjectField))) {
					global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (targetNode) );
					if (( field.@value is global::Loreline.Runtime.NLiteral )) {
						global::Loreline.Runtime.NLiteral literal1 = ((global::Loreline.Runtime.NLiteral) (field.@value) );
						if (( literal1.literalType == global::Loreline.Runtime.LiteralType.Array )) {
							global::Loreline.Internal.Root.Array elements1 = ((global::Loreline.Internal.Root.Array) (literal1.@value) );
							if (( access.index is global::Loreline.Runtime.NLiteral )) {
								global::Loreline.Runtime.NLiteral indexLit1 = ((global::Loreline.Runtime.NLiteral) (access.index) );
								if (( indexLit1.literalType == global::Loreline.Runtime.LiteralType.Number )) {
									int index1 = ((int) (((double) (global::Loreline.Internal.Lang.Runtime.toDouble(((object) (indexLit1.@value) ))) )) );
									if (( ( index1 >= 0 ) && ( index1 < ((int) (global::Loreline.Internal.Lang.Runtime.getField_f(elements1, "length", 520590566, true)) ) ) )) {
										object element1 = elements1[index1];
										if (( element1 is global::Loreline.Runtime.Node )) {
											return ((global::Loreline.Runtime.Node) (element1) );
										}
										
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				else {
				}
				
			}
			
			return null;
		}
		
		
		public virtual global::Loreline.Runtime.Node resolveAccess(global::Loreline.Runtime.NAccess access) {
			unchecked {
				if (( access.target != null )) {
					global::Loreline.Runtime.Node targetNode = ( (( access.target is global::Loreline.Runtime.NAccess )) ? (this.resolveAccess(((global::Loreline.Runtime.NAccess) (access.target) ))) : (( (( access.target is global::Loreline.Runtime.NArrayAccess )) ? (this.resolveArrayAccess(((global::Loreline.Runtime.NArrayAccess) (access.target) ))) : (null) )) );
					if (( targetNode != null )) {
						if (( targetNode is global::Loreline.Runtime.NObjectField )) {
							targetNode = ((global::Loreline.Runtime.NObjectField) (targetNode) ).@value;
						}
						
						{
							global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (targetNode) )));
							if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCharacterDecl))) {
								global::Loreline.Runtime.NCharacterDecl characterDecl = ((global::Loreline.Runtime.NCharacterDecl) (targetNode) );
								{
									int _g = 0;
									global::Loreline.Internal.Root.Array<object> _g1 = characterDecl.fields;
									while (( _g < _g1.length )) {
										global::Loreline.Runtime.NObjectField prop = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
										 ++ _g;
										if (( prop.name == access.name )) {
											return prop;
										}
										
									}
									
								}
								
							}
							else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NLiteral))) {
								global::Loreline.Runtime.NLiteral literal = ((global::Loreline.Runtime.NLiteral) (targetNode) );
								{
									global::Loreline.Runtime.LiteralType _g2 = literal.literalType;
									if (( _g2._hx_index == 4 )) {
										int style = ( _g2 as global::Loreline.Runtime.LiteralType_Object ).style;
										{
											global::Loreline.Internal.Root.Array<object> fields = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (literal.@value) ))) );
											{
												int _g3 = 0;
												while (( _g3 < fields.length )) {
													global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (fields[_g3]) );
													 ++ _g3;
													if (( field.name == access.name )) {
														return field;
													}
													
												}
												
											}
											
										}
										
									}
									
								}
								
							}
							else {
							}
							
						}
						
					}
					
					return null;
				}
				
				string name = access.name;
				if (( name == null )) {
					return null;
				}
				
				global::Loreline.Runtime.NBeatDecl currentBeat = ((global::Loreline.Runtime.NBeatDecl) ((this.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (access) ), ((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ))).@value) );
				while (( currentBeat != null )) {
					global::Loreline.Runtime.Node[] result = new global::Loreline.Runtime.Node[]{null};
					this.traverse(currentBeat, new global::Loreline.Runtime.Lens_resolveAccess_454__Fun(result, name));
					if (( ((global::Loreline.Runtime.Node) (result[0]) ) != null )) {
						return ((global::Loreline.Runtime.Node) (result[0]) );
					}
					
					currentBeat = ((global::Loreline.Runtime.NBeatDecl) ((this.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (currentBeat) ), ((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ))).@value) );
				}
				
				global::Loreline.Runtime.Node[] stateField = new global::Loreline.Runtime.Node[]{null};
				this.traverse(this.script, new global::Loreline.Runtime.Lens_resolveAccess_479__Fun(stateField, name));
				if (( ((global::Loreline.Runtime.Node) (stateField[0]) ) != null )) {
					return ((global::Loreline.Runtime.Node) (stateField[0]) );
				}
				
				global::Loreline.Runtime.NCharacterDecl characterDecl1 = this.findCharacterByNameFromNode(name, access);
				if (( characterDecl1 != null )) {
					return characterDecl1;
				}
				
				global::Loreline.Runtime.NBeatDecl beatDecl = this.findBeatByNameFromNode(name, access);
				if (( beatDecl != null )) {
					return beatDecl;
				}
				
				global::Loreline.Runtime.NFunctionDecl functionDecl = this.findFunctionByNameFromNode(name, access);
				if (( functionDecl != null )) {
					return functionDecl;
				}
				
				return null;
			}
		}
		
		
		public virtual global::Loreline.Runtime.NBeatDecl findBeatFromAccess(global::Loreline.Runtime.NAccess access) {
			if (( ( access.target == null ) && ( access.name != null ) )) {
				return this.findBeatByNameFromNode(access.name, access);
			}
			
			return null;
		}
		
		
		public virtual global::Loreline.Runtime.NBeatDecl findBeatFromTransition(global::Loreline.Runtime.NTransition transition) {
			return this.findBeatByNameFromNode(transition.target, transition);
		}
		
		
		public virtual global::Loreline.Runtime.NBeatDecl findBeatByPathFromNode(string path, global::Loreline.Runtime.Node node) {
			unchecked {
				global::Loreline.Internal.Root.Array<string> parts = global::Loreline.Internal.Lang.StringExt.split(path, ".");
				global::Loreline.Runtime.NBeatDecl beat = this.findBeatByNameFromNode(parts[0], node);
				int i = 1;
				while (( ( beat != null ) && ( i < parts.length ) )) {
					string name = parts[i];
					global::Loreline.Runtime.NBeatDecl[] foundBeat = new global::Loreline.Runtime.NBeatDecl[]{null};
					this.traverse(beat, new global::Loreline.Runtime.Lens_findBeatByPathFromNode_557__Fun(name, foundBeat));
					beat = ((global::Loreline.Runtime.NBeatDecl) (foundBeat[0]) );
					 ++ i;
				}
				
				return beat;
			}
		}
		
		
		public virtual bool isTopLevelNode(global::Loreline.Runtime.Node node) {
			unchecked {
				if (( node is global::Loreline.Runtime.AstNode )) {
					global::Loreline.Runtime.AstNode astNode = ((global::Loreline.Runtime.AstNode) (node) );
					return ( this.script.body.indexOf(astNode, default(global::Loreline.Internal.Lang.Null<int>)) != -1 );
				}
				
				return false;
			}
		}
		
		
		public virtual global::Loreline.Runtime.NBeatDecl findTopLevelBeatFromNode(global::Loreline.Runtime.Node node) {
			if (this.isTopLevelNode(node)) {
				if (( node is global::Loreline.Runtime.NBeatDecl )) {
					return ((global::Loreline.Runtime.NBeatDecl) (node) );
				}
				else {
					return null;
				}
				
			}
			else {
				global::Loreline.Runtime.NBeatDecl resolved = ((global::Loreline.Runtime.NBeatDecl) ((this.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (node) ), ((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ))).@value) );
				while (( ( resolved != null ) &&  ! (this.isTopLevelNode(resolved))  )) {
					resolved = ((global::Loreline.Runtime.NBeatDecl) ((this.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (resolved) ), ((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ))).@value) );
				}
				
				if (( ( resolved != null ) && ( resolved is global::Loreline.Runtime.NBeatDecl ) )) {
					return ((global::Loreline.Runtime.NBeatDecl) (resolved) );
				}
				
			}
			
			return null;
		}
		
		
		public virtual global::Loreline.Runtime.NBeatDecl findBeatByNameFromNode(string name, global::Loreline.Runtime.Node node) {
			global::Loreline.Runtime.NBeatDecl[] result = new global::Loreline.Runtime.NBeatDecl[]{null};
			global::Loreline.Runtime.NBeatDecl parentBeat = ((global::Loreline.Runtime.NBeatDecl) ((this.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (node) ), ((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ))).@value) );
			while (( parentBeat != null )) {
				this.traverse(parentBeat, new global::Loreline.Runtime.Lens_findBeatByNameFromNode_619__Fun(result, node, name));
				parentBeat = ((global::Loreline.Runtime.NBeatDecl) ((this.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (parentBeat) ), ((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ))).@value) );
			}
			
			if (( ((global::Loreline.Runtime.NBeatDecl) (result[0]) ) == null )) {
				this.traverse(this.script, new global::Loreline.Runtime.Lens_findBeatByNameFromNode_638__Fun(result, name));
			}
			
			return ((global::Loreline.Runtime.NBeatDecl) (result[0]) );
		}
		
		
		public virtual global::Loreline.Runtime.NCharacterDecl findCharacterFromDialogue(global::Loreline.Runtime.NDialogueStatement dialogue) {
			return this.findCharacterByNameFromNode(dialogue.character, dialogue);
		}
		
		
		public virtual global::Loreline.Runtime.NCharacterDecl findCharacterByNameFromNode(string name, global::Loreline.Runtime.Node node) {
			global::Loreline.Runtime.NCharacterDecl[] result = new global::Loreline.Runtime.NCharacterDecl[]{null};
			this.traverse(this.script, new global::Loreline.Runtime.Lens_findCharacterByNameFromNode_672__Fun(result, name));
			return ((global::Loreline.Runtime.NCharacterDecl) (result[0]) );
		}
		
		
		public virtual global::Loreline.Runtime.NFunctionDecl findFunctionByNameFromNode(string name, global::Loreline.Runtime.Node node) {
			global::Loreline.Runtime.NFunctionDecl[] result = new global::Loreline.Runtime.NFunctionDecl[]{null};
			this.traverse(this.script, new global::Loreline.Runtime.Lens_findFunctionByNameFromNode_691__Fun(result, name));
			return ((global::Loreline.Runtime.NFunctionDecl) (result[0]) );
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> getVisibleCharacters() {
			global::Loreline.Internal.Root.Array<object> result = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			{
				global::Loreline.Runtime._Script.ScriptBodyIterator node = this.script.iterator();
				while (node.hasNext()) {
					global::Loreline.Runtime.AstNode node1 = node.next();
					if (( node1 is global::Loreline.Runtime.NCharacterDecl )) {
						result.push(((global::Loreline.Runtime.NCharacterDecl) (node1) ));
					}
					
				}
				
			}
			
			return result;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> getVisibleFunctions() {
			global::Loreline.Internal.Root.Array<object> result = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			{
				global::Loreline.Runtime._Script.ScriptBodyIterator node = this.script.iterator();
				while (node.hasNext()) {
					global::Loreline.Runtime.AstNode node1 = node.next();
					if (( node1 is global::Loreline.Runtime.NFunctionDecl )) {
						result.push(((global::Loreline.Runtime.NFunctionDecl) (node1) ));
					}
					
				}
				
			}
			
			return result;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> getVisibleStateFields(global::Loreline.Runtime.Node fromNode) {
			unchecked {
				global::Loreline.Internal.Root.Array<object> fields = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				global::Loreline.Runtime.Int64Map<bool>[] seenFields_map = new global::Loreline.Runtime.Int64Map<bool>[1];
				seenFields_map[0] = new global::Loreline.Runtime.Int64Map<bool>();
				global::Loreline.Runtime.Node current = fromNode;
				while (( current != null )) {
					if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (current) )), typeof(global::Loreline.Runtime.NStateDecl))) {
						global::Loreline.Runtime.NStateDecl state = ((global::Loreline.Runtime.NStateDecl) (current) );
						{
							int _g = 0;
							global::Loreline.Internal.Root.Array<object> _g1 = state.fields;
							while (( _g < _g1.length )) {
								global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
								 ++ _g;
								long key = ((long) (field.id) );
								if ( ! (((global::Loreline.Runtime.Int64Map<bool>) (seenFields_map[0]) )._exists(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))) ) {
									{
										long key1 = ((long) (field.id) );
										((global::Loreline.Runtime.Int64Map<bool>) (seenFields_map[0]) )._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), true);
									}
									
									fields.push(field);
								}
								
							}
							
						}
						
					}
					
					long key2 = ((long) (current.id) );
					current = ((global::Loreline.Runtime.Node) ((this.parentNodes.map._get(((int) (( ((long) (key2) ) >> 32 )) ), ((int) (((long) (key2) )) ))).@value) );
				}
				
				this.script.each(new global::Loreline.Runtime.Lens_getVisibleStateFields_759__Fun(seenFields_map, fields));
				return fields;
			}
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> getVisibleBeats(global::Loreline.Runtime.Node fromNode) {
			global::Loreline.Internal.Root.Array<object> beats = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			global::Loreline.Internal.Ds.StringMap<bool> seenBeats = new global::Loreline.Internal.Ds.StringMap<bool>();
			global::Loreline.Runtime.Node current = this.getParentNode(fromNode);
			while (( current != null )) {
				if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (current) )), typeof(global::Loreline.Runtime.NBeatDecl))) {
					global::Loreline.Runtime.Node parent = this.getParentNode(current);
					if (( parent != null )) {
						int _g = 0;
						global::Loreline.Internal.Root.Array<object> _g1 = this.getNodesOfType<object>(((global::System.Type) (typeof(global::Loreline.Runtime.NBeatDecl)) ), default(global::Loreline.Internal.Lang.Null<bool>));
						while (( _g < _g1.length )) {
							global::Loreline.Runtime.NBeatDecl child = ((global::Loreline.Runtime.NBeatDecl) (_g1[_g]) );
							 ++ _g;
							if ( ! (seenBeats.exists(child.name)) ) {
								seenBeats.@set(child.name, true);
								beats.push(child);
							}
							
						}
						
					}
					
				}
				
				current = this.getParentNode(current);
			}
			
			this.script.each(new global::Loreline.Runtime.Lens_getVisibleBeats_806__Fun(seenBeats, beats));
			return beats;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<string> getAllTags() {
			global::Loreline.Internal.Ds.StringMap<bool> tags = new global::Loreline.Internal.Ds.StringMap<bool>();
			global::Loreline.Internal.Lang.Function processStringLiteral = new global::Loreline.Runtime.Lens_getAllTags_831__Fun(tags);
			this.script.each(new global::Loreline.Runtime.Lens_getAllTags_849__Fun(processStringLiteral));
			this.script.each(new global::Loreline.Runtime.Lens_getAllTags_858__Fun(processStringLiteral));
			global::Loreline.Internal.Root.Array<string> _g = new global::Loreline.Internal.Root.Array<string>(new string[]{});
			{
				object tag = ((object) (new global::Loreline.Internal.Ds._StringMap.StringMapKeyIterator<bool>(((global::Loreline.Internal.Ds.StringMap<bool>) (tags) ))) );
				while (global::Loreline.Internal.Lang.Runtime.toBool(global::Loreline.Internal.Lang.Runtime.callField(tag, "hasNext", 407283053, null))) {
					string tag1 = global::Loreline.Internal.Lang.Runtime.toString(global::Loreline.Internal.Lang.Runtime.callField(tag, "next", 1224901875, null));
					_g.push(tag1);
				}
				
			}
			
			return _g;
		}
		
		
		public virtual global::Loreline.Internal.Ds.StringMap<int> countTags() {
			global::Loreline.Internal.Ds.StringMap<int> tags = new global::Loreline.Internal.Ds.StringMap<int>();
			global::Loreline.Internal.Lang.Function processStringLiteral = new global::Loreline.Runtime.Lens_countTags_877__Fun(tags);
			this.script.each(new global::Loreline.Runtime.Lens_countTags_897__Fun(processStringLiteral));
			return tags;
		}
		
		
		public virtual global::Loreline.Runtime.NObjectField findStateField(global::Loreline.Runtime.NAccess access) {
			if (( access.target != null )) {
				return null;
			}
			
			global::Loreline.Internal.Root.Array<object> stateFields = this.getVisibleStateFields(access);
			{
				int _g = 0;
				while (( _g < stateFields.length )) {
					global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (stateFields[_g]) );
					 ++ _g;
					if (( field.name == access.name )) {
						return field;
					}
					
				}
				
			}
			
			return null;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> findOutboundBeats(global::Loreline.Runtime.NBeatDecl beatDecl) {
			unchecked {
				global::Loreline.Runtime.Int64Map<object>[] targetBeats_map = new global::Loreline.Runtime.Int64Map<object>[1];
				targetBeats_map[0] = new global::Loreline.Runtime.Int64Map<object>();
				global::Loreline.Runtime.Lens _gthis = this;
				this.traverse(beatDecl, new global::Loreline.Runtime.Lens_findOutboundBeats_935__Fun(targetBeats_map, _gthis));
				global::Loreline.Internal.Root.Array<object> _g = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				{
					global::Loreline.Runtime.Int64Map<object> _g_map = ((global::Loreline.Runtime.Int64Map<object>) (targetBeats_map[0]) );
					int _g_index = 0;
					while (( ( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length ) && ( ((object[]) (_g_map._values) )[_g_index] == null ) )) {
						 ++ _g_index;
					}
					
					while (( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length )) {
						object v = ((object[]) (_g_map._values) )[_g_index];
						 ++ _g_index;
						while (( ( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length ) && ( ((object[]) (_g_map._values) )[_g_index] == null ) )) {
							 ++ _g_index;
						}
						
						global::Loreline.Runtime.Reference<object> @ref = ((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (((object) (v) )) ))) );
						_g.push(@ref);
					}
					
				}
				
				return _g;
			}
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> findReferencesToBeat(global::Loreline.Runtime.NBeatDecl beatDecl) {
			global::Loreline.Internal.Root.Array<object> references = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			global::Loreline.Runtime.Lens _gthis = this;
			this.script.each(new global::Loreline.Runtime.Lens_findReferencesToBeat_975__Fun(references, beatDecl, _gthis));
			return references;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> findModifiedStateFields(global::Loreline.Runtime.NBeatDecl beatDecl) {
			global::Loreline.Internal.Ds.StringMap<object> modifiedFields = new global::Loreline.Internal.Ds.StringMap<object>();
			global::Loreline.Runtime.Lens _gthis = this;
			this.traverse(beatDecl, new global::Loreline.Runtime.Lens_findModifiedStateFields_1013__Fun(modifiedFields, _gthis));
			global::Loreline.Internal.Root.Array<object> _g = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			{
				object @ref = ((object) (new global::Loreline.Internal.Ds._StringMap.StringMapValueIterator<object>(((global::Loreline.Internal.Ds.StringMap<object>) (modifiedFields) ))) );
				while (global::Loreline.Internal.Lang.Runtime.toBool(global::Loreline.Internal.Lang.Runtime.callField(@ref, "hasNext", 407283053, null))) {
					global::Loreline.Runtime.Reference<object> ref1 = ((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (global::Loreline.Internal.Lang.Runtime.callField(@ref, "next", 1224901875, null)) ))) );
					_g.push(ref1);
				}
				
			}
			
			global::Loreline.Internal.Root.Array<object> refs = _g;
			refs.sort(( (( global::Loreline.Runtime.Lens_findModifiedStateFields_1034__Fun.__hx_current != null )) ? (global::Loreline.Runtime.Lens_findModifiedStateFields_1034__Fun.__hx_current) : (global::Loreline.Runtime.Lens_findModifiedStateFields_1034__Fun.__hx_current = ((global::Loreline.Runtime.Lens_findModifiedStateFields_1034__Fun) (new global::Loreline.Runtime.Lens_findModifiedStateFields_1034__Fun()) )) ));
			return refs;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> findReadStateFields(global::Loreline.Runtime.NBeatDecl beatDecl) {
			global::Loreline.Internal.Ds.StringMap<object> readFields = new global::Loreline.Internal.Ds.StringMap<object>();
			global::Loreline.Runtime.Lens _gthis = this;
			this.traverse(beatDecl, new global::Loreline.Runtime.Lens_findReadStateFields_1051__Fun(readFields, _gthis));
			global::Loreline.Internal.Root.Array<object> _g = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			{
				object @ref = ((object) (new global::Loreline.Internal.Ds._StringMap.StringMapValueIterator<object>(((global::Loreline.Internal.Ds.StringMap<object>) (readFields) ))) );
				while (global::Loreline.Internal.Lang.Runtime.toBool(global::Loreline.Internal.Lang.Runtime.callField(@ref, "hasNext", 407283053, null))) {
					global::Loreline.Runtime.Reference<object> ref1 = ((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (global::Loreline.Internal.Lang.Runtime.callField(@ref, "next", 1224901875, null)) ))) );
					_g.push(ref1);
				}
				
			}
			
			global::Loreline.Internal.Root.Array<object> refs = _g;
			refs.sort(( (( global::Loreline.Runtime.Lens_findReadStateFields_1075__Fun.__hx_current != null )) ? (global::Loreline.Runtime.Lens_findReadStateFields_1075__Fun.__hx_current) : (global::Loreline.Runtime.Lens_findReadStateFields_1075__Fun.__hx_current = ((global::Loreline.Runtime.Lens_findReadStateFields_1075__Fun) (new global::Loreline.Runtime.Lens_findReadStateFields_1075__Fun()) )) ));
			return refs;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> findBeatCharacters(global::Loreline.Runtime.NBeatDecl beatDecl) {
			unchecked {
				global::Loreline.Runtime.Int64Map<object>[] characters_map = new global::Loreline.Runtime.Int64Map<object>[1];
				characters_map[0] = new global::Loreline.Runtime.Int64Map<object>();
				global::Loreline.Runtime.Lens _gthis = this;
				this.traverse(beatDecl, new global::Loreline.Runtime.Lens_findBeatCharacters_1094__Fun(characters_map, _gthis));
				global::Loreline.Internal.Root.Array<object> _g = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				{
					global::Loreline.Runtime.Int64Map<object> _g_map = ((global::Loreline.Runtime.Int64Map<object>) (characters_map[0]) );
					int _g_index = 0;
					while (( ( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length ) && ( ((object[]) (_g_map._values) )[_g_index] == null ) )) {
						 ++ _g_index;
					}
					
					while (( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length )) {
						object v = ((object[]) (_g_map._values) )[_g_index];
						 ++ _g_index;
						while (( ( _g_index < ( ((object[]) (_g_map._values) ) as global::System.Array ).Length ) && ( ((object[]) (_g_map._values) )[_g_index] == null ) )) {
							 ++ _g_index;
						}
						
						global::Loreline.Runtime.Reference<object> @ref = ((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (((object) (v) )) ))) );
						_g.push(@ref);
					}
					
				}
				
				global::Loreline.Internal.Root.Array<object> refs = _g;
				refs.sort(( (( global::Loreline.Runtime.Lens_findBeatCharacters_1121__Fun.__hx_current != null )) ? (global::Loreline.Runtime.Lens_findBeatCharacters_1121__Fun.__hx_current) : (global::Loreline.Runtime.Lens_findBeatCharacters_1121__Fun.__hx_current = ((global::Loreline.Runtime.Lens_findBeatCharacters_1121__Fun) (new global::Loreline.Runtime.Lens_findBeatCharacters_1121__Fun()) )) ));
				return refs;
			}
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> findModifiedCharacterFields(global::Loreline.Runtime.NBeatDecl beatDecl) {
			unchecked {
				global::Loreline.Runtime.Int64Map<bool>[] used_map = new global::Loreline.Runtime.Int64Map<bool>[1];
				used_map[0] = new global::Loreline.Runtime.Int64Map<bool>();
				global::Loreline.Internal.Root.Array<object> refs = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				global::Loreline.Runtime.Lens _gthis = this;
				this.traverse(beatDecl, new global::Loreline.Runtime.Lens_findModifiedCharacterFields_1139__Fun(used_map, refs, _gthis));
				return refs;
			}
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> findReadCharacterFields(global::Loreline.Runtime.NBeatDecl beatDecl) {
			unchecked {
				global::Loreline.Runtime.Int64Map<bool>[] used_map = new global::Loreline.Runtime.Int64Map<bool>[1];
				used_map[0] = new global::Loreline.Runtime.Int64Map<bool>();
				global::Loreline.Internal.Root.Array<object> refs = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				global::Loreline.Runtime.Lens _gthis = this;
				this.traverse(beatDecl, new global::Loreline.Runtime.Lens_findReadCharacterFields_1184__Fun(used_map, refs, _gthis));
				return refs;
			}
		}
		
		
		public virtual void traverse(global::Loreline.Runtime.Node node, global::Loreline.Internal.Lang.Function callback) {
			unchecked {
				long key = ((long) (node.id) );
				global::Loreline.Internal.Root.Array<object> children = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) ((this.childNodes.map._get(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))).@value) ))) );
				if (( children != null )) {
					int _g = 0;
					int _g1 = children.length;
					while (( _g < _g1 )) {
						int i = _g++;
						global::Loreline.Runtime.Node child = ((global::Loreline.Runtime.Node) (children[i]) );
						if (global::Loreline.Internal.Lang.Runtime.toBool(callback.__hx_invoke2_o(default(double), child, default(double), node))) {
							this.traverse(child, callback);
						}
						
					}
					
				}
				
			}
		}
		
		
		public virtual global::Loreline.Runtime.FuncHscript getFuncHscript(global::Loreline.Runtime.NFunctionDecl func) {
			unchecked {
				long id = func.id;
				long key = ((long) (id) );
				global::Loreline.Runtime.FuncHscript info = ((global::Loreline.Runtime.FuncHscript) ((this.hscriptFunctions.map._get(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))).@value) );
				if (( info == null )) {
					info = new global::Loreline.Runtime.FuncHscript(((global::Loreline.Runtime.NFunctionDecl) (func) ));
					{
						long key1 = ((long) (id) );
						this.hscriptFunctions.map._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), info);
					}
					
				}
				
				return info;
			}
		}
		
		
		public virtual object getHscriptExpr(global::Loreline.Runtime.NFunctionDecl func, global::Loreline.Runtime.Position pos) {
			global::Loreline.Runtime.FuncHscript info = this.getFuncHscript(func);
			if (( info.expr == null )) {
				return null;
			}
			
			int offset = ( pos.offset - func.pos.offset );
			object[] bestExpr = new object[]{null};
			global::Loreline.Internal.Lang.Function[] handler = new global::Loreline.Internal.Lang.Function[]{null};
			handler[0] = new global::Loreline.Runtime.Lens_getHscriptExpr_1266__Fun(offset, info, handler, bestExpr);
			global::Loreline.Internal.Hscript.Tools.iter(info.expr, handler[0]);
			return bestExpr[0];
		}
		
		
		public virtual global::Loreline.Runtime.Node resolveHscriptAccess(global::Loreline.Runtime.NFunctionDecl func, object expr) {
			unchecked {
				{
					global::Loreline.Internal.Hscript.ExprDef _g = ((global::Loreline.Internal.Hscript.ExprDef) (global::Loreline.Internal.Lang.Runtime.getField(expr, "e", 101, true)) );
					switch (_g._hx_index) {
						case 1:
						{
							string name = ( _g as global::Loreline.Internal.Hscript.ExprDef_EIdent ).v;
							{
								global::Loreline.Runtime.Node[] stateField = new global::Loreline.Runtime.Node[]{null};
								this.traverse(this.script, new global::Loreline.Runtime.Lens_resolveHscriptAccess_1292__Fun(stateField, name));
								if (( ((global::Loreline.Runtime.Node) (stateField[0]) ) != null )) {
									return ((global::Loreline.Runtime.Node) (stateField[0]) );
								}
								
								global::Loreline.Runtime.NCharacterDecl characterDecl = this.findCharacterByNameFromNode(name, func);
								if (( characterDecl != null )) {
									return ((global::Loreline.Runtime.Node) (characterDecl) );
								}
								
								global::Loreline.Runtime.NBeatDecl beatDecl = this.findBeatByNameFromNode(name, func);
								if (( beatDecl != null )) {
									return ((global::Loreline.Runtime.Node) (beatDecl) );
								}
								
							}
							
							break;
						}
						
						
						case 5:
						{
							object e = ( _g as global::Loreline.Internal.Hscript.ExprDef_EField ).e;
							string f = ( _g as global::Loreline.Internal.Hscript.ExprDef_EField ).f;
							{
								global::Loreline.Runtime.Node targetNode = ( (( e != null )) ? (this.resolveHscriptAccess(func, e)) : (null) );
								if (( targetNode != null )) {
									if (( targetNode is global::Loreline.Runtime.NObjectField )) {
										targetNode = ((global::Loreline.Runtime.NObjectField) (targetNode) ).@value;
									}
									
									{
										global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (targetNode) )));
										if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCharacterDecl))) {
											global::Loreline.Runtime.NCharacterDecl characterDecl1 = ((global::Loreline.Runtime.NCharacterDecl) (targetNode) );
											{
												int _g1 = 0;
												global::Loreline.Internal.Root.Array<object> _g2 = characterDecl1.fields;
												while (( _g1 < _g2.length )) {
													global::Loreline.Runtime.NObjectField prop = ((global::Loreline.Runtime.NObjectField) (_g2[_g1]) );
													 ++ _g1;
													if (( prop.name == f )) {
														return prop;
													}
													
												}
												
											}
											
										}
										else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NLiteral))) {
											global::Loreline.Runtime.NLiteral literal = ((global::Loreline.Runtime.NLiteral) (targetNode) );
											{
												global::Loreline.Runtime.LiteralType _g3 = literal.literalType;
												if (( _g3._hx_index == 4 )) {
													int style = ( _g3 as global::Loreline.Runtime.LiteralType_Object ).style;
													{
														global::Loreline.Internal.Root.Array<object> fields = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (literal.@value) ))) );
														{
															int _g4 = 0;
															while (( _g4 < fields.length )) {
																global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (fields[_g4]) );
																 ++ _g4;
																if (( field.name == f )) {
																	return field;
																}
																
															}
															
														}
														
													}
													
												}
												
											}
											
										}
										else {
										}
										
									}
									
								}
								
							}
							
							break;
						}
						
						
						case 16:
						{
							object e1 = ( _g as global::Loreline.Internal.Hscript.ExprDef_EArray ).e;
							object index = ( _g as global::Loreline.Internal.Hscript.ExprDef_EArray ).index;
							break;
						}
						
						
						default:
						{
							break;
						}
						
					}
					
				}
				
				return null;
			}
		}
		
		
		public virtual bool isHscriptExpr(object input) {
			if (( ( input != null ) && global::Loreline.Internal.Root.Reflect.hasField(input, "e") )) {
				return ( global::Loreline.Internal.Lang.Runtime.getField(input, "e", 101, false) is global::Loreline.Internal.Hscript.ExprDef );
			}
			else {
				return false;
			}
			
		}
		
		
		public virtual global::Loreline.Runtime.HscriptCompletion getHscriptCompletion(global::Loreline.Runtime.NFunctionDecl func, global::Loreline.Runtime.Position pos) {
			unchecked {
				global::Loreline.Runtime.FuncHscript info = this.getFuncHscript(func);
				int inputPos = ( ( pos.offset - func.pos.offset ) + pos.length );
				int processedPos = info.codeToHscript.processedPosFromInputPos(inputPos);
				string truncated = global::Loreline.Internal.Lang.StringExt.substring(info.hscript, 0, new global::Loreline.Internal.Lang.Null<int>(((int) (global::System.Math.Min(((double) (processedPos) ), ((double) (info.hscript.Length) ))) ), true));
				int fullLen = truncated.Length;
				global::Loreline.Internal.Lang.Null<int> startIndex = default(global::Loreline.Internal.Lang.Null<int>);
				truncated = global::Loreline.Internal.Lang.StringExt.substring(truncated, ( global::Loreline.Internal.Lang.StringExt.indexOf(truncated, "{", startIndex) + 1 ), new global::Loreline.Internal.Lang.Null<int>(fullLen, true));
				int truncatedLen = truncated.Length;
				global::Loreline.Internal.Root.StringBuf spaces = new global::Loreline.Internal.Root.StringBuf();
				{
					int _g = 0;
					int _g1 = ( fullLen - truncatedLen );
					while (( _g < _g1 )) {
						int i = _g++;
						spaces.addChar(32);
					}
					
				}
				
				truncated = global::Loreline.Internal.Lang.Runtime.concat(spaces.b.ToString(), truncated);
				global::Loreline.Internal.Hscript.Completion completion = null;
				global::Loreline.Internal.Hscript.Checker checker = new global::Loreline.Internal.Hscript.Checker(default(global::Loreline.Internal.Hscript.CheckerTypes));
				try {
					checker.types.parser.allowJSON = true;
					checker.types.parser.allowTypes = true;
					checker.types.parser.resumeErrors = true;
					object expr = checker.types.parser.parseString(truncated, null, default(global::Loreline.Internal.Lang.Null<int>));
					checker.check(expr, null, new global::Loreline.Internal.Lang.Null<bool>(true, true));
				}
				catch (global::System.Exception _g2){
					object e = ((object) (global::Loreline.Internal.Exception.caught(_g2).unwrap()) );
					if (( e is global::Loreline.Internal.Hscript.Completion )) {
						completion = ((global::Loreline.Internal.Hscript.Completion) (e) );
					}
					
				}
				
				
				global::Loreline.Internal.Ds.StringMap<object> locals = checker.locals;
				return new global::Loreline.Runtime.HscriptCompletion(((global::Loreline.Internal.Ds.StringMap<object>) (locals) ), ((global::Loreline.Internal.Hscript.Completion) (completion) ));
			}
		}
		
		
		public virtual global::Loreline.Runtime.Node resolveAccessInFunction(global::Loreline.Runtime.NFunctionDecl func, global::Loreline.Runtime.Position pos) {
			global::Loreline.Runtime.FuncHscript info = this.getFuncHscript(func);
			if (( info.expr == null )) {
				return null;
			}
			
			object expr = this.getHscriptExpr(func, pos);
			if (( expr != null )) {
				return this.resolveHscriptAccess(func, expr);
			}
			
			return null;
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 29341544:
					{
						this.hscriptFunctions = ((global::Loreline.Runtime.NodeIdMap<object>) (global::Loreline.Runtime.NodeIdMap<object>.__hx_cast<object>(((global::Loreline.Runtime.NodeIdMap) (@value) ))) );
						return @value;
					}
					
					
					case 1043998965:
					{
						this.childNodes = ((global::Loreline.Runtime.NodeIdMap<object>) (global::Loreline.Runtime.NodeIdMap<object>.__hx_cast<object>(((global::Loreline.Runtime.NodeIdMap) (@value) ))) );
						return @value;
					}
					
					
					case 813247143:
					{
						this.parentNodes = ((global::Loreline.Runtime.NodeIdMap<object>) (global::Loreline.Runtime.NodeIdMap<object>.__hx_cast<object>(((global::Loreline.Runtime.NodeIdMap) (@value) ))) );
						return @value;
					}
					
					
					case 1947814499:
					{
						this.nodesById = ((global::Loreline.Runtime.NodeIdMap<object>) (global::Loreline.Runtime.NodeIdMap<object>.__hx_cast<object>(((global::Loreline.Runtime.NodeIdMap) (@value) ))) );
						return @value;
					}
					
					
					case 1197493771:
					{
						this.script = ((global::Loreline.Runtime.Script) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1464845805:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resolveAccessInFunction", 1464845805)) );
					}
					
					
					case 1629995001:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getHscriptCompletion", 1629995001)) );
					}
					
					
					case 528399230:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isHscriptExpr", 528399230)) );
					}
					
					
					case 1694418923:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resolveHscriptAccess", 1694418923)) );
					}
					
					
					case 502840914:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getHscriptExpr", 502840914)) );
					}
					
					
					case 2112670873:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getFuncHscript", 2112670873)) );
					}
					
					
					case 1818918322:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "traverse", 1818918322)) );
					}
					
					
					case 379699091:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findReadCharacterFields", 379699091)) );
					}
					
					
					case 410503296:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findModifiedCharacterFields", 410503296)) );
					}
					
					
					case 591389657:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findBeatCharacters", 591389657)) );
					}
					
					
					case 616774523:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findReadStateFields", 616774523)) );
					}
					
					
					case 267192808:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findModifiedStateFields", 267192808)) );
					}
					
					
					case 1411440466:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findReferencesToBeat", 1411440466)) );
					}
					
					
					case 1007334196:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findOutboundBeats", 1007334196)) );
					}
					
					
					case 726771330:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findStateField", 726771330)) );
					}
					
					
					case 1595357512:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "countTags", 1595357512)) );
					}
					
					
					case 648348836:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getAllTags", 648348836)) );
					}
					
					
					case 1220597281:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getVisibleBeats", 1220597281)) );
					}
					
					
					case 1751273038:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getVisibleStateFields", 1751273038)) );
					}
					
					
					case 1907506239:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getVisibleFunctions", 1907506239)) );
					}
					
					
					case 292212294:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getVisibleCharacters", 292212294)) );
					}
					
					
					case 1450967743:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findFunctionByNameFromNode", 1450967743)) );
					}
					
					
					case 1158313662:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findCharacterByNameFromNode", 1158313662)) );
					}
					
					
					case 1263696114:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findCharacterFromDialogue", 1263696114)) );
					}
					
					
					case 282239261:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findBeatByNameFromNode", 282239261)) );
					}
					
					
					case 1716134986:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findTopLevelBeatFromNode", 1716134986)) );
					}
					
					
					case 1662040923:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isTopLevelNode", 1662040923)) );
					}
					
					
					case 1328479863:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findBeatByPathFromNode", 1328479863)) );
					}
					
					
					case 1833184846:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findBeatFromTransition", 1833184846)) );
					}
					
					
					case 465315293:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "findBeatFromAccess", 465315293)) );
					}
					
					
					case 1193153968:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resolveAccess", 1193153968)) );
					}
					
					
					case 55510161:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "resolveArrayAccess", 55510161)) );
					}
					
					
					case 1832028019:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "_getImportedPaths", 1832028019)) );
					}
					
					
					case 1421318420:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getImportedPaths", 1421318420)) );
					}
					
					
					case 492343061:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getFirstParentOfType", 492343061)) );
					}
					
					
					case 1150186626:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getParentNode", 1150186626)) );
					}
					
					
					case 1975882124:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getNodesOfType", 1975882124)) );
					}
					
					
					case 1514498371:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getClosestNodeAtOrBeforePosition", 1514498371)) );
					}
					
					
					case 1793290388:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getNodeAtPosition", 1793290388)) );
					}
					
					
					case 278141802:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getNodeById", 278141802)) );
					}
					
					
					case 1824207184:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "initialize", 1824207184)) );
					}
					
					
					case 29341544:
					{
						return this.hscriptFunctions;
					}
					
					
					case 1043998965:
					{
						return this.childNodes;
					}
					
					
					case 813247143:
					{
						return this.parentNodes;
					}
					
					
					case 1947814499:
					{
						return this.nodesById;
					}
					
					
					case 1197493771:
					{
						return this.script;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1464845805:
					{
						return this.resolveAccessInFunction(((global::Loreline.Runtime.NFunctionDecl) (dynargs[0]) ), ((global::Loreline.Runtime.Position) (dynargs[1]) ));
					}
					
					
					case 1629995001:
					{
						return this.getHscriptCompletion(((global::Loreline.Runtime.NFunctionDecl) (dynargs[0]) ), ((global::Loreline.Runtime.Position) (dynargs[1]) ));
					}
					
					
					case 528399230:
					{
						return this.isHscriptExpr(dynargs[0]);
					}
					
					
					case 1694418923:
					{
						return this.resolveHscriptAccess(((global::Loreline.Runtime.NFunctionDecl) (dynargs[0]) ), dynargs[1]);
					}
					
					
					case 502840914:
					{
						return this.getHscriptExpr(((global::Loreline.Runtime.NFunctionDecl) (dynargs[0]) ), ((global::Loreline.Runtime.Position) (dynargs[1]) ));
					}
					
					
					case 2112670873:
					{
						return this.getFuncHscript(((global::Loreline.Runtime.NFunctionDecl) (dynargs[0]) ));
					}
					
					
					case 1818918322:
					{
						this.traverse(((global::Loreline.Runtime.Node) (dynargs[0]) ), ((global::Loreline.Internal.Lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 379699091:
					{
						return this.findReadCharacterFields(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
					}
					
					
					case 410503296:
					{
						return this.findModifiedCharacterFields(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
					}
					
					
					case 591389657:
					{
						return this.findBeatCharacters(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
					}
					
					
					case 616774523:
					{
						return this.findReadStateFields(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
					}
					
					
					case 267192808:
					{
						return this.findModifiedStateFields(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
					}
					
					
					case 1411440466:
					{
						return this.findReferencesToBeat(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
					}
					
					
					case 1007334196:
					{
						return this.findOutboundBeats(((global::Loreline.Runtime.NBeatDecl) (dynargs[0]) ));
					}
					
					
					case 726771330:
					{
						return this.findStateField(((global::Loreline.Runtime.NAccess) (dynargs[0]) ));
					}
					
					
					case 1595357512:
					{
						return this.countTags();
					}
					
					
					case 648348836:
					{
						return this.getAllTags();
					}
					
					
					case 1220597281:
					{
						return this.getVisibleBeats(((global::Loreline.Runtime.Node) (dynargs[0]) ));
					}
					
					
					case 1751273038:
					{
						return this.getVisibleStateFields(((global::Loreline.Runtime.Node) (dynargs[0]) ));
					}
					
					
					case 1907506239:
					{
						return this.getVisibleFunctions();
					}
					
					
					case 292212294:
					{
						return this.getVisibleCharacters();
					}
					
					
					case 1450967743:
					{
						return this.findFunctionByNameFromNode(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((global::Loreline.Runtime.Node) (dynargs[1]) ));
					}
					
					
					case 1158313662:
					{
						return this.findCharacterByNameFromNode(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((global::Loreline.Runtime.Node) (dynargs[1]) ));
					}
					
					
					case 1263696114:
					{
						return this.findCharacterFromDialogue(((global::Loreline.Runtime.NDialogueStatement) (dynargs[0]) ));
					}
					
					
					case 282239261:
					{
						return this.findBeatByNameFromNode(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((global::Loreline.Runtime.Node) (dynargs[1]) ));
					}
					
					
					case 1716134986:
					{
						return this.findTopLevelBeatFromNode(((global::Loreline.Runtime.Node) (dynargs[0]) ));
					}
					
					
					case 1662040923:
					{
						return this.isTopLevelNode(((global::Loreline.Runtime.Node) (dynargs[0]) ));
					}
					
					
					case 1328479863:
					{
						return this.findBeatByPathFromNode(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((global::Loreline.Runtime.Node) (dynargs[1]) ));
					}
					
					
					case 1833184846:
					{
						return this.findBeatFromTransition(((global::Loreline.Runtime.NTransition) (dynargs[0]) ));
					}
					
					
					case 465315293:
					{
						return this.findBeatFromAccess(((global::Loreline.Runtime.NAccess) (dynargs[0]) ));
					}
					
					
					case 1193153968:
					{
						return this.resolveAccess(((global::Loreline.Runtime.NAccess) (dynargs[0]) ));
					}
					
					
					case 55510161:
					{
						return this.resolveArrayAccess(((global::Loreline.Runtime.NArrayAccess) (dynargs[0]) ));
					}
					
					
					case 1832028019:
					{
						return this._getImportedPaths(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), ((global::Loreline.Runtime.Script) (dynargs[1]) ), ((global::Loreline.Internal.Root.Array<string>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<string>(((global::Loreline.Internal.Root.Array) (dynargs[2]) ))) ), ((global::Loreline.Internal.Ds.StringMap<bool>) (global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<bool>(((global::Loreline.Internal.Ds.StringMap) (dynargs[3]) ))) ));
					}
					
					
					case 1421318420:
					{
						return this.getImportedPaths(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 492343061:
					{
						return (this.getFirstParentOfType<object>(((global::Loreline.Runtime.Node) (dynargs[0]) ), ((global::System.Type) (dynargs[1]) ))).@value;
					}
					
					
					case 1150186626:
					{
						return this.getParentNode(((global::Loreline.Runtime.Node) (dynargs[0]) ));
					}
					
					
					case 1975882124:
					{
						return this.getNodesOfType<object>(((global::System.Type) (dynargs[0]) ), global::Loreline.Internal.Lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )));
					}
					
					
					case 1514498371:
					{
						return this.getClosestNodeAtOrBeforePosition(((global::Loreline.Runtime.Position) (dynargs[0]) ));
					}
					
					
					case 1793290388:
					{
						return this.getNodeAtPosition(((global::Loreline.Runtime.Position) (dynargs[0]) ));
					}
					
					
					case 278141802:
					{
						return this.getNodeById(((long) (dynargs[0]) ));
					}
					
					
					case 1824207184:
					{
						this.initialize();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("hscriptFunctions");
			baseArr.push("childNodes");
			baseArr.push("parentNodes");
			baseArr.push("nodesById");
			baseArr.push("script");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_initialize_155__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_initialize_155__Fun(global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
				global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
				{
					long key = ((long) (node.id) );
					this._gthis.nodesById.map._set(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ), node);
				}
				
				if (( parent != null )) {
					{
						long key1 = ((long) (node.id) );
						this._gthis.parentNodes.map._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), parent);
					}
					
					long key2 = ((long) (parent.id) );
					global::Loreline.Internal.Root.Array<object> children = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) ((this._gthis.childNodes.map._get(((int) (( ((long) (key2) ) >> 32 )) ), ((int) (((long) (key2) )) ))).@value) ))) );
					if (( children == null )) {
						children = new global::Loreline.Internal.Root.Array<object>(new object[]{});
						{
							long key3 = ((long) (parent.id) );
							this._gthis.childNodes.map._set(((int) (( ((long) (key3) ) >> 32 )) ), ((int) (((long) (key3) )) ), children);
						}
						
					}
					
					children.push(node);
				}
				
				return null;
			}
		}
		
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getNodeAtPosition_186__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_getNodeAtPosition_186__Fun(global::Loreline.Runtime.Position pos, global::Loreline.Runtime.Node[] bestMatch) : base(2, 0) {
			this.pos = pos;
			this.bestMatch = bestMatch;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			global::Loreline.Runtime.Position nodePos = node.pos;
			if (( ( ( nodePos.length > 0 ) && ( nodePos.offset <= this.pos.offset ) ) && ( ( nodePos.offset + nodePos.length ) >= this.pos.offset ) )) {
				this.bestMatch[0] = node;
			}
			
			return null;
		}
		
		
		public global::Loreline.Runtime.Position pos;
		
		public global::Loreline.Runtime.Node[] bestMatch;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getClosestNodeAtOrBeforePosition_208__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_getClosestNodeAtOrBeforePosition_208__Fun(global::Loreline.Runtime.Position pos, global::Loreline.Runtime.Node[] bestMatch, int[] bestDistance) : base(2, 0) {
			this.pos = pos;
			this.bestMatch = bestMatch;
			this.bestDistance = bestDistance;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			global::Loreline.Runtime.Position nodePos = node.pos;
			int distance = ( this.pos.offset - nodePos.offset );
			if (( ( distance >= 0 ) && ( distance < this.bestDistance[0] ) )) {
				this.bestDistance[0] = distance;
				this.bestMatch[0] = node;
			}
			
			return null;
		}
		
		
		public global::Loreline.Runtime.Position pos;
		
		public global::Loreline.Runtime.Node[] bestMatch;
		
		public int[] bestDistance;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getNodesOfType_227__Fun<T> : global::Loreline.Internal.Lang.Function {
		
		public Lens_getNodesOfType_227__Fun(global::System.Type nodeType, global::Loreline.Internal.Root.Array<T> matches, bool includeImported1, global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this.nodeType = nodeType;
			this.matches = matches;
			this.includeImported1 = includeImported1;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (global::Loreline.Internal.Root.Std.isOfType(node, this.nodeType)) {
				this.matches.push(global::Loreline.Internal.Lang.Runtime.genericCast<T>(((object) (node) )));
			}
			
			if ( ! ((( this.includeImported1 || ( node == this._gthis.script ) ))) ) {
				return  ! ((( ( node is global::Loreline.Runtime.NImportStatement ) || ( node is global::Loreline.Runtime.Script ) ))) ;
			}
			else {
				return true;
			}
			
		}
		
		
		public global::System.Type nodeType;
		
		public global::Loreline.Internal.Root.Array<T> matches;
		
		public bool includeImported1;
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_resolveAccess_454__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_resolveAccess_454__Fun(global::Loreline.Runtime.Node[] result, string name) : base(2, 0) {
			this.result = result;
			this.name = name;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (( ((global::Loreline.Runtime.Node) (this.result[0]) ) != null )) {
				return false;
			}
			
			if (( node is global::Loreline.Runtime.NStateDecl )) {
				global::Loreline.Runtime.NStateDecl stateDecl = ((global::Loreline.Runtime.NStateDecl) (node) );
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<object> _g1 = stateDecl.fields;
					while (( _g < _g1.length )) {
						global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
						 ++ _g;
						if (( field.name == this.name )) {
							this.result[0] = field;
							return false;
						}
						
					}
					
				}
				
			}
			
			return true;
		}
		
		
		public global::Loreline.Runtime.Node[] result;
		
		public string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_resolveAccess_479__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_resolveAccess_479__Fun(global::Loreline.Runtime.Node[] stateField, string name) : base(2, 0) {
			this.stateField = stateField;
			this.name = name;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (( ((global::Loreline.Runtime.Node) (this.stateField[0]) ) != null )) {
				return false;
			}
			
			if (( node is global::Loreline.Runtime.NStateDecl )) {
				global::Loreline.Runtime.NStateDecl stateDecl = ((global::Loreline.Runtime.NStateDecl) (node) );
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<object> _g1 = stateDecl.fields;
					while (( _g < _g1.length )) {
						global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
						 ++ _g;
						if (( field.name == this.name )) {
							this.stateField[0] = field;
							return false;
						}
						
					}
					
				}
				
			}
			
			if ( ! (( node is global::Loreline.Runtime.NImportStatement )) ) {
				return ( node is global::Loreline.Runtime.Script );
			}
			else {
				return true;
			}
			
		}
		
		
		public global::Loreline.Runtime.Node[] stateField;
		
		public string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findBeatByPathFromNode_557__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findBeatByPathFromNode_557__Fun(string name, global::Loreline.Runtime.NBeatDecl[] foundBeat) : base(2, 0) {
			this.name = name;
			this.foundBeat = foundBeat;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (( node is global::Loreline.Runtime.NBeatDecl )) {
				global::Loreline.Runtime.NBeatDecl beat = ((global::Loreline.Runtime.NBeatDecl) (node) );
				if (( beat.name == this.name )) {
					this.foundBeat[0] = beat;
				}
				
				return false;
			}
			else {
				return ( ((global::Loreline.Runtime.NBeatDecl) (this.foundBeat[0]) ) == null );
			}
			
		}
		
		
		public string name;
		
		public global::Loreline.Runtime.NBeatDecl[] foundBeat;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findBeatByNameFromNode_619__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findBeatByNameFromNode_619__Fun(global::Loreline.Runtime.NBeatDecl[] result, global::Loreline.Runtime.Node node, string name) : base(2, 0) {
			this.result = result;
			this.node = node;
			this.name = name;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node child = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (( ( ((global::Loreline.Runtime.NBeatDecl) (this.result[0]) ) != null ) || ( child == this.node ) )) {
				return false;
			}
			else if (( child is global::Loreline.Runtime.NBeatDecl )) {
				global::Loreline.Runtime.NBeatDecl beatDecl = ((global::Loreline.Runtime.NBeatDecl) (child) );
				if (( beatDecl.name == this.name )) {
					this.result[0] = beatDecl;
				}
				
				return false;
			}
			
			return true;
		}
		
		
		public global::Loreline.Runtime.NBeatDecl[] result;
		
		public global::Loreline.Runtime.Node node;
		
		public string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findBeatByNameFromNode_638__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findBeatByNameFromNode_638__Fun(global::Loreline.Runtime.NBeatDecl[] result, string name) : base(2, 0) {
			this.result = result;
			this.name = name;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node child = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (( ( ((global::Loreline.Runtime.NBeatDecl) (this.result[0]) ) == null ) && ( child is global::Loreline.Runtime.NBeatDecl ) )) {
				global::Loreline.Runtime.NBeatDecl beatDecl = ((global::Loreline.Runtime.NBeatDecl) (child) );
				if (( beatDecl.name == this.name )) {
					this.result[0] = beatDecl;
				}
				
			}
			
			if ( ! (( child is global::Loreline.Runtime.NImportStatement )) ) {
				return ( child is global::Loreline.Runtime.Script );
			}
			else {
				return true;
			}
			
		}
		
		
		public global::Loreline.Runtime.NBeatDecl[] result;
		
		public string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findCharacterByNameFromNode_672__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findCharacterByNameFromNode_672__Fun(global::Loreline.Runtime.NCharacterDecl[] result, string name) : base(2, 0) {
			this.result = result;
			this.name = name;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node child = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (( ( ((global::Loreline.Runtime.NCharacterDecl) (this.result[0]) ) == null ) && ( child is global::Loreline.Runtime.NCharacterDecl ) )) {
				global::Loreline.Runtime.NCharacterDecl characterDecl = ((global::Loreline.Runtime.NCharacterDecl) (child) );
				if (( characterDecl.name == this.name )) {
					this.result[0] = characterDecl;
				}
				
			}
			
			if ( ! (( child is global::Loreline.Runtime.NImportStatement )) ) {
				return ( child is global::Loreline.Runtime.Script );
			}
			else {
				return true;
			}
			
		}
		
		
		public global::Loreline.Runtime.NCharacterDecl[] result;
		
		public string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findFunctionByNameFromNode_691__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findFunctionByNameFromNode_691__Fun(global::Loreline.Runtime.NFunctionDecl[] result, string name) : base(2, 0) {
			this.result = result;
			this.name = name;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node child = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (( ( ((global::Loreline.Runtime.NFunctionDecl) (this.result[0]) ) == null ) && ( child is global::Loreline.Runtime.NFunctionDecl ) )) {
				global::Loreline.Runtime.NFunctionDecl functionDecl = ((global::Loreline.Runtime.NFunctionDecl) (child) );
				if (( functionDecl.name == this.name )) {
					this.result[0] = functionDecl;
				}
				
			}
			
			if ( ! (( child is global::Loreline.Runtime.NImportStatement )) ) {
				return ( child is global::Loreline.Runtime.Script );
			}
			else {
				return true;
			}
			
		}
		
		
		public global::Loreline.Runtime.NFunctionDecl[] result;
		
		public string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getVisibleStateFields_759__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_getVisibleStateFields_759__Fun(global::Loreline.Runtime.Int64Map<bool>[] seenFields_map, global::Loreline.Internal.Root.Array<object> fields) : base(2, 0) {
			this.seenFields_map = seenFields_map;
			this.fields = fields;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
				global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
				if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NStateDecl))) {
					global::Loreline.Runtime.NStateDecl state = ((global::Loreline.Runtime.NStateDecl) (node) );
					if (( parent is global::Loreline.Runtime.Script )) {
						int _g = 0;
						global::Loreline.Internal.Root.Array<object> _g1 = state.fields;
						while (( _g < _g1.length )) {
							global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
							 ++ _g;
							long key = ((long) (field.id) );
							if ( ! (((global::Loreline.Runtime.Int64Map<bool>) (this.seenFields_map[0]) )._exists(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))) ) {
								{
									long key1 = ((long) (field.id) );
									((global::Loreline.Runtime.Int64Map<bool>) (this.seenFields_map[0]) )._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), true);
								}
								
								this.fields.push(field);
							}
							
						}
						
					}
					
				}
				
				return null;
			}
		}
		
		
		public global::Loreline.Runtime.Int64Map<bool>[] seenFields_map;
		
		public global::Loreline.Internal.Root.Array<object> fields;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getVisibleBeats_806__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_getVisibleBeats_806__Fun(global::Loreline.Internal.Ds.StringMap<bool> seenBeats, global::Loreline.Internal.Root.Array<object> beats) : base(2, 0) {
			this.seenBeats = seenBeats;
			this.beats = beats;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NBeatDecl))) {
				if (( parent is global::Loreline.Runtime.Script )) {
					global::Loreline.Runtime.NBeatDecl beat = ((global::Loreline.Runtime.NBeatDecl) (node) );
					if ( ! (this.seenBeats.exists(beat.name)) ) {
						this.seenBeats.@set(beat.name, true);
						this.beats.push(beat);
					}
					
				}
				
			}
			
			return null;
		}
		
		
		public global::Loreline.Internal.Ds.StringMap<bool> seenBeats;
		
		public global::Loreline.Internal.Root.Array<object> beats;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getAllTags_831__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_getAllTags_831__Fun(global::Loreline.Internal.Ds.StringMap<bool> tags) : base(1, 0) {
			this.tags = tags;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::Loreline.Runtime.NStringLiteral str = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.NStringLiteral) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.NStringLiteral) (__fn_dyn1) )) );
				int _g = 0;
				global::Loreline.Internal.Root.Array<object> _g1 = str.parts;
				while (( _g < _g1.length )) {
					global::Loreline.Runtime.NStringPart part = ((global::Loreline.Runtime.NStringPart) (_g1[_g]) );
					 ++ _g;
					{
						global::Loreline.Runtime.StringPartType _g2 = part.partType;
						if (( _g2._hx_index == 2 )) {
							bool _g3 = ( _g2 as global::Loreline.Runtime.StringPartType_Tag ).closing;
							{
								global::Loreline.Runtime.NStringLiteral content = ( _g2 as global::Loreline.Runtime.StringPartType_Tag ).expr;
								if (( content.parts.length == 1 )) {
									global::Loreline.Runtime.StringPartType _g4 = ((global::Loreline.Runtime.NStringPart) (content.parts[0]) ).partType;
									if (( _g4._hx_index == 0 )) {
										string text = ( _g4 as global::Loreline.Runtime.StringPartType_Raw ).text;
										{
											string key = text.Trim();
											this.tags.@set(key, true);
										}
										
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
				return null;
			}
		}
		
		
		public global::Loreline.Internal.Ds.StringMap<bool> tags;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getAllTags_849__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_getAllTags_849__Fun(global::Loreline.Internal.Lang.Function processStringLiteral) : base(2, 0) {
			this.processStringLiteral = processStringLiteral;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NStringLiteral))) {
				this.processStringLiteral.__hx_invoke1_o(default(double), ((global::Loreline.Runtime.NStringLiteral) (node) ));
			}
			
			return null;
		}
		
		
		public global::Loreline.Internal.Lang.Function processStringLiteral;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getAllTags_858__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_getAllTags_858__Fun(global::Loreline.Internal.Lang.Function processStringLiteral) : base(2, 0) {
			this.processStringLiteral = processStringLiteral;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NStringLiteral))) {
				this.processStringLiteral.__hx_invoke1_o(default(double), ((global::Loreline.Runtime.NStringLiteral) (node) ));
			}
			
			return null;
		}
		
		
		public global::Loreline.Internal.Lang.Function processStringLiteral;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_countTags_877__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_countTags_877__Fun(global::Loreline.Internal.Ds.StringMap<int> tags) : base(1, 0) {
			this.tags = tags;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::Loreline.Runtime.NStringLiteral str = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.NStringLiteral) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.NStringLiteral) (__fn_dyn1) )) );
				int _g = 0;
				global::Loreline.Internal.Root.Array<object> _g1 = str.parts;
				while (( _g < _g1.length )) {
					global::Loreline.Runtime.NStringPart part = ((global::Loreline.Runtime.NStringPart) (_g1[_g]) );
					 ++ _g;
					{
						global::Loreline.Runtime.StringPartType _g2 = part.partType;
						if (( _g2._hx_index == 2 )) {
							bool _g3 = ( _g2 as global::Loreline.Runtime.StringPartType_Tag ).closing;
							{
								global::Loreline.Runtime.NStringLiteral content = ( _g2 as global::Loreline.Runtime.StringPartType_Tag ).expr;
								if (( content.parts.length == 1 )) {
									global::Loreline.Runtime.StringPartType _g4 = ((global::Loreline.Runtime.NStringPart) (content.parts[0]) ).partType;
									if (( _g4._hx_index == 0 )) {
										string text = ( _g4 as global::Loreline.Runtime.StringPartType_Raw ).text;
										{
											text = text.Trim();
											global::Loreline.Internal.Lang.Null<int> tmp = this.tags.@get(text);
											int prevCount = ( (tmp.hasValue) ? ((tmp).@value) : (0) );
											this.tags.@set(text, ( prevCount + 1 ));
										}
										
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
				return null;
			}
		}
		
		
		public global::Loreline.Internal.Ds.StringMap<int> tags;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_countTags_897__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_countTags_897__Fun(global::Loreline.Internal.Lang.Function processStringLiteral) : base(2, 0) {
			this.processStringLiteral = processStringLiteral;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NStringLiteral))) {
				this.processStringLiteral.__hx_invoke1_o(default(double), ((global::Loreline.Runtime.NStringLiteral) (node) ));
			}
			
			return null;
		}
		
		
		public global::Loreline.Internal.Lang.Function processStringLiteral;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findOutboundBeats_935__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findOutboundBeats_935__Fun(global::Loreline.Runtime.Int64Map<object>[] targetBeats_map, global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this.targetBeats_map = targetBeats_map;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
				global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
				{
					global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )));
					if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCall))) {
						global::Loreline.Runtime.NCall call = ((global::Loreline.Runtime.NCall) (node) );
						if (( call.target is global::Loreline.Runtime.NAccess )) {
							global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (call.target) );
							if (( access.target == null )) {
								global::Loreline.Runtime.NBeatDecl targetBeat = this._gthis.findBeatFromAccess(access);
								if (( targetBeat != null )) {
									long key = targetBeat.id;
									global::Loreline.Runtime.Reference<object> @value = new global::Loreline.Runtime.Reference<object>(((object) (targetBeat) ), ((global::Loreline.Runtime.Node) (call) ));
									{
										long key1 = ((long) (key) );
										((global::Loreline.Runtime.Int64Map<object>) (this.targetBeats_map[0]) )._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), @value);
									}
									
								}
								
							}
							
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NTransition))) {
						global::Loreline.Runtime.NTransition transition = ((global::Loreline.Runtime.NTransition) (node) );
						global::Loreline.Runtime.NBeatDecl targetBeat1 = this._gthis.findBeatByNameFromNode(transition.target, transition);
						if (( targetBeat1 != null )) {
							long key2 = targetBeat1.id;
							global::Loreline.Runtime.Reference<object> value1 = new global::Loreline.Runtime.Reference<object>(((object) (targetBeat1) ), ((global::Loreline.Runtime.Node) (transition) ));
							{
								long key3 = ((long) (key2) );
								((global::Loreline.Runtime.Int64Map<object>) (this.targetBeats_map[0]) )._set(((int) (( ((long) (key3) ) >> 32 )) ), ((int) (((long) (key3) )) ), value1);
							}
							
						}
						
					}
					else {
					}
					
				}
				
				return true;
			}
		}
		
		
		public global::Loreline.Runtime.Int64Map<object>[] targetBeats_map;
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findReferencesToBeat_975__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findReferencesToBeat_975__Fun(global::Loreline.Internal.Root.Array<object> references, global::Loreline.Runtime.NBeatDecl beatDecl, global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this.references = references;
			this.beatDecl = beatDecl;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			{
				global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )));
				if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NCall))) {
					global::Loreline.Runtime.NCall call = ((global::Loreline.Runtime.NCall) (node) );
					if (( call.target is global::Loreline.Runtime.NAccess )) {
						global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (call.target) );
						if (( ( access.target == null ) && ( access.name == this.beatDecl.name ) )) {
							global::Loreline.Runtime.NBeatDecl foundBeat = this._gthis.findBeatFromAccess(access);
							if (( ( foundBeat != null ) && global::Loreline.Runtime._Node.NodeId_Impl_.@equals(foundBeat.id, this.beatDecl.id) )) {
								this.references.push(new global::Loreline.Runtime.Reference<object>(((object) (this.beatDecl) ), ((global::Loreline.Runtime.Node) (call) )));
							}
							
						}
						
					}
					
				}
				else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NTransition))) {
					global::Loreline.Runtime.NTransition transition = ((global::Loreline.Runtime.NTransition) (node) );
					if (( transition.target == this.beatDecl.name )) {
						this.references.push(new global::Loreline.Runtime.Reference<object>(((object) (this.beatDecl) ), ((global::Loreline.Runtime.Node) (transition) )));
					}
					
				}
				else {
				}
				
			}
			
			return null;
		}
		
		
		public global::Loreline.Internal.Root.Array<object> references;
		
		public global::Loreline.Runtime.NBeatDecl beatDecl;
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findModifiedStateFields_1013__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findModifiedStateFields_1013__Fun(global::Loreline.Internal.Ds.StringMap<object> modifiedFields, global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this.modifiedFields = modifiedFields;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NAssign))) {
				global::Loreline.Runtime.NAssign assign = ((global::Loreline.Runtime.NAssign) (node) );
				if (( assign.target is global::Loreline.Runtime.NAccess )) {
					global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (assign.target) );
					global::Loreline.Runtime.NObjectField field = this._gthis.findStateField(access);
					if (( field != null )) {
						string key = field.name;
						global::Loreline.Runtime.Reference<object> @value = new global::Loreline.Runtime.Reference<object>(((object) (field) ), ((global::Loreline.Runtime.Node) (assign) ));
						this.modifiedFields.@set(key, @value);
					}
					
				}
				
			}
			
			return true;
		}
		
		
		public global::Loreline.Internal.Ds.StringMap<object> modifiedFields;
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findModifiedStateFields_1034__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findModifiedStateFields_1034__Fun() : base(2, 1) {
		}
		
		
		public static global::Loreline.Runtime.Lens_findModifiedStateFields_1034__Fun __hx_current;
		
		public override double __hx_invoke2_f(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Reference<object> b = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (((object) (__fn_float2) )) ))) )) : (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (__fn_dyn2) ))) )) );
				global::Loreline.Runtime.Reference<object> a = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (((object) (__fn_float1) )) ))) )) : (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (__fn_dyn1) ))) )) );
				string aName = ((global::Loreline.Runtime.NObjectField) (a.target) ).name.ToLowerInvariant();
				string bName = ((global::Loreline.Runtime.NObjectField) (b.target) ).name.ToLowerInvariant();
				if (( string.CompareOrdinal(aName, bName) < 0 )) {
					return ((double) (-1) );
				}
				else if (( string.CompareOrdinal(aName, bName) > 0 )) {
					return ((double) (1) );
				}
				else {
					return ((double) (0) );
				}
				
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findReadStateFields_1051__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findReadStateFields_1051__Fun(global::Loreline.Internal.Ds.StringMap<object> readFields, global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this.readFields = readFields;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NAccess))) {
				global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (node) );
				if (( parent is global::Loreline.Runtime.NAssign )) {
					global::Loreline.Runtime.NAssign assign = ((global::Loreline.Runtime.NAssign) (parent) );
					if (( assign.target == node )) {
						return true;
					}
					
				}
				
				global::Loreline.Runtime.NObjectField field = this._gthis.findStateField(access);
				if (( field != null )) {
					string key = field.name;
					global::Loreline.Runtime.Reference<object> @value = new global::Loreline.Runtime.Reference<object>(((object) (field) ), ((global::Loreline.Runtime.Node) (access) ));
					this.readFields.@set(key, @value);
				}
				
			}
			
			return true;
		}
		
		
		public global::Loreline.Internal.Ds.StringMap<object> readFields;
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findReadStateFields_1075__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findReadStateFields_1075__Fun() : base(2, 1) {
		}
		
		
		public static global::Loreline.Runtime.Lens_findReadStateFields_1075__Fun __hx_current;
		
		public override double __hx_invoke2_f(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Reference<object> b = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (((object) (__fn_float2) )) ))) )) : (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (__fn_dyn2) ))) )) );
				global::Loreline.Runtime.Reference<object> a = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (((object) (__fn_float1) )) ))) )) : (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (__fn_dyn1) ))) )) );
				string aName = ((global::Loreline.Runtime.NObjectField) (a.target) ).name.ToLowerInvariant();
				string bName = ((global::Loreline.Runtime.NObjectField) (b.target) ).name.ToLowerInvariant();
				if (( string.CompareOrdinal(aName, bName) < 0 )) {
					return ((double) (-1) );
				}
				else if (( string.CompareOrdinal(aName, bName) > 0 )) {
					return ((double) (1) );
				}
				else {
					return ((double) (0) );
				}
				
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findBeatCharacters_1094__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findBeatCharacters_1094__Fun(global::Loreline.Runtime.Int64Map<object>[] characters_map, global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this.characters_map = characters_map;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
				global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
				{
					global::System.Type __temp_switch1 = (global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )));
					if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NAccess))) {
						global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (node) );
						if (( access.target == null )) {
							global::Loreline.Runtime.NCharacterDecl character = this._gthis.findCharacterByNameFromNode(access.name, access);
							if (( character != null )) {
								long key = character.id;
								global::Loreline.Runtime.Reference<object> @value = new global::Loreline.Runtime.Reference<object>(((object) (character) ), ((global::Loreline.Runtime.Node) (access) ));
								{
									long key1 = ((long) (key) );
									((global::Loreline.Runtime.Int64Map<object>) (this.characters_map[0]) )._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), @value);
								}
								
							}
							
						}
						
					}
					else if (global::Loreline.Internal.Lang.Runtime.refEq(__temp_switch1, typeof(global::Loreline.Runtime.NDialogueStatement))) {
						global::Loreline.Runtime.NDialogueStatement dialogue = ((global::Loreline.Runtime.NDialogueStatement) (node) );
						global::Loreline.Runtime.NCharacterDecl character1 = this._gthis.findCharacterFromDialogue(dialogue);
						if (( character1 != null )) {
							long key2 = character1.id;
							global::Loreline.Runtime.Reference<object> value1 = new global::Loreline.Runtime.Reference<object>(((object) (character1) ), ((global::Loreline.Runtime.Node) (dialogue) ));
							{
								long key3 = ((long) (key2) );
								((global::Loreline.Runtime.Int64Map<object>) (this.characters_map[0]) )._set(((int) (( ((long) (key3) ) >> 32 )) ), ((int) (((long) (key3) )) ), value1);
							}
							
						}
						
					}
					else {
					}
					
				}
				
				return true;
			}
		}
		
		
		public global::Loreline.Runtime.Int64Map<object>[] characters_map;
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findBeatCharacters_1121__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findBeatCharacters_1121__Fun() : base(2, 1) {
		}
		
		
		public static global::Loreline.Runtime.Lens_findBeatCharacters_1121__Fun __hx_current;
		
		public override double __hx_invoke2_f(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Reference<object> b = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (((object) (__fn_float2) )) ))) )) : (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (__fn_dyn2) ))) )) );
				global::Loreline.Runtime.Reference<object> a = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (((object) (__fn_float1) )) ))) )) : (((global::Loreline.Runtime.Reference<object>) (global::Loreline.Runtime.Reference<object>.__hx_cast<object>(((global::Loreline.Runtime.Reference) (__fn_dyn1) ))) )) );
				string aName = ((global::Loreline.Runtime.NCharacterDecl) (a.target) ).name.ToLowerInvariant();
				string bName = ((global::Loreline.Runtime.NCharacterDecl) (b.target) ).name.ToLowerInvariant();
				if (( string.CompareOrdinal(aName, bName) < 0 )) {
					return ((double) (-1) );
				}
				else if (( string.CompareOrdinal(aName, bName) > 0 )) {
					return ((double) (1) );
				}
				else {
					return ((double) (0) );
				}
				
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findModifiedCharacterFields_1139__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findModifiedCharacterFields_1139__Fun(global::Loreline.Runtime.Int64Map<bool>[] used_map, global::Loreline.Internal.Root.Array<object> refs, global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this.used_map = used_map;
			this.refs = refs;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
				global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
				if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NAssign))) {
					global::Loreline.Runtime.NAssign assign = ((global::Loreline.Runtime.NAssign) (node) );
					if (( assign.target is global::Loreline.Runtime.NAccess )) {
						global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (assign.target) );
						global::Loreline.Runtime.Node resolved = this._gthis.resolveAccess(access);
						if (( resolved is global::Loreline.Runtime.NObjectField )) {
							long key = ((long) (resolved.id) );
							if ( ! (((global::Loreline.Runtime.Int64Map<bool>) (this.used_map[0]) )._exists(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))) ) {
								global::Loreline.Runtime.Node parent1 = this._gthis.getParentNode(resolved);
								if (( parent1 is global::Loreline.Runtime.NCharacterDecl )) {
									{
										long key1 = ((long) (resolved.id) );
										((global::Loreline.Runtime.Int64Map<bool>) (this.used_map[0]) )._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), true);
									}
									
									this.refs.push(new global::Loreline.Runtime.Reference<object>(((global::Loreline.Runtime.NObjectField) (resolved) ), ((global::Loreline.Runtime.Node) (node) )));
								}
								
							}
							
						}
						
					}
					
				}
				
				return true;
			}
		}
		
		
		public global::Loreline.Runtime.Int64Map<bool>[] used_map;
		
		public global::Loreline.Internal.Root.Array<object> refs;
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_findReadCharacterFields_1184__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_findReadCharacterFields_1184__Fun(global::Loreline.Runtime.Int64Map<bool>[] used_map, global::Loreline.Internal.Root.Array<object> refs, global::Loreline.Runtime.Lens _gthis) : base(2, 0) {
			this.used_map = used_map;
			this.refs = refs;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
				global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
				if (global::Loreline.Internal.Lang.Runtime.refEq(global::Loreline.Internal.Root.Type.getClass<object>(((object) (node) )), typeof(global::Loreline.Runtime.NAccess))) {
					global::Loreline.Runtime.NAccess access = ((global::Loreline.Runtime.NAccess) (node) );
					global::Loreline.Runtime.Node parent1 = this._gthis.getParentNode(access);
					if (( parent1 is global::Loreline.Runtime.NAssign )) {
						global::Loreline.Runtime.NAssign assign = ((global::Loreline.Runtime.NAssign) (parent1) );
						if (( assign.target == access )) {
							return true;
						}
						
					}
					
					global::Loreline.Runtime.Node resolved = this._gthis.resolveAccess(access);
					if (( resolved is global::Loreline.Runtime.NObjectField )) {
						long key = ((long) (resolved.id) );
						if ( ! (((global::Loreline.Runtime.Int64Map<bool>) (this.used_map[0]) )._exists(((int) (( ((long) (key) ) >> 32 )) ), ((int) (((long) (key) )) ))) ) {
							global::Loreline.Runtime.Node parent2 = this._gthis.getParentNode(resolved);
							if (( parent2 is global::Loreline.Runtime.NCharacterDecl )) {
								{
									long key1 = ((long) (resolved.id) );
									((global::Loreline.Runtime.Int64Map<bool>) (this.used_map[0]) )._set(((int) (( ((long) (key1) ) >> 32 )) ), ((int) (((long) (key1) )) ), true);
								}
								
								this.refs.push(new global::Loreline.Runtime.Reference<object>(((global::Loreline.Runtime.NObjectField) (resolved) ), ((global::Loreline.Runtime.Node) (node) )));
							}
							
						}
						
					}
					
				}
				
				return true;
			}
		}
		
		
		public global::Loreline.Runtime.Int64Map<bool>[] used_map;
		
		public global::Loreline.Internal.Root.Array<object> refs;
		
		public global::Loreline.Runtime.Lens _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_getHscriptExpr_1266__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_getHscriptExpr_1266__Fun(int offset, global::Loreline.Runtime.FuncHscript info, global::Loreline.Internal.Lang.Function[] handler, object[] bestExpr) : base(1, 0) {
			this.offset = offset;
			this.info = info;
			this.handler = handler;
			this.bestExpr = bestExpr;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object expr = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			if (( expr != null )) {
				int min = this.info.codeToHscript.inputPosFromProcessedPos(((int) (global::Loreline.Internal.Lang.Runtime.getField_f(expr, "pmin", 1247475490, true)) ));
				int max = this.info.codeToHscript.inputPosFromProcessedPos(((int) (global::Loreline.Internal.Lang.Runtime.getField_f(expr, "pmax", 1247473716, true)) ));
				if (( ( this.offset >= min ) && ( this.offset <= max ) )) {
					this.bestExpr[0] = expr;
				}
				
				global::Loreline.Internal.Hscript.Tools.iter(expr, this.handler[0]);
			}
			
			return null;
		}
		
		
		public int offset;
		
		public global::Loreline.Runtime.FuncHscript info;
		
		public global::Loreline.Internal.Lang.Function[] handler;
		
		public object[] bestExpr;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Runtime {
	public class Lens_resolveHscriptAccess_1292__Fun : global::Loreline.Internal.Lang.Function {
		
		public Lens_resolveHscriptAccess_1292__Fun(global::Loreline.Runtime.Node[] stateField, string name) : base(2, 0) {
			this.stateField = stateField;
			this.name = name;
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			global::Loreline.Runtime.Node parent = ( (( __fn_dyn2 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float2) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn2) )) );
			global::Loreline.Runtime.Node node = ( (( __fn_dyn1 == global::Loreline.Internal.Lang.Runtime.undefined )) ? (((global::Loreline.Runtime.Node) (((object) (__fn_float1) )) )) : (((global::Loreline.Runtime.Node) (__fn_dyn1) )) );
			if (( ((global::Loreline.Runtime.Node) (this.stateField[0]) ) != null )) {
				return false;
			}
			
			if (( node is global::Loreline.Runtime.NStateDecl )) {
				global::Loreline.Runtime.NStateDecl stateDecl = ((global::Loreline.Runtime.NStateDecl) (node) );
				{
					int _g = 0;
					global::Loreline.Internal.Root.Array<object> _g1 = stateDecl.fields;
					while (( _g < _g1.length )) {
						global::Loreline.Runtime.NObjectField field = ((global::Loreline.Runtime.NObjectField) (_g1[_g]) );
						 ++ _g;
						if (( field.name == this.name )) {
							this.stateField[0] = field;
							return false;
						}
						
					}
					
				}
				
			}
			
			if ( ! (( node is global::Loreline.Runtime.NImportStatement )) ) {
				return ( node is global::Loreline.Runtime.Script );
			}
			else {
				return true;
			}
			
		}
		
		
		public global::Loreline.Runtime.Node[] stateField;
		
		public string name;
		
	}
}


