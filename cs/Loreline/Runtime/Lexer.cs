// Generated by Haxe 4.3.6
using global::Loreline.Internal.Root;

#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class LexerError : global::Loreline.Runtime.Error {
		
		public LexerError(global::Loreline.Internal.Lang.EmptyObject empty) : base(global::Loreline.Internal.Lang.EmptyObject.EMPTY) {
		}
		
		
		public LexerError(string message, global::Loreline.Runtime.Position pos) : base(global::Loreline.Internal.Lang.EmptyObject.EMPTY) {
			global::Loreline.Runtime.LexerError.__hx_ctor_loreline_LexerError(this, message, pos);
		}
		
		
		protected static void __hx_ctor_loreline_LexerError(global::Loreline.Runtime.LexerError __hx_this, string message, global::Loreline.Runtime.Position pos) {
			global::Loreline.Runtime.Error.__hx_ctor_loreline_Error(__hx_this, message, pos);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class LStringAttachment : global::Loreline.Internal.Lang.Enum {
		
		protected LStringAttachment(int index) : base(index) {
		}
		
		
		public static global::Loreline.Runtime.LStringAttachment Interpolation(bool braces, bool inTag, global::Loreline.Internal.Root.Array<object> expr, int start, int length) {
			return new global::Loreline.Runtime.LStringAttachment_Interpolation(braces, inTag, expr, start, length);
		}
		
		
		public static global::Loreline.Runtime.LStringAttachment Tag(bool closing, int start, int length) {
			return new global::Loreline.Runtime.LStringAttachment_Tag(closing, start, length);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class LStringAttachment_Interpolation : global::Loreline.Runtime.LStringAttachment {
		
		public LStringAttachment_Interpolation(bool braces, bool inTag, global::Loreline.Internal.Root.Array<object> expr, int start, int length) : base(0) {
			this.braces = braces;
			this.inTag = inTag;
			this.expr = expr;
			this.start = start;
			this.length = length;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.braces, this.inTag, this.expr, this.start, this.length});
		}
		
		
		public override string getTag() {
			return "Interpolation";
		}
		
		
		public override int GetHashCode() {
			return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(0, new object[]{this.braces, this.inTag, this.expr, this.start, this.length});
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.LStringAttachment_Interpolation en = ( other as global::Loreline.Runtime.LStringAttachment_Interpolation );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.braces) ), ((object) (en.braces) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.inTag) ), ((object) (en.inTag) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.expr) ), ((object) (en.expr) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.start) ), ((object) (en.start) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.length) ), ((object) (en.length) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("Interpolation", new object[]{this.braces, this.inTag, this.expr, this.start, this.length});
		}
		
		
		public readonly bool braces;
		
		public readonly bool inTag;
		
		public readonly global::Loreline.Internal.Root.Array<object> expr;
		
		public readonly int start;
		
		public readonly int length;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class LStringAttachment_Tag : global::Loreline.Runtime.LStringAttachment {
		
		public LStringAttachment_Tag(bool closing, int start, int length) : base(1) {
			this.closing = closing;
			this.start = start;
			this.length = length;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.closing, this.start, this.length});
		}
		
		
		public override string getTag() {
			return "Tag";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(1, new object[]{this.closing, this.start, this.length});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.LStringAttachment_Tag en = ( other as global::Loreline.Runtime.LStringAttachment_Tag );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.closing) ), ((object) (en.closing) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.start) ), ((object) (en.start) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.length) ), ((object) (en.length) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("Tag", new object[]{this.closing, this.start, this.length});
		}
		
		
		public readonly bool closing;
		
		public readonly int start;
		
		public readonly int length;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime._Lexer {
	public sealed class TokenStackType_Impl_ {
		
		static TokenStackType_Impl_() {
			unchecked{
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.ChoiceBrace = ((int) (0) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.ChoiceIndent = ((int) (1) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.StateBrace = ((int) (2) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.StateIndent = ((int) (3) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.CharacterBrace = ((int) (4) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.CharacterIndent = ((int) (5) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.BeatBrace = ((int) (6) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.BeatIndent = ((int) (7) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.Brace = ((int) (8) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.Indent = ((int) (9) );
				global::Loreline.Runtime._Lexer.TokenStackType_Impl_.Bracket = ((int) (10) );
			}
		}
		
		
		public static int ChoiceBrace;
		
		public static int ChoiceIndent;
		
		public static int StateBrace;
		
		public static int StateIndent;
		
		public static int CharacterBrace;
		
		public static int CharacterIndent;
		
		public static int BeatBrace;
		
		public static int BeatIndent;
		
		public static int Brace;
		
		public static int Indent;
		
		public static int Bracket;
		
		public static string toString(int this1) {
			unchecked {
				switch (this1) {
					case 0:
					{
						return "ChoiceBrace";
					}
					
					
					case 1:
					{
						return "ChoiceIndent";
					}
					
					
					case 2:
					{
						return "StateBrace";
					}
					
					
					case 3:
					{
						return "StateIndent";
					}
					
					
					case 4:
					{
						return "CharacterBrace";
					}
					
					
					case 5:
					{
						return "CharacterIndent";
					}
					
					
					case 6:
					{
						return "BeatBrace";
					}
					
					
					case 7:
					{
						return "BeatIndent";
					}
					
					
					case 8:
					{
						return "Brace";
					}
					
					
					case 9:
					{
						return "Indent";
					}
					
					
					case 10:
					{
						return "Bracket";
					}
					
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class TokenType : global::Loreline.Internal.Lang.Enum {
		
		protected TokenType(int index) : base(index) {
		}
		
		
		public static readonly global::Loreline.Runtime.TokenType KwImport = new global::Loreline.Runtime.TokenType_KwImport();
		
		public static readonly global::Loreline.Runtime.TokenType KwState = new global::Loreline.Runtime.TokenType_KwState();
		
		public static readonly global::Loreline.Runtime.TokenType KwBeat = new global::Loreline.Runtime.TokenType_KwBeat();
		
		public static readonly global::Loreline.Runtime.TokenType KwCharacter = new global::Loreline.Runtime.TokenType_KwCharacter();
		
		public static readonly global::Loreline.Runtime.TokenType KwChoice = new global::Loreline.Runtime.TokenType_KwChoice();
		
		public static readonly global::Loreline.Runtime.TokenType KwIf = new global::Loreline.Runtime.TokenType_KwIf();
		
		public static readonly global::Loreline.Runtime.TokenType KwElse = new global::Loreline.Runtime.TokenType_KwElse();
		
		public static readonly global::Loreline.Runtime.TokenType KwNew = new global::Loreline.Runtime.TokenType_KwNew();
		
		public static global::Loreline.Runtime.TokenType LString(int quotes, string s, global::Loreline.Internal.Root.Array<object> attachments) {
			return new global::Loreline.Runtime.TokenType_LString(quotes, s, attachments);
		}
		
		
		public static global::Loreline.Runtime.TokenType LNumber(double n) {
			return new global::Loreline.Runtime.TokenType_LNumber(n);
		}
		
		
		public static global::Loreline.Runtime.TokenType LBoolean(bool b) {
			return new global::Loreline.Runtime.TokenType_LBoolean(b);
		}
		
		
		public static readonly global::Loreline.Runtime.TokenType LNull = new global::Loreline.Runtime.TokenType_LNull();
		
		public static global::Loreline.Runtime.TokenType Identifier(string name) {
			return new global::Loreline.Runtime.TokenType_Identifier(name);
		}
		
		
		public static readonly global::Loreline.Runtime.TokenType OpAssign = new global::Loreline.Runtime.TokenType_OpAssign();
		
		public static readonly global::Loreline.Runtime.TokenType OpPlusAssign = new global::Loreline.Runtime.TokenType_OpPlusAssign();
		
		public static readonly global::Loreline.Runtime.TokenType OpMinusAssign = new global::Loreline.Runtime.TokenType_OpMinusAssign();
		
		public static readonly global::Loreline.Runtime.TokenType OpMultiplyAssign = new global::Loreline.Runtime.TokenType_OpMultiplyAssign();
		
		public static readonly global::Loreline.Runtime.TokenType OpDivideAssign = new global::Loreline.Runtime.TokenType_OpDivideAssign();
		
		public static readonly global::Loreline.Runtime.TokenType OpPlus = new global::Loreline.Runtime.TokenType_OpPlus();
		
		public static readonly global::Loreline.Runtime.TokenType OpMinus = new global::Loreline.Runtime.TokenType_OpMinus();
		
		public static readonly global::Loreline.Runtime.TokenType OpMultiply = new global::Loreline.Runtime.TokenType_OpMultiply();
		
		public static readonly global::Loreline.Runtime.TokenType OpDivide = new global::Loreline.Runtime.TokenType_OpDivide();
		
		public static readonly global::Loreline.Runtime.TokenType OpModulo = new global::Loreline.Runtime.TokenType_OpModulo();
		
		public static readonly global::Loreline.Runtime.TokenType OpEquals = new global::Loreline.Runtime.TokenType_OpEquals();
		
		public static readonly global::Loreline.Runtime.TokenType OpNotEquals = new global::Loreline.Runtime.TokenType_OpNotEquals();
		
		public static readonly global::Loreline.Runtime.TokenType OpGreater = new global::Loreline.Runtime.TokenType_OpGreater();
		
		public static readonly global::Loreline.Runtime.TokenType OpLess = new global::Loreline.Runtime.TokenType_OpLess();
		
		public static readonly global::Loreline.Runtime.TokenType OpGreaterEq = new global::Loreline.Runtime.TokenType_OpGreaterEq();
		
		public static readonly global::Loreline.Runtime.TokenType OpLessEq = new global::Loreline.Runtime.TokenType_OpLessEq();
		
		public static global::Loreline.Runtime.TokenType OpAnd(bool word) {
			return new global::Loreline.Runtime.TokenType_OpAnd(word);
		}
		
		
		public static global::Loreline.Runtime.TokenType OpOr(bool word) {
			return new global::Loreline.Runtime.TokenType_OpOr(word);
		}
		
		
		public static readonly global::Loreline.Runtime.TokenType OpNot = new global::Loreline.Runtime.TokenType_OpNot();
		
		public static readonly global::Loreline.Runtime.TokenType Arrow = new global::Loreline.Runtime.TokenType_Arrow();
		
		public static readonly global::Loreline.Runtime.TokenType Colon = new global::Loreline.Runtime.TokenType_Colon();
		
		public static readonly global::Loreline.Runtime.TokenType Comma = new global::Loreline.Runtime.TokenType_Comma();
		
		public static readonly global::Loreline.Runtime.TokenType Dot = new global::Loreline.Runtime.TokenType_Dot();
		
		public static readonly global::Loreline.Runtime.TokenType LBrace = new global::Loreline.Runtime.TokenType_LBrace();
		
		public static readonly global::Loreline.Runtime.TokenType RBrace = new global::Loreline.Runtime.TokenType_RBrace();
		
		public static readonly global::Loreline.Runtime.TokenType LParen = new global::Loreline.Runtime.TokenType_LParen();
		
		public static readonly global::Loreline.Runtime.TokenType RParen = new global::Loreline.Runtime.TokenType_RParen();
		
		public static readonly global::Loreline.Runtime.TokenType LBracket = new global::Loreline.Runtime.TokenType_LBracket();
		
		public static readonly global::Loreline.Runtime.TokenType RBracket = new global::Loreline.Runtime.TokenType_RBracket();
		
		public static global::Loreline.Runtime.TokenType CommentLine(string content) {
			return new global::Loreline.Runtime.TokenType_CommentLine(content);
		}
		
		
		public static global::Loreline.Runtime.TokenType CommentMultiLine(string content) {
			return new global::Loreline.Runtime.TokenType_CommentMultiLine(content);
		}
		
		
		public static readonly global::Loreline.Runtime.TokenType Indent = new global::Loreline.Runtime.TokenType_Indent();
		
		public static readonly global::Loreline.Runtime.TokenType Unindent = new global::Loreline.Runtime.TokenType_Unindent();
		
		public static readonly global::Loreline.Runtime.TokenType LineBreak = new global::Loreline.Runtime.TokenType_LineBreak();
		
		public static readonly global::Loreline.Runtime.TokenType Eof = new global::Loreline.Runtime.TokenType_Eof();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_KwImport : global::Loreline.Runtime.TokenType {
		
		public TokenType_KwImport() : base(0) {
		}
		
		
		public override string getTag() {
			return "KwImport";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_KwState : global::Loreline.Runtime.TokenType {
		
		public TokenType_KwState() : base(1) {
		}
		
		
		public override string getTag() {
			return "KwState";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_KwBeat : global::Loreline.Runtime.TokenType {
		
		public TokenType_KwBeat() : base(2) {
		}
		
		
		public override string getTag() {
			return "KwBeat";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_KwCharacter : global::Loreline.Runtime.TokenType {
		
		public TokenType_KwCharacter() : base(3) {
		}
		
		
		public override string getTag() {
			return "KwCharacter";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_KwChoice : global::Loreline.Runtime.TokenType {
		
		public TokenType_KwChoice() : base(4) {
		}
		
		
		public override string getTag() {
			return "KwChoice";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_KwIf : global::Loreline.Runtime.TokenType {
		
		public TokenType_KwIf() : base(5) {
		}
		
		
		public override string getTag() {
			return "KwIf";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_KwElse : global::Loreline.Runtime.TokenType {
		
		public TokenType_KwElse() : base(6) {
		}
		
		
		public override string getTag() {
			return "KwElse";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_KwNew : global::Loreline.Runtime.TokenType {
		
		public TokenType_KwNew() : base(7) {
		}
		
		
		public override string getTag() {
			return "KwNew";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_LString : global::Loreline.Runtime.TokenType {
		
		public TokenType_LString(int quotes, string s, global::Loreline.Internal.Root.Array<object> attachments) : base(8) {
			this.quotes = quotes;
			this.s = s;
			this.attachments = attachments;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.quotes, this.s, this.attachments});
		}
		
		
		public override string getTag() {
			return "LString";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(8, new object[]{this.quotes, this.s, this.attachments});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.TokenType_LString en = ( other as global::Loreline.Runtime.TokenType_LString );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.quotes) ), ((object) (en.quotes) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.s) ), ((object) (en.s) ))) ) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.attachments) ), ((object) (en.attachments) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("LString", new object[]{this.quotes, this.s, this.attachments});
		}
		
		
		public readonly int quotes;
		
		public readonly string s;
		
		public readonly global::Loreline.Internal.Root.Array<object> attachments;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_LNumber : global::Loreline.Runtime.TokenType {
		
		public TokenType_LNumber(double n) : base(9) {
			this.n = n;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.n});
		}
		
		
		public override string getTag() {
			return "LNumber";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(9, new object[]{this.n});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.TokenType_LNumber en = ( other as global::Loreline.Runtime.TokenType_LNumber );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.n) ), ((object) (en.n) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("LNumber", new object[]{this.n});
		}
		
		
		public readonly double n;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_LBoolean : global::Loreline.Runtime.TokenType {
		
		public TokenType_LBoolean(bool b) : base(10) {
			this.b = b;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.b});
		}
		
		
		public override string getTag() {
			return "LBoolean";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(10, new object[]{this.b});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.TokenType_LBoolean en = ( other as global::Loreline.Runtime.TokenType_LBoolean );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.b) ), ((object) (en.b) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("LBoolean", new object[]{this.b});
		}
		
		
		public readonly bool b;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_LNull : global::Loreline.Runtime.TokenType {
		
		public TokenType_LNull() : base(11) {
		}
		
		
		public override string getTag() {
			return "LNull";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_Identifier : global::Loreline.Runtime.TokenType {
		
		public TokenType_Identifier(string name) : base(12) {
			this.name = name;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.name});
		}
		
		
		public override string getTag() {
			return "Identifier";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(12, new object[]{this.name});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.TokenType_Identifier en = ( other as global::Loreline.Runtime.TokenType_Identifier );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.name) ), ((object) (en.name) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("Identifier", new object[]{this.name});
		}
		
		
		public readonly string name;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpAssign : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpAssign() : base(13) {
		}
		
		
		public override string getTag() {
			return "OpAssign";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpPlusAssign : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpPlusAssign() : base(14) {
		}
		
		
		public override string getTag() {
			return "OpPlusAssign";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpMinusAssign : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpMinusAssign() : base(15) {
		}
		
		
		public override string getTag() {
			return "OpMinusAssign";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpMultiplyAssign : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpMultiplyAssign() : base(16) {
		}
		
		
		public override string getTag() {
			return "OpMultiplyAssign";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpDivideAssign : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpDivideAssign() : base(17) {
		}
		
		
		public override string getTag() {
			return "OpDivideAssign";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpPlus : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpPlus() : base(18) {
		}
		
		
		public override string getTag() {
			return "OpPlus";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpMinus : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpMinus() : base(19) {
		}
		
		
		public override string getTag() {
			return "OpMinus";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpMultiply : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpMultiply() : base(20) {
		}
		
		
		public override string getTag() {
			return "OpMultiply";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpDivide : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpDivide() : base(21) {
		}
		
		
		public override string getTag() {
			return "OpDivide";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpModulo : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpModulo() : base(22) {
		}
		
		
		public override string getTag() {
			return "OpModulo";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpEquals : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpEquals() : base(23) {
		}
		
		
		public override string getTag() {
			return "OpEquals";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpNotEquals : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpNotEquals() : base(24) {
		}
		
		
		public override string getTag() {
			return "OpNotEquals";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpGreater : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpGreater() : base(25) {
		}
		
		
		public override string getTag() {
			return "OpGreater";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpLess : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpLess() : base(26) {
		}
		
		
		public override string getTag() {
			return "OpLess";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpGreaterEq : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpGreaterEq() : base(27) {
		}
		
		
		public override string getTag() {
			return "OpGreaterEq";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpLessEq : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpLessEq() : base(28) {
		}
		
		
		public override string getTag() {
			return "OpLessEq";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpAnd : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpAnd(bool word) : base(29) {
			this.word = word;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.word});
		}
		
		
		public override string getTag() {
			return "OpAnd";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(29, new object[]{this.word});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.TokenType_OpAnd en = ( other as global::Loreline.Runtime.TokenType_OpAnd );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.word) ), ((object) (en.word) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("OpAnd", new object[]{this.word});
		}
		
		
		public readonly bool word;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpOr : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpOr(bool word) : base(30) {
			this.word = word;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.word});
		}
		
		
		public override string getTag() {
			return "OpOr";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(30, new object[]{this.word});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.TokenType_OpOr en = ( other as global::Loreline.Runtime.TokenType_OpOr );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.word) ), ((object) (en.word) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("OpOr", new object[]{this.word});
		}
		
		
		public readonly bool word;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_OpNot : global::Loreline.Runtime.TokenType {
		
		public TokenType_OpNot() : base(31) {
		}
		
		
		public override string getTag() {
			return "OpNot";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_Arrow : global::Loreline.Runtime.TokenType {
		
		public TokenType_Arrow() : base(32) {
		}
		
		
		public override string getTag() {
			return "Arrow";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_Colon : global::Loreline.Runtime.TokenType {
		
		public TokenType_Colon() : base(33) {
		}
		
		
		public override string getTag() {
			return "Colon";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_Comma : global::Loreline.Runtime.TokenType {
		
		public TokenType_Comma() : base(34) {
		}
		
		
		public override string getTag() {
			return "Comma";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_Dot : global::Loreline.Runtime.TokenType {
		
		public TokenType_Dot() : base(35) {
		}
		
		
		public override string getTag() {
			return "Dot";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_LBrace : global::Loreline.Runtime.TokenType {
		
		public TokenType_LBrace() : base(36) {
		}
		
		
		public override string getTag() {
			return "LBrace";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_RBrace : global::Loreline.Runtime.TokenType {
		
		public TokenType_RBrace() : base(37) {
		}
		
		
		public override string getTag() {
			return "RBrace";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_LParen : global::Loreline.Runtime.TokenType {
		
		public TokenType_LParen() : base(38) {
		}
		
		
		public override string getTag() {
			return "LParen";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_RParen : global::Loreline.Runtime.TokenType {
		
		public TokenType_RParen() : base(39) {
		}
		
		
		public override string getTag() {
			return "RParen";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_LBracket : global::Loreline.Runtime.TokenType {
		
		public TokenType_LBracket() : base(40) {
		}
		
		
		public override string getTag() {
			return "LBracket";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_RBracket : global::Loreline.Runtime.TokenType {
		
		public TokenType_RBracket() : base(41) {
		}
		
		
		public override string getTag() {
			return "RBracket";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_CommentLine : global::Loreline.Runtime.TokenType {
		
		public TokenType_CommentLine(string content) : base(42) {
			this.content = content;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.content});
		}
		
		
		public override string getTag() {
			return "CommentLine";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(42, new object[]{this.content});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.TokenType_CommentLine en = ( other as global::Loreline.Runtime.TokenType_CommentLine );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.content) ), ((object) (en.content) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("CommentLine", new object[]{this.content});
		}
		
		
		public readonly string content;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_CommentMultiLine : global::Loreline.Runtime.TokenType {
		
		public TokenType_CommentMultiLine(string content) : base(43) {
			this.content = content;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.content});
		}
		
		
		public override string getTag() {
			return "CommentMultiLine";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(43, new object[]{this.content});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Runtime.TokenType_CommentMultiLine en = ( other as global::Loreline.Runtime.TokenType_CommentMultiLine );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.content) ), ((object) (en.content) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("CommentMultiLine", new object[]{this.content});
		}
		
		
		public readonly string content;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_Indent : global::Loreline.Runtime.TokenType {
		
		public TokenType_Indent() : base(44) {
		}
		
		
		public override string getTag() {
			return "Indent";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_Unindent : global::Loreline.Runtime.TokenType {
		
		public TokenType_Unindent() : base(45) {
		}
		
		
		public override string getTag() {
			return "Unindent";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_LineBreak : global::Loreline.Runtime.TokenType {
		
		public TokenType_LineBreak() : base(46) {
		}
		
		
		public override string getTag() {
			return "LineBreak";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public sealed class TokenType_Eof : global::Loreline.Runtime.TokenType {
		
		public TokenType_Eof() : base(47) {
		}
		
		
		public override string getTag() {
			return "Eof";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class TokenTypeHelpers : global::Loreline.Internal.Lang.HxObject {
		
		public TokenTypeHelpers(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public TokenTypeHelpers() {
			global::Loreline.Runtime.TokenTypeHelpers.__hx_ctor_loreline_TokenTypeHelpers(this);
		}
		
		
		protected static void __hx_ctor_loreline_TokenTypeHelpers(global::Loreline.Runtime.TokenTypeHelpers __hx_this) {
		}
		
		
		public static bool @equals(global::Loreline.Runtime.TokenType a, global::Loreline.Runtime.TokenType b) {
			unchecked {
				switch (a._hx_index) {
					case 1:
					{
						if (( b._hx_index == 1 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 2:
					{
						if (( b._hx_index == 2 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 3:
					{
						if (( b._hx_index == 3 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 4:
					{
						if (( b._hx_index == 4 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 5:
					{
						if (( b._hx_index == 5 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 6:
					{
						if (( b._hx_index == 6 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 7:
					{
						if (( b._hx_index == 7 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 8:
					{
						string _g = ( a as global::Loreline.Runtime.TokenType_LString ).s;
						global::Loreline.Internal.Root.Array<object> _g1 = ( a as global::Loreline.Runtime.TokenType_LString ).attachments;
						if (( b._hx_index == 8 )) {
							string _g2 = ( b as global::Loreline.Runtime.TokenType_LString ).s;
							global::Loreline.Internal.Root.Array<object> _g3 = ( b as global::Loreline.Runtime.TokenType_LString ).attachments;
							int s2 = ( b as global::Loreline.Runtime.TokenType_LString ).quotes;
							int s1 = ( a as global::Loreline.Runtime.TokenType_LString ).quotes;
							return ( s1 == s2 );
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 9:
					{
						if (( b._hx_index == 9 )) {
							double n2 = ( b as global::Loreline.Runtime.TokenType_LNumber ).n;
							double n1 = ( a as global::Loreline.Runtime.TokenType_LNumber ).n;
							return ( n1 == n2 );
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 10:
					{
						if (( b._hx_index == 10 )) {
							bool b2 = ( b as global::Loreline.Runtime.TokenType_LBoolean ).b;
							bool b1 = ( a as global::Loreline.Runtime.TokenType_LBoolean ).b;
							return ( b1 == b2 );
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 11:
					{
						if (( b._hx_index == 11 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 12:
					{
						if (( b._hx_index == 12 )) {
							string n21 = ( b as global::Loreline.Runtime.TokenType_Identifier ).name;
							string n11 = ( a as global::Loreline.Runtime.TokenType_Identifier ).name;
							return ( n11 == n21 );
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 13:
					{
						if (( b._hx_index == 13 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 14:
					{
						if (( b._hx_index == 14 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 15:
					{
						if (( b._hx_index == 15 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 16:
					{
						if (( b._hx_index == 16 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 17:
					{
						if (( b._hx_index == 17 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 18:
					{
						if (( b._hx_index == 18 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 19:
					{
						if (( b._hx_index == 19 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 20:
					{
						if (( b._hx_index == 20 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 21:
					{
						if (( b._hx_index == 21 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 22:
					{
						if (( b._hx_index == 22 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 23:
					{
						if (( b._hx_index == 23 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 24:
					{
						if (( b._hx_index == 24 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 25:
					{
						if (( b._hx_index == 25 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 26:
					{
						if (( b._hx_index == 26 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 27:
					{
						if (( b._hx_index == 27 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 28:
					{
						if (( b._hx_index == 28 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 29:
					{
						bool _g4 = ( a as global::Loreline.Runtime.TokenType_OpAnd ).word;
						if (( b._hx_index == 29 )) {
							bool _g5 = ( b as global::Loreline.Runtime.TokenType_OpAnd ).word;
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 30:
					{
						bool _g6 = ( a as global::Loreline.Runtime.TokenType_OpOr ).word;
						if (( b._hx_index == 30 )) {
							bool _g7 = ( b as global::Loreline.Runtime.TokenType_OpOr ).word;
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 31:
					{
						if (( b._hx_index == 31 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 32:
					{
						if (( b._hx_index == 32 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 33:
					{
						if (( b._hx_index == 33 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 35:
					{
						if (( b._hx_index == 35 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 36:
					{
						if (( b._hx_index == 36 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 37:
					{
						if (( b._hx_index == 37 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 38:
					{
						if (( b._hx_index == 38 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 39:
					{
						if (( b._hx_index == 39 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 40:
					{
						if (( b._hx_index == 40 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 41:
					{
						if (( b._hx_index == 41 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 42:
					{
						if (( b._hx_index == 42 )) {
							string c2 = ( b as global::Loreline.Runtime.TokenType_CommentLine ).content;
							string c1 = ( a as global::Loreline.Runtime.TokenType_CommentLine ).content;
							return ( c1 == c2 );
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 43:
					{
						if (( b._hx_index == 43 )) {
							string c21 = ( b as global::Loreline.Runtime.TokenType_CommentMultiLine ).content;
							string c11 = ( a as global::Loreline.Runtime.TokenType_CommentMultiLine ).content;
							return ( c11 == c21 );
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 44:
					{
						if (( b._hx_index == 44 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 45:
					{
						if (( b._hx_index == 45 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 46:
					{
						if (( b._hx_index == 46 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					case 47:
					{
						if (( b._hx_index == 47 )) {
							return true;
						}
						else {
							return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
						}
						
					}
					
					
					default:
					{
						return global::Loreline.Internal.Root.Type.enumEq<object>(((object) (a) ), ((object) (b) ));
					}
					
				}
				
			}
		}
		
		
		public static bool isComment(global::Loreline.Runtime.TokenType a) {
			unchecked {
				switch (a._hx_index) {
					case 42:
					{
						string _g = ( a as global::Loreline.Runtime.TokenType_CommentLine ).content;
						return true;
					}
					
					
					case 43:
					{
						string _g1 = ( a as global::Loreline.Runtime.TokenType_CommentMultiLine ).content;
						return true;
					}
					
					
					default:
					{
						return false;
					}
					
				}
				
			}
		}
		
		
		public static bool isAssignOp(global::Loreline.Runtime.TokenType a) {
			unchecked {
				switch (a._hx_index) {
					case 13:
					case 14:
					case 15:
					case 16:
					case 17:
					{
						return true;
					}
					
					
					default:
					{
						return false;
					}
					
				}
				
			}
		}
		
		
		public static bool isIdentifier(global::Loreline.Runtime.TokenType a) {
			unchecked {
				if (( a._hx_index == 12 )) {
					string _g = ( a as global::Loreline.Runtime.TokenType_Identifier ).name;
					return true;
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public static bool isBlockStart(global::Loreline.Runtime.TokenType a) {
			unchecked {
				switch (a._hx_index) {
					case 1:
					case 2:
					case 3:
					case 4:
					case 5:
					{
						return true;
					}
					
					
					default:
					{
						return false;
					}
					
				}
				
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Token : global::Loreline.Internal.Lang.HxObject {
		
		public Token(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public Token(global::Loreline.Runtime.TokenType type, global::Loreline.Runtime.Position pos) {
			global::Loreline.Runtime.Token.__hx_ctor_loreline_Token(this, type, pos);
		}
		
		
		protected static void __hx_ctor_loreline_Token(global::Loreline.Runtime.Token __hx_this, global::Loreline.Runtime.TokenType type, global::Loreline.Runtime.Position pos) {
			__hx_this.type = type;
			__hx_this.pos = pos;
		}
		
		
		public global::Loreline.Runtime.TokenType type;
		
		public global::Loreline.Runtime.Position pos;
		
		public virtual string toString() {
			return global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat(global::Loreline.Internal.Lang.Runtime.concat("", global::Loreline.Internal.Root.Std.@string(this.type)), " at "), this.pos.toString());
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5594516:
					{
						this.pos = ((global::Loreline.Runtime.Position) (@value) );
						return @value;
					}
					
					
					case 1292432058:
					{
						this.type = ((global::Loreline.Runtime.TokenType) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 946786476:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "toString", 946786476)) );
					}
					
					
					case 5594516:
					{
						return this.pos;
					}
					
					
					case 1292432058:
					{
						return this.type;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 946786476:
					{
						return this.toString();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("pos");
			baseArr.push("type");
			base.__hx_getFields(baseArr);
		}
		
		
		public override string ToString(){
			return this.toString();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Runtime {
	public class Lexer : global::Loreline.Internal.Lang.HxObject {
		
		static Lexer() {
			global::Loreline.Runtime.Lexer.hasNonSpecialChar_specialChars = " \t\"+=*/-(){}[]:\n\r";
			object __temp_stmt2 = null;
			{
				global::Loreline.Internal.Ds.StringMap<object> _g = new global::Loreline.Internal.Ds.StringMap<object>();
				_g.@set("import", global::Loreline.Runtime.TokenType.KwImport);
				_g.@set("state", global::Loreline.Runtime.TokenType.KwState);
				_g.@set("beat", global::Loreline.Runtime.TokenType.KwBeat);
				_g.@set("character", global::Loreline.Runtime.TokenType.KwCharacter);
				_g.@set("choice", global::Loreline.Runtime.TokenType.KwChoice);
				_g.@set("if", global::Loreline.Runtime.TokenType.KwIf);
				_g.@set("else", global::Loreline.Runtime.TokenType.KwElse);
				_g.@set("new", global::Loreline.Runtime.TokenType.KwNew);
				_g.@set("true", global::Loreline.Runtime.TokenType.LBoolean(true));
				_g.@set("false", global::Loreline.Runtime.TokenType.LBoolean(false));
				_g.@set("null", global::Loreline.Runtime.TokenType.LNull);
				_g.@set("and", global::Loreline.Runtime.TokenType.OpAnd(true));
				_g.@set("or", global::Loreline.Runtime.TokenType.OpOr(true));
				__temp_stmt2 = _g;
			}
			
			object __temp_stmt1 = global::Loreline.Internal.Ds.StringMap<object>.__hx_cast<object>(((global::Loreline.Internal.Ds.StringMap) (__temp_stmt2) ));
			global::Loreline.Runtime.Lexer.KEYWORDS = ((global::Loreline.Internal.Ds.StringMap<object>) (__temp_stmt1) );
		}
		
		
		public Lexer(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public Lexer(string input) {
			global::Loreline.Runtime.Lexer.__hx_ctor_loreline_Lexer(this, input);
		}
		
		
		protected static void __hx_ctor_loreline_Lexer(global::Loreline.Runtime.Lexer __hx_this, string input) {
			unchecked {
				__hx_this.errors = null;
				__hx_this.allowTabs = true;
				__hx_this.indentSize = 4;
				__hx_this.indentTokens = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				__hx_this.indentStack = new global::Loreline.Internal.Root.Array<int>(new int[]{});
				__hx_this.indentLevel = 0;
				{
					__hx_this.input = input;
					__hx_this.length = input.Length;
					__hx_this.reset();
				}
				
			}
		}
		
		
		public static string hasNonSpecialChar_specialChars;
		
		public static global::Loreline.Internal.Ds.StringMap<object> KEYWORDS;
		
		public static int compareAttachments(global::Loreline.Runtime.LStringAttachment l, global::Loreline.Runtime.LStringAttachment r) {
			unchecked {
				int lStart = default(int);
				switch (l._hx_index) {
					case 0:
					{
						bool _g = ( l as global::Loreline.Runtime.LStringAttachment_Interpolation ).braces;
						bool _g1 = ( l as global::Loreline.Runtime.LStringAttachment_Interpolation ).inTag;
						global::Loreline.Internal.Root.Array<object> _g2 = ( l as global::Loreline.Runtime.LStringAttachment_Interpolation ).expr;
						int _g3 = ( l as global::Loreline.Runtime.LStringAttachment_Interpolation ).length;
						int start = ( l as global::Loreline.Runtime.LStringAttachment_Interpolation ).start;
						lStart = start;
						break;
					}
					
					
					case 1:
					{
						bool _g4 = ( l as global::Loreline.Runtime.LStringAttachment_Tag ).closing;
						int _g5 = ( l as global::Loreline.Runtime.LStringAttachment_Tag ).length;
						int start1 = ( l as global::Loreline.Runtime.LStringAttachment_Tag ).start;
						lStart = start1;
						break;
					}
					
					
				}
				
				int rStart = default(int);
				switch (r._hx_index) {
					case 0:
					{
						bool _g6 = ( r as global::Loreline.Runtime.LStringAttachment_Interpolation ).braces;
						bool _g7 = ( r as global::Loreline.Runtime.LStringAttachment_Interpolation ).inTag;
						global::Loreline.Internal.Root.Array<object> _g8 = ( r as global::Loreline.Runtime.LStringAttachment_Interpolation ).expr;
						int _g9 = ( r as global::Loreline.Runtime.LStringAttachment_Interpolation ).length;
						int start2 = ( r as global::Loreline.Runtime.LStringAttachment_Interpolation ).start;
						rStart = start2;
						break;
					}
					
					
					case 1:
					{
						bool _g10 = ( r as global::Loreline.Runtime.LStringAttachment_Tag ).closing;
						int _g11 = ( r as global::Loreline.Runtime.LStringAttachment_Tag ).length;
						int start3 = ( r as global::Loreline.Runtime.LStringAttachment_Tag ).start;
						rStart = start3;
						break;
					}
					
					
				}
				
				return ( lStart - rStart );
			}
		}
		
		
		public string input;
		
		public int pos;
		
		public int length;
		
		public int line;
		
		public int column;
		
		public int startLine;
		
		public int startColumn;
		
		public global::Loreline.Runtime.Token previous;
		
		public global::Loreline.Internal.Root.Array<object> tokenized;
		
		public global::Loreline.Internal.Root.Array<int> stack;
		
		public int nextBlock;
		
		public global::Loreline.Internal.Root.Array<int> strictExprs;
		
		public int indentLevel;
		
		public global::Loreline.Internal.Root.Array<int> indentStack;
		
		public global::Loreline.Internal.Root.Array<object> indentTokens;
		
		public int indentSize;
		
		public bool allowTabs;
		
		public global::Loreline.Internal.Root.Array<object> errors;
		
		public virtual void reset() {
			unchecked {
				this.pos = 0;
				this.line = 1;
				this.column = 1;
				this.startLine = 1;
				this.startColumn = 1;
				this.previous = null;
				this.stack = new global::Loreline.Internal.Root.Array<int>(new int[]{});
				this.nextBlock = ((int) (8) );
				this.tokenized = null;
				this.strictExprs = new global::Loreline.Internal.Root.Array<int>(new int[]{});
				this.indentLevel = 0;
				this.indentStack = new global::Loreline.Internal.Root.Array<int>(new int[]{0});
				this.indentTokens = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			}
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> tokenize() {
			unchecked {
				global::Loreline.Internal.Root.Array<object> tokens = new global::Loreline.Internal.Root.Array<object>(new object[]{});
				this.tokenized = tokens;
				while (true) {
					global::Loreline.Runtime.Token token = this.nextToken();
					if (( token.type == global::Loreline.Runtime.TokenType.Eof )) {
						if (( this.indentStack.length > 1 )) {
							int count = ( this.indentStack.length - 1 );
							{
								int _g = 0;
								int _g1 = count;
								while (( _g < _g1 )) {
									int _ = _g++;
									global::Loreline.Runtime.Position position = null;
									if (( position == null )) {
										position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
									}
									
									position.length = ( this.pos - position.offset );
									global::Loreline.Runtime.Token token1 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Unindent) ), ((global::Loreline.Runtime.Position) (position) ));
									this.previous = token1;
									tokens.push(token1);
								}
								
							}
							
						}
						
						break;
					}
					
					tokens.push(token);
					switch (token.type._hx_index) {
						case 1:
						{
							this.nextBlock = ((int) (3) );
							break;
						}
						
						
						case 2:
						{
							this.nextBlock = ((int) (7) );
							break;
						}
						
						
						case 3:
						{
							this.nextBlock = ((int) (5) );
							break;
						}
						
						
						case 4:
						{
							this.nextBlock = ((int) (1) );
							break;
						}
						
						
						case 36:
						{
							int tmp = default(int);
							switch (this.nextBlock) {
								case 0:
								case 1:
								{
									tmp = ((int) (0) );
									break;
								}
								
								
								case 2:
								case 3:
								{
									tmp = ((int) (2) );
									break;
								}
								
								
								case 4:
								case 5:
								{
									tmp = ((int) (4) );
									break;
								}
								
								
								case 6:
								case 7:
								{
									tmp = ((int) (7) );
									break;
								}
								
								
								case 8:
								case 9:
								case 10:
								{
									tmp = ((int) (8) );
									break;
								}
								
								
							}
							
							this.stack.push(tmp);
							this.nextBlock = ((int) (8) );
							break;
						}
						
						
						case 40:
						{
							this.stack.push(((int) (10) ));
							this.nextBlock = ((int) (8) );
							break;
						}
						
						
						case 37:
						case 41:
						case 45:
						{
							this.stack.pop();
							this.nextBlock = ((int) (8) );
							break;
						}
						
						
						case 44:
						{
							int tmp1 = default(int);
							switch (this.nextBlock) {
								case 0:
								case 1:
								{
									tmp1 = ((int) (1) );
									break;
								}
								
								
								case 2:
								case 3:
								{
									tmp1 = ((int) (3) );
									break;
								}
								
								
								case 4:
								case 5:
								{
									tmp1 = ((int) (5) );
									break;
								}
								
								
								case 6:
								case 7:
								{
									tmp1 = ((int) (7) );
									break;
								}
								
								
								case 8:
								case 9:
								case 10:
								{
									tmp1 = ((int) (9) );
									break;
								}
								
								
							}
							
							this.stack.push(tmp1);
							this.nextBlock = ((int) (8) );
							break;
						}
						
						
						default:
						{
							break;
						}
						
					}
					
				}
				
				return tokens;
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token nextToken() {
			unchecked {
				if (( this.indentTokens.length > 0 )) {
					return ((global::Loreline.Runtime.Token) ((this.indentTokens.shift()).@value) );
				}
				
				this.skipWhitespace();
				if (( this.pos >= this.length )) {
					global::Loreline.Runtime.Position position = null;
					if (( position == null )) {
						position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
					}
					
					position.length = ( this.pos - position.offset );
					global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Eof) ), ((global::Loreline.Runtime.Position) (position) ));
					this.previous = token;
					return token;
				}
				
				this.startLine = this.line;
				this.startColumn = this.column;
				global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
				if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 10) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 13) )) {
					global::Loreline.Runtime.Token lineBreakToken = this.readLineBreak();
					int currentIndent = this.countIndentation();
					if (( currentIndent > this.indentStack[( this.indentStack.length - 1 )] )) {
						this.indentStack.push(currentIndent);
						global::Loreline.Internal.Root.Array<object> tmp = this.indentTokens;
						global::Loreline.Runtime.Position position1 = null;
						if (( position1 == null )) {
							position1 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
						}
						
						position1.length = ( this.pos - position1.offset );
						global::Loreline.Runtime.Token token1 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Indent) ), ((global::Loreline.Runtime.Position) (position1) ));
						this.previous = token1;
						tmp.push(token1);
					}
					else if (( currentIndent < this.indentStack[( this.indentStack.length - 1 )] )) {
						while (( ( this.indentStack.length > 0 ) && ( currentIndent < this.indentStack[( this.indentStack.length - 1 )] ) )) {
							this.indentStack.pop();
							global::Loreline.Internal.Root.Array<object> tmp1 = this.indentTokens;
							global::Loreline.Runtime.Position position2 = null;
							if (( position2 == null )) {
								position2 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
							}
							
							position2.length = ( this.pos - position2.offset );
							global::Loreline.Runtime.Token token2 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Unindent) ), ((global::Loreline.Runtime.Position) (position2) ));
							this.previous = token2;
							tmp1.push(token2);
						}
						
					}
					
					return lineBreakToken;
				}
				
				global::Loreline.Runtime.Position startPos = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				if ( ! (c.hasValue) ) {
					global::Loreline.Runtime.Token tmp2 = this.tryReadUnquotedString();
					if (( tmp2 != null )) {
						return tmp2;
					}
					else if ( ! (c.hasValue) ) {
						global::Loreline.Internal.Lang.Null<int> c1 = c;
						int c2 = (c1).@value;
						if (( ( c2 >= 48 ) && ( c2 <= 57 ) )) {
							return this.readNumber();
						}
						else {
							global::Loreline.Internal.Lang.Null<int> c3 = c;
							int c4 = (c3).@value;
							if (( ( ( ( c4 >= 97 ) && ( c4 <= 122 ) ) || ( ( c4 >= 65 ) && ( c4 <= 90 ) ) ) || ( c4 == 95 ) )) {
								return this.readIdentifier();
							}
							else {
								this.error(global::Loreline.Internal.Lang.Runtime.concat("Unexpected character: ", global::Loreline.Internal.Lang.StringExt.fromCharCode((c).@value)), true);
								return null;
							}
							
						}
						
					}
					else {
						switch (((c)).@value) {
							case 33:
							{
								global::Loreline.Internal.Lang.Null<int> c5 = c;
								int c6 = (c5).@value;
								if (( ( c6 >= 48 ) && ( c6 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c7 = c;
									int c8 = (c7).@value;
									if (( ( ( ( c8 >= 97 ) && ( c8 <= 122 ) ) || ( ( c8 >= 65 ) && ( c8 <= 90 ) ) ) || ( c8 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset = 1;
										if (( (( (( ( this.pos + offset ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset ))).@value) : (0) )) == 61 )) {
											{
												int count = 2;
												while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position3 = startPos;
											if (( position3 == null )) {
												position3 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position3.length = ( this.pos - position3.offset );
											global::Loreline.Runtime.Token token3 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpNotEquals) ), ((global::Loreline.Runtime.Position) (position3) ));
											this.previous = token3;
											return token3;
										}
										else {
											{
												int count1 = 1;
												while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position4 = startPos;
											if (( position4 == null )) {
												position4 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position4.length = ( this.pos - position4.offset );
											global::Loreline.Runtime.Token token4 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpNot) ), ((global::Loreline.Runtime.Position) (position4) ));
											this.previous = token4;
											return token4;
										}
										
									}
									
								}
								
							}
							
							
							case 37:
							{
								global::Loreline.Internal.Lang.Null<int> c9 = c;
								int c10 = (c9).@value;
								if (( ( c10 >= 48 ) && ( c10 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c11 = c;
									int c12 = (c11).@value;
									if (( ( ( ( c12 >= 97 ) && ( c12 <= 122 ) ) || ( ( c12 >= 65 ) && ( c12 <= 90 ) ) ) || ( c12 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										{
											int count2 = 1;
											while (( ( count2-- > 0 ) && ( this.pos < this.length ) )) {
												if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
													this.line++;
													this.column = 1;
												}
												else {
													this.column++;
												}
												
												this.pos++;
											}
											
										}
										
										global::Loreline.Runtime.Position position5 = startPos;
										if (( position5 == null )) {
											position5 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
										}
										
										position5.length = ( this.pos - position5.offset );
										global::Loreline.Runtime.Token token5 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpModulo) ), ((global::Loreline.Runtime.Position) (position5) ));
										this.previous = token5;
										return token5;
									}
									
								}
								
							}
							
							
							case 38:
							{
								global::Loreline.Internal.Lang.Null<int> c13 = c;
								int c14 = (c13).@value;
								if (( ( c14 >= 48 ) && ( c14 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c15 = c;
									int c16 = (c15).@value;
									if (( ( ( ( c16 >= 97 ) && ( c16 <= 122 ) ) || ( ( c16 >= 65 ) && ( c16 <= 90 ) ) ) || ( c16 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset1 = 1;
										if (( (( (( ( this.pos + offset1 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset1 ))).@value) : (0) )) == 38 )) {
											{
												int count3 = 2;
												while (( ( count3-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position6 = startPos;
											if (( position6 == null )) {
												position6 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position6.length = ( this.pos - position6.offset );
											global::Loreline.Runtime.Token token6 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpAnd(false)) ), ((global::Loreline.Runtime.Position) (position6) ));
											this.previous = token6;
											return token6;
										}
										else {
											{
												int count4 = 1;
												while (( ( count4-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											this.error("Expected &", false);
											global::Loreline.Runtime.Position position7 = startPos;
											if (( position7 == null )) {
												position7 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position7.length = ( this.pos - position7.offset );
											global::Loreline.Runtime.Token token7 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpAnd(false)) ), ((global::Loreline.Runtime.Position) (position7) ));
											this.previous = token7;
											return token7;
										}
										
									}
									
								}
								
							}
							
							
							case 40:
							{
								{
									int count5 = 1;
									while (( ( count5-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								this.makeStrictIfFollowingCallable();
								global::Loreline.Runtime.Position position8 = startPos;
								if (( position8 == null )) {
									position8 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								}
								
								position8.length = ( this.pos - position8.offset );
								global::Loreline.Runtime.Token token8 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LParen) ), ((global::Loreline.Runtime.Position) (position8) ));
								this.previous = token8;
								return token8;
							}
							
							
							case 41:
							{
								{
									int count6 = 1;
									while (( ( count6-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								this.strictExprs.pop();
								global::Loreline.Runtime.Position position9 = startPos;
								if (( position9 == null )) {
									position9 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								}
								
								position9.length = ( this.pos - position9.offset );
								global::Loreline.Runtime.Token token9 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.RParen) ), ((global::Loreline.Runtime.Position) (position9) ));
								this.previous = token9;
								return token9;
							}
							
							
							case 42:
							{
								global::Loreline.Internal.Lang.Null<int> c17 = c;
								int c18 = (c17).@value;
								if (( ( c18 >= 48 ) && ( c18 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c19 = c;
									int c20 = (c19).@value;
									if (( ( ( ( c20 >= 97 ) && ( c20 <= 122 ) ) || ( ( c20 >= 65 ) && ( c20 <= 90 ) ) ) || ( c20 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset2 = 1;
										if (( (( (( ( this.pos + offset2 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset2 ))).@value) : (0) )) == 61 )) {
											{
												int count7 = 2;
												while (( ( count7-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position10 = startPos;
											if (( position10 == null )) {
												position10 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position10.length = ( this.pos - position10.offset );
											global::Loreline.Runtime.Token token10 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpMultiplyAssign) ), ((global::Loreline.Runtime.Position) (position10) ));
											this.previous = token10;
											return token10;
										}
										else {
											{
												int count8 = 1;
												while (( ( count8-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position11 = startPos;
											if (( position11 == null )) {
												position11 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position11.length = ( this.pos - position11.offset );
											global::Loreline.Runtime.Token token11 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpMultiply) ), ((global::Loreline.Runtime.Position) (position11) ));
											this.previous = token11;
											return token11;
										}
										
									}
									
								}
								
							}
							
							
							case 43:
							{
								global::Loreline.Internal.Lang.Null<int> c21 = c;
								int c22 = (c21).@value;
								if (( ( c22 >= 48 ) && ( c22 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c23 = c;
									int c24 = (c23).@value;
									if (( ( ( ( c24 >= 97 ) && ( c24 <= 122 ) ) || ( ( c24 >= 65 ) && ( c24 <= 90 ) ) ) || ( c24 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset3 = 1;
										if (( (( (( ( this.pos + offset3 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset3 ))).@value) : (0) )) == 61 )) {
											{
												int count9 = 2;
												while (( ( count9-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position12 = startPos;
											if (( position12 == null )) {
												position12 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position12.length = ( this.pos - position12.offset );
											global::Loreline.Runtime.Token token12 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpPlusAssign) ), ((global::Loreline.Runtime.Position) (position12) ));
											this.previous = token12;
											return token12;
										}
										else {
											{
												int count10 = 1;
												while (( ( count10-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position13 = startPos;
											if (( position13 == null )) {
												position13 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position13.length = ( this.pos - position13.offset );
											global::Loreline.Runtime.Token token13 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpPlus) ), ((global::Loreline.Runtime.Position) (position13) ));
											this.previous = token13;
											return token13;
										}
										
									}
									
								}
								
							}
							
							
							case 44:
							{
								{
									int count11 = 1;
									while (( ( count11-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								global::Loreline.Runtime.Position position14 = startPos;
								if (( position14 == null )) {
									position14 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								}
								
								position14.length = ( this.pos - position14.offset );
								global::Loreline.Runtime.Token token14 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Comma) ), ((global::Loreline.Runtime.Position) (position14) ));
								this.previous = token14;
								return token14;
							}
							
							
							case 45:
							{
								global::Loreline.Internal.Lang.Null<int> c25 = c;
								int c26 = (c25).@value;
								if (( ( c26 >= 48 ) && ( c26 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c27 = c;
									int c28 = (c27).@value;
									if (( ( ( ( c28 >= 97 ) && ( c28 <= 122 ) ) || ( ( c28 >= 65 ) && ( c28 <= 90 ) ) ) || ( c28 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset4 = 1;
										if (( (( (( ( this.pos + offset4 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset4 ))).@value) : (0) )) == 62 )) {
											{
												int count12 = 2;
												while (( ( count12-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position15 = startPos;
											if (( position15 == null )) {
												position15 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position15.length = ( this.pos - position15.offset );
											global::Loreline.Runtime.Token token15 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Arrow) ), ((global::Loreline.Runtime.Position) (position15) ));
											this.previous = token15;
											return token15;
										}
										else {
											int offset5 = 1;
											if (( (( (( ( this.pos + offset5 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset5 ))).@value) : (0) )) == 61 )) {
												{
													int count13 = 2;
													while (( ( count13-- > 0 ) && ( this.pos < this.length ) )) {
														if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
															this.line++;
															this.column = 1;
														}
														else {
															this.column++;
														}
														
														this.pos++;
													}
													
												}
												
												global::Loreline.Runtime.Position position16 = startPos;
												if (( position16 == null )) {
													position16 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
												}
												
												position16.length = ( this.pos - position16.offset );
												global::Loreline.Runtime.Token token16 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpMinusAssign) ), ((global::Loreline.Runtime.Position) (position16) ));
												this.previous = token16;
												return token16;
											}
											else {
												{
													int count14 = 1;
													while (( ( count14-- > 0 ) && ( this.pos < this.length ) )) {
														if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
															this.line++;
															this.column = 1;
														}
														else {
															this.column++;
														}
														
														this.pos++;
													}
													
												}
												
												global::Loreline.Runtime.Position position17 = startPos;
												if (( position17 == null )) {
													position17 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
												}
												
												position17.length = ( this.pos - position17.offset );
												global::Loreline.Runtime.Token token17 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpMinus) ), ((global::Loreline.Runtime.Position) (position17) ));
												this.previous = token17;
												return token17;
											}
											
										}
										
									}
									
								}
								
							}
							
							
							case 46:
							{
								{
									int count15 = 1;
									while (( ( count15-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								global::Loreline.Runtime.Position position18 = startPos;
								if (( position18 == null )) {
									position18 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								}
								
								position18.length = ( this.pos - position18.offset );
								global::Loreline.Runtime.Token token18 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Dot) ), ((global::Loreline.Runtime.Position) (position18) ));
								this.previous = token18;
								return token18;
							}
							
							
							case 47:
							{
								global::Loreline.Internal.Lang.Null<int> c29 = c;
								int c30 = (c29).@value;
								if (( ( c30 >= 48 ) && ( c30 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c31 = c;
									int c32 = (c31).@value;
									if (( ( ( ( c32 >= 97 ) && ( c32 <= 122 ) ) || ( ( c32 >= 65 ) && ( c32 <= 90 ) ) ) || ( c32 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset6 = 1;
										if (( (( (( ( this.pos + offset6 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset6 ))).@value) : (0) )) == 61 )) {
											{
												int count16 = 2;
												while (( ( count16-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position19 = startPos;
											if (( position19 == null )) {
												position19 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position19.length = ( this.pos - position19.offset );
											global::Loreline.Runtime.Token token19 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpDivideAssign) ), ((global::Loreline.Runtime.Position) (position19) ));
											this.previous = token19;
											return token19;
										}
										else {
											int offset7 = 1;
											if (( (( (( ( this.pos + offset7 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset7 ))).@value) : (0) )) == 47 )) {
												return this.readLineComment();
											}
											else {
												int offset8 = 1;
												if (( (( (( ( this.pos + offset8 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset8 ))).@value) : (0) )) == 42 )) {
													return this.readMultiLineComment();
												}
												else {
													{
														int count17 = 1;
														while (( ( count17-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position20 = startPos;
													if (( position20 == null )) {
														position20 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position20.length = ( this.pos - position20.offset );
													global::Loreline.Runtime.Token token20 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpDivide) ), ((global::Loreline.Runtime.Position) (position20) ));
													this.previous = token20;
													return token20;
												}
												
											}
											
										}
										
									}
									
								}
								
							}
							
							
							case 58:
							{
								{
									int count18 = 1;
									while (( ( count18-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								global::Loreline.Runtime.Position position21 = startPos;
								if (( position21 == null )) {
									position21 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								}
								
								position21.length = ( this.pos - position21.offset );
								global::Loreline.Runtime.Token token21 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Colon) ), ((global::Loreline.Runtime.Position) (position21) ));
								this.previous = token21;
								return token21;
							}
							
							
							case 60:
							{
								global::Loreline.Internal.Lang.Null<int> c33 = c;
								int c34 = (c33).@value;
								if (( ( c34 >= 48 ) && ( c34 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c35 = c;
									int c36 = (c35).@value;
									if (( ( ( ( c36 >= 97 ) && ( c36 <= 122 ) ) || ( ( c36 >= 65 ) && ( c36 <= 90 ) ) ) || ( c36 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset9 = 1;
										if (( (( (( ( this.pos + offset9 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset9 ))).@value) : (0) )) == 61 )) {
											{
												int count19 = 2;
												while (( ( count19-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position22 = startPos;
											if (( position22 == null )) {
												position22 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position22.length = ( this.pos - position22.offset );
											global::Loreline.Runtime.Token token22 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpLessEq) ), ((global::Loreline.Runtime.Position) (position22) ));
											this.previous = token22;
											return token22;
										}
										else {
											{
												int count20 = 1;
												while (( ( count20-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position23 = startPos;
											if (( position23 == null )) {
												position23 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position23.length = ( this.pos - position23.offset );
											global::Loreline.Runtime.Token token23 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpLess) ), ((global::Loreline.Runtime.Position) (position23) ));
											this.previous = token23;
											return token23;
										}
										
									}
									
								}
								
							}
							
							
							case 61:
							{
								global::Loreline.Internal.Lang.Null<int> c37 = c;
								int c38 = (c37).@value;
								if (( ( c38 >= 48 ) && ( c38 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c39 = c;
									int c40 = (c39).@value;
									if (( ( ( ( c40 >= 97 ) && ( c40 <= 122 ) ) || ( ( c40 >= 65 ) && ( c40 <= 90 ) ) ) || ( c40 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset10 = 1;
										if (( (( (( ( this.pos + offset10 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset10 ))).@value) : (0) )) == 61 )) {
											{
												int count21 = 2;
												while (( ( count21-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position24 = startPos;
											if (( position24 == null )) {
												position24 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position24.length = ( this.pos - position24.offset );
											global::Loreline.Runtime.Token token24 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpEquals) ), ((global::Loreline.Runtime.Position) (position24) ));
											this.previous = token24;
											return token24;
										}
										else {
											{
												int count22 = 1;
												while (( ( count22-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position25 = startPos;
											if (( position25 == null )) {
												position25 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position25.length = ( this.pos - position25.offset );
											global::Loreline.Runtime.Token token25 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpAssign) ), ((global::Loreline.Runtime.Position) (position25) ));
											this.previous = token25;
											return token25;
										}
										
									}
									
								}
								
							}
							
							
							case 62:
							{
								global::Loreline.Internal.Lang.Null<int> c41 = c;
								int c42 = (c41).@value;
								if (( ( c42 >= 48 ) && ( c42 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c43 = c;
									int c44 = (c43).@value;
									if (( ( ( ( c44 >= 97 ) && ( c44 <= 122 ) ) || ( ( c44 >= 65 ) && ( c44 <= 90 ) ) ) || ( c44 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset11 = 1;
										if (( (( (( ( this.pos + offset11 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset11 ))).@value) : (0) )) == 61 )) {
											{
												int count23 = 2;
												while (( ( count23-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position26 = startPos;
											if (( position26 == null )) {
												position26 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position26.length = ( this.pos - position26.offset );
											global::Loreline.Runtime.Token token26 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpGreaterEq) ), ((global::Loreline.Runtime.Position) (position26) ));
											this.previous = token26;
											return token26;
										}
										else {
											{
												int count24 = 1;
												while (( ( count24-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position27 = startPos;
											if (( position27 == null )) {
												position27 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position27.length = ( this.pos - position27.offset );
											global::Loreline.Runtime.Token token27 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpGreater) ), ((global::Loreline.Runtime.Position) (position27) ));
											this.previous = token27;
											return token27;
										}
										
									}
									
								}
								
							}
							
							
							case 93:
							{
								{
									int count25 = 1;
									while (( ( count25-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								this.strictExprs.pop();
								global::Loreline.Runtime.Position position28 = startPos;
								if (( position28 == null )) {
									position28 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								}
								
								position28.length = ( this.pos - position28.offset );
								global::Loreline.Runtime.Token token28 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.RBracket) ), ((global::Loreline.Runtime.Position) (position28) ));
								this.previous = token28;
								return token28;
							}
							
							
							case 124:
							{
								global::Loreline.Internal.Lang.Null<int> c45 = c;
								int c46 = (c45).@value;
								if (( ( c46 >= 48 ) && ( c46 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c47 = c;
									int c48 = (c47).@value;
									if (( ( ( ( c48 >= 97 ) && ( c48 <= 122 ) ) || ( ( c48 >= 65 ) && ( c48 <= 90 ) ) ) || ( c48 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										int offset12 = 1;
										if (( (( (( ( this.pos + offset12 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset12 ))).@value) : (0) )) == 124 )) {
											{
												int count26 = 2;
												while (( ( count26-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											global::Loreline.Runtime.Position position29 = startPos;
											if (( position29 == null )) {
												position29 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position29.length = ( this.pos - position29.offset );
											global::Loreline.Runtime.Token token29 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpOr(false)) ), ((global::Loreline.Runtime.Position) (position29) ));
											this.previous = token29;
											return token29;
										}
										else {
											{
												int count27 = 1;
												while (( ( count27-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											this.error("Expected |", false);
											global::Loreline.Runtime.Position position30 = startPos;
											if (( position30 == null )) {
												position30 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
											}
											
											position30.length = ( this.pos - position30.offset );
											global::Loreline.Runtime.Token token30 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpOr(false)) ), ((global::Loreline.Runtime.Position) (position30) ));
											this.previous = token30;
											return token30;
										}
										
									}
									
								}
								
							}
							
							
							default:
							{
								global::Loreline.Internal.Lang.Null<int> c49 = c;
								int c50 = (c49).@value;
								if (( ( c50 >= 48 ) && ( c50 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c51 = c;
									int c52 = (c51).@value;
									if (( ( ( ( c52 >= 97 ) && ( c52 <= 122 ) ) || ( ( c52 >= 65 ) && ( c52 <= 90 ) ) ) || ( c52 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										this.error(global::Loreline.Internal.Lang.Runtime.concat("Unexpected character: ", global::Loreline.Internal.Lang.StringExt.fromCharCode((c).@value)), true);
										return null;
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				else {
					switch (((c)).@value) {
						case 34:
						{
							return this.readString(startPos);
						}
						
						
						case 91:
						{
							{
								int count28 = 1;
								while (( ( count28-- > 0 ) && ( this.pos < this.length ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
										this.line++;
										this.column = 1;
									}
									else {
										this.column++;
									}
									
									this.pos++;
								}
								
							}
							
							this.makeLooseOrStrictAfterBracket();
							global::Loreline.Runtime.Position position31 = startPos;
							if (( position31 == null )) {
								position31 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
							}
							
							position31.length = ( this.pos - position31.offset );
							global::Loreline.Runtime.Token token31 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LBracket) ), ((global::Loreline.Runtime.Position) (position31) ));
							this.previous = token31;
							return token31;
						}
						
						
						case 123:
						{
							{
								int count29 = 1;
								while (( ( count29-- > 0 ) && ( this.pos < this.length ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
										this.line++;
										this.column = 1;
									}
									else {
										this.column++;
									}
									
									this.pos++;
								}
								
							}
							
							global::Loreline.Runtime.Position position32 = startPos;
							if (( position32 == null )) {
								position32 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
							}
							
							position32.length = ( this.pos - position32.offset );
							global::Loreline.Runtime.Token token32 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LBrace) ), ((global::Loreline.Runtime.Position) (position32) ));
							this.previous = token32;
							return token32;
						}
						
						
						case 125:
						{
							{
								int count30 = 1;
								while (( ( count30-- > 0 ) && ( this.pos < this.length ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
										this.line++;
										this.column = 1;
									}
									else {
										this.column++;
									}
									
									this.pos++;
								}
								
							}
							
							global::Loreline.Runtime.Position position33 = startPos;
							if (( position33 == null )) {
								position33 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
							}
							
							position33.length = ( this.pos - position33.offset );
							global::Loreline.Runtime.Token token33 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.RBrace) ), ((global::Loreline.Runtime.Position) (position33) ));
							this.previous = token33;
							return token33;
						}
						
						
						default:
						{
							global::Loreline.Runtime.Token tmp3 = this.tryReadUnquotedString();
							if (( tmp3 != null )) {
								return tmp3;
							}
							else if ( ! (c.hasValue) ) {
								global::Loreline.Internal.Lang.Null<int> c53 = c;
								int c54 = (c53).@value;
								if (( ( c54 >= 48 ) && ( c54 <= 57 ) )) {
									return this.readNumber();
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c55 = c;
									int c56 = (c55).@value;
									if (( ( ( ( c56 >= 97 ) && ( c56 <= 122 ) ) || ( ( c56 >= 65 ) && ( c56 <= 90 ) ) ) || ( c56 == 95 ) )) {
										return this.readIdentifier();
									}
									else {
										this.error(global::Loreline.Internal.Lang.Runtime.concat("Unexpected character: ", global::Loreline.Internal.Lang.StringExt.fromCharCode((c).@value)), true);
										return null;
									}
									
								}
								
							}
							else {
								switch (((c)).@value) {
									case 33:
									{
										global::Loreline.Internal.Lang.Null<int> c57 = c;
										int c58 = (c57).@value;
										if (( ( c58 >= 48 ) && ( c58 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c59 = c;
											int c60 = (c59).@value;
											if (( ( ( ( c60 >= 97 ) && ( c60 <= 122 ) ) || ( ( c60 >= 65 ) && ( c60 <= 90 ) ) ) || ( c60 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset13 = 1;
												if (( (( (( ( this.pos + offset13 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset13 ))).@value) : (0) )) == 61 )) {
													{
														int count31 = 2;
														while (( ( count31-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position34 = startPos;
													if (( position34 == null )) {
														position34 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position34.length = ( this.pos - position34.offset );
													global::Loreline.Runtime.Token token34 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpNotEquals) ), ((global::Loreline.Runtime.Position) (position34) ));
													this.previous = token34;
													return token34;
												}
												else {
													{
														int count32 = 1;
														while (( ( count32-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position35 = startPos;
													if (( position35 == null )) {
														position35 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position35.length = ( this.pos - position35.offset );
													global::Loreline.Runtime.Token token35 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpNot) ), ((global::Loreline.Runtime.Position) (position35) ));
													this.previous = token35;
													return token35;
												}
												
											}
											
										}
										
									}
									
									
									case 37:
									{
										global::Loreline.Internal.Lang.Null<int> c61 = c;
										int c62 = (c61).@value;
										if (( ( c62 >= 48 ) && ( c62 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c63 = c;
											int c64 = (c63).@value;
											if (( ( ( ( c64 >= 97 ) && ( c64 <= 122 ) ) || ( ( c64 >= 65 ) && ( c64 <= 90 ) ) ) || ( c64 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												{
													int count33 = 1;
													while (( ( count33-- > 0 ) && ( this.pos < this.length ) )) {
														if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
															this.line++;
															this.column = 1;
														}
														else {
															this.column++;
														}
														
														this.pos++;
													}
													
												}
												
												global::Loreline.Runtime.Position position36 = startPos;
												if (( position36 == null )) {
													position36 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
												}
												
												position36.length = ( this.pos - position36.offset );
												global::Loreline.Runtime.Token token36 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpModulo) ), ((global::Loreline.Runtime.Position) (position36) ));
												this.previous = token36;
												return token36;
											}
											
										}
										
									}
									
									
									case 38:
									{
										global::Loreline.Internal.Lang.Null<int> c65 = c;
										int c66 = (c65).@value;
										if (( ( c66 >= 48 ) && ( c66 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c67 = c;
											int c68 = (c67).@value;
											if (( ( ( ( c68 >= 97 ) && ( c68 <= 122 ) ) || ( ( c68 >= 65 ) && ( c68 <= 90 ) ) ) || ( c68 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset14 = 1;
												if (( (( (( ( this.pos + offset14 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset14 ))).@value) : (0) )) == 38 )) {
													{
														int count34 = 2;
														while (( ( count34-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position37 = startPos;
													if (( position37 == null )) {
														position37 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position37.length = ( this.pos - position37.offset );
													global::Loreline.Runtime.Token token37 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpAnd(false)) ), ((global::Loreline.Runtime.Position) (position37) ));
													this.previous = token37;
													return token37;
												}
												else {
													{
														int count35 = 1;
														while (( ( count35-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													this.error("Expected &", false);
													global::Loreline.Runtime.Position position38 = startPos;
													if (( position38 == null )) {
														position38 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position38.length = ( this.pos - position38.offset );
													global::Loreline.Runtime.Token token38 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpAnd(false)) ), ((global::Loreline.Runtime.Position) (position38) ));
													this.previous = token38;
													return token38;
												}
												
											}
											
										}
										
									}
									
									
									case 40:
									{
										{
											int count36 = 1;
											while (( ( count36-- > 0 ) && ( this.pos < this.length ) )) {
												if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
													this.line++;
													this.column = 1;
												}
												else {
													this.column++;
												}
												
												this.pos++;
											}
											
										}
										
										this.makeStrictIfFollowingCallable();
										global::Loreline.Runtime.Position position39 = startPos;
										if (( position39 == null )) {
											position39 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
										}
										
										position39.length = ( this.pos - position39.offset );
										global::Loreline.Runtime.Token token39 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LParen) ), ((global::Loreline.Runtime.Position) (position39) ));
										this.previous = token39;
										return token39;
									}
									
									
									case 41:
									{
										{
											int count37 = 1;
											while (( ( count37-- > 0 ) && ( this.pos < this.length ) )) {
												if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
													this.line++;
													this.column = 1;
												}
												else {
													this.column++;
												}
												
												this.pos++;
											}
											
										}
										
										this.strictExprs.pop();
										global::Loreline.Runtime.Position position40 = startPos;
										if (( position40 == null )) {
											position40 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
										}
										
										position40.length = ( this.pos - position40.offset );
										global::Loreline.Runtime.Token token40 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.RParen) ), ((global::Loreline.Runtime.Position) (position40) ));
										this.previous = token40;
										return token40;
									}
									
									
									case 42:
									{
										global::Loreline.Internal.Lang.Null<int> c69 = c;
										int c70 = (c69).@value;
										if (( ( c70 >= 48 ) && ( c70 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c71 = c;
											int c72 = (c71).@value;
											if (( ( ( ( c72 >= 97 ) && ( c72 <= 122 ) ) || ( ( c72 >= 65 ) && ( c72 <= 90 ) ) ) || ( c72 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset15 = 1;
												if (( (( (( ( this.pos + offset15 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset15 ))).@value) : (0) )) == 61 )) {
													{
														int count38 = 2;
														while (( ( count38-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position41 = startPos;
													if (( position41 == null )) {
														position41 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position41.length = ( this.pos - position41.offset );
													global::Loreline.Runtime.Token token41 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpMultiplyAssign) ), ((global::Loreline.Runtime.Position) (position41) ));
													this.previous = token41;
													return token41;
												}
												else {
													{
														int count39 = 1;
														while (( ( count39-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position42 = startPos;
													if (( position42 == null )) {
														position42 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position42.length = ( this.pos - position42.offset );
													global::Loreline.Runtime.Token token42 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpMultiply) ), ((global::Loreline.Runtime.Position) (position42) ));
													this.previous = token42;
													return token42;
												}
												
											}
											
										}
										
									}
									
									
									case 43:
									{
										global::Loreline.Internal.Lang.Null<int> c73 = c;
										int c74 = (c73).@value;
										if (( ( c74 >= 48 ) && ( c74 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c75 = c;
											int c76 = (c75).@value;
											if (( ( ( ( c76 >= 97 ) && ( c76 <= 122 ) ) || ( ( c76 >= 65 ) && ( c76 <= 90 ) ) ) || ( c76 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset16 = 1;
												if (( (( (( ( this.pos + offset16 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset16 ))).@value) : (0) )) == 61 )) {
													{
														int count40 = 2;
														while (( ( count40-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position43 = startPos;
													if (( position43 == null )) {
														position43 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position43.length = ( this.pos - position43.offset );
													global::Loreline.Runtime.Token token43 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpPlusAssign) ), ((global::Loreline.Runtime.Position) (position43) ));
													this.previous = token43;
													return token43;
												}
												else {
													{
														int count41 = 1;
														while (( ( count41-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position44 = startPos;
													if (( position44 == null )) {
														position44 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position44.length = ( this.pos - position44.offset );
													global::Loreline.Runtime.Token token44 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpPlus) ), ((global::Loreline.Runtime.Position) (position44) ));
													this.previous = token44;
													return token44;
												}
												
											}
											
										}
										
									}
									
									
									case 44:
									{
										{
											int count42 = 1;
											while (( ( count42-- > 0 ) && ( this.pos < this.length ) )) {
												if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
													this.line++;
													this.column = 1;
												}
												else {
													this.column++;
												}
												
												this.pos++;
											}
											
										}
										
										global::Loreline.Runtime.Position position45 = startPos;
										if (( position45 == null )) {
											position45 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
										}
										
										position45.length = ( this.pos - position45.offset );
										global::Loreline.Runtime.Token token45 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Comma) ), ((global::Loreline.Runtime.Position) (position45) ));
										this.previous = token45;
										return token45;
									}
									
									
									case 45:
									{
										global::Loreline.Internal.Lang.Null<int> c77 = c;
										int c78 = (c77).@value;
										if (( ( c78 >= 48 ) && ( c78 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c79 = c;
											int c80 = (c79).@value;
											if (( ( ( ( c80 >= 97 ) && ( c80 <= 122 ) ) || ( ( c80 >= 65 ) && ( c80 <= 90 ) ) ) || ( c80 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset17 = 1;
												if (( (( (( ( this.pos + offset17 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset17 ))).@value) : (0) )) == 62 )) {
													{
														int count43 = 2;
														while (( ( count43-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position46 = startPos;
													if (( position46 == null )) {
														position46 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position46.length = ( this.pos - position46.offset );
													global::Loreline.Runtime.Token token46 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Arrow) ), ((global::Loreline.Runtime.Position) (position46) ));
													this.previous = token46;
													return token46;
												}
												else {
													int offset18 = 1;
													if (( (( (( ( this.pos + offset18 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset18 ))).@value) : (0) )) == 61 )) {
														{
															int count44 = 2;
															while (( ( count44-- > 0 ) && ( this.pos < this.length ) )) {
																if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																	this.line++;
																	this.column = 1;
																}
																else {
																	this.column++;
																}
																
																this.pos++;
															}
															
														}
														
														global::Loreline.Runtime.Position position47 = startPos;
														if (( position47 == null )) {
															position47 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
														}
														
														position47.length = ( this.pos - position47.offset );
														global::Loreline.Runtime.Token token47 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpMinusAssign) ), ((global::Loreline.Runtime.Position) (position47) ));
														this.previous = token47;
														return token47;
													}
													else {
														{
															int count45 = 1;
															while (( ( count45-- > 0 ) && ( this.pos < this.length ) )) {
																if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																	this.line++;
																	this.column = 1;
																}
																else {
																	this.column++;
																}
																
																this.pos++;
															}
															
														}
														
														global::Loreline.Runtime.Position position48 = startPos;
														if (( position48 == null )) {
															position48 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
														}
														
														position48.length = ( this.pos - position48.offset );
														global::Loreline.Runtime.Token token48 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpMinus) ), ((global::Loreline.Runtime.Position) (position48) ));
														this.previous = token48;
														return token48;
													}
													
												}
												
											}
											
										}
										
									}
									
									
									case 46:
									{
										{
											int count46 = 1;
											while (( ( count46-- > 0 ) && ( this.pos < this.length ) )) {
												if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
													this.line++;
													this.column = 1;
												}
												else {
													this.column++;
												}
												
												this.pos++;
											}
											
										}
										
										global::Loreline.Runtime.Position position49 = startPos;
										if (( position49 == null )) {
											position49 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
										}
										
										position49.length = ( this.pos - position49.offset );
										global::Loreline.Runtime.Token token49 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Dot) ), ((global::Loreline.Runtime.Position) (position49) ));
										this.previous = token49;
										return token49;
									}
									
									
									case 47:
									{
										global::Loreline.Internal.Lang.Null<int> c81 = c;
										int c82 = (c81).@value;
										if (( ( c82 >= 48 ) && ( c82 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c83 = c;
											int c84 = (c83).@value;
											if (( ( ( ( c84 >= 97 ) && ( c84 <= 122 ) ) || ( ( c84 >= 65 ) && ( c84 <= 90 ) ) ) || ( c84 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset19 = 1;
												if (( (( (( ( this.pos + offset19 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset19 ))).@value) : (0) )) == 61 )) {
													{
														int count47 = 2;
														while (( ( count47-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position50 = startPos;
													if (( position50 == null )) {
														position50 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position50.length = ( this.pos - position50.offset );
													global::Loreline.Runtime.Token token50 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpDivideAssign) ), ((global::Loreline.Runtime.Position) (position50) ));
													this.previous = token50;
													return token50;
												}
												else {
													int offset20 = 1;
													if (( (( (( ( this.pos + offset20 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset20 ))).@value) : (0) )) == 47 )) {
														return this.readLineComment();
													}
													else {
														int offset21 = 1;
														if (( (( (( ( this.pos + offset21 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset21 ))).@value) : (0) )) == 42 )) {
															return this.readMultiLineComment();
														}
														else {
															{
																int count48 = 1;
																while (( ( count48-- > 0 ) && ( this.pos < this.length ) )) {
																	if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																		this.line++;
																		this.column = 1;
																	}
																	else {
																		this.column++;
																	}
																	
																	this.pos++;
																}
																
															}
															
															global::Loreline.Runtime.Position position51 = startPos;
															if (( position51 == null )) {
																position51 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
															}
															
															position51.length = ( this.pos - position51.offset );
															global::Loreline.Runtime.Token token51 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpDivide) ), ((global::Loreline.Runtime.Position) (position51) ));
															this.previous = token51;
															return token51;
														}
														
													}
													
												}
												
											}
											
										}
										
									}
									
									
									case 58:
									{
										{
											int count49 = 1;
											while (( ( count49-- > 0 ) && ( this.pos < this.length ) )) {
												if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
													this.line++;
													this.column = 1;
												}
												else {
													this.column++;
												}
												
												this.pos++;
											}
											
										}
										
										global::Loreline.Runtime.Position position52 = startPos;
										if (( position52 == null )) {
											position52 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
										}
										
										position52.length = ( this.pos - position52.offset );
										global::Loreline.Runtime.Token token52 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Colon) ), ((global::Loreline.Runtime.Position) (position52) ));
										this.previous = token52;
										return token52;
									}
									
									
									case 60:
									{
										global::Loreline.Internal.Lang.Null<int> c85 = c;
										int c86 = (c85).@value;
										if (( ( c86 >= 48 ) && ( c86 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c87 = c;
											int c88 = (c87).@value;
											if (( ( ( ( c88 >= 97 ) && ( c88 <= 122 ) ) || ( ( c88 >= 65 ) && ( c88 <= 90 ) ) ) || ( c88 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset22 = 1;
												if (( (( (( ( this.pos + offset22 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset22 ))).@value) : (0) )) == 61 )) {
													{
														int count50 = 2;
														while (( ( count50-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position53 = startPos;
													if (( position53 == null )) {
														position53 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position53.length = ( this.pos - position53.offset );
													global::Loreline.Runtime.Token token53 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpLessEq) ), ((global::Loreline.Runtime.Position) (position53) ));
													this.previous = token53;
													return token53;
												}
												else {
													{
														int count51 = 1;
														while (( ( count51-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position54 = startPos;
													if (( position54 == null )) {
														position54 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position54.length = ( this.pos - position54.offset );
													global::Loreline.Runtime.Token token54 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpLess) ), ((global::Loreline.Runtime.Position) (position54) ));
													this.previous = token54;
													return token54;
												}
												
											}
											
										}
										
									}
									
									
									case 61:
									{
										global::Loreline.Internal.Lang.Null<int> c89 = c;
										int c90 = (c89).@value;
										if (( ( c90 >= 48 ) && ( c90 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c91 = c;
											int c92 = (c91).@value;
											if (( ( ( ( c92 >= 97 ) && ( c92 <= 122 ) ) || ( ( c92 >= 65 ) && ( c92 <= 90 ) ) ) || ( c92 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset23 = 1;
												if (( (( (( ( this.pos + offset23 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset23 ))).@value) : (0) )) == 61 )) {
													{
														int count52 = 2;
														while (( ( count52-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position55 = startPos;
													if (( position55 == null )) {
														position55 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position55.length = ( this.pos - position55.offset );
													global::Loreline.Runtime.Token token55 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpEquals) ), ((global::Loreline.Runtime.Position) (position55) ));
													this.previous = token55;
													return token55;
												}
												else {
													{
														int count53 = 1;
														while (( ( count53-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position56 = startPos;
													if (( position56 == null )) {
														position56 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position56.length = ( this.pos - position56.offset );
													global::Loreline.Runtime.Token token56 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpAssign) ), ((global::Loreline.Runtime.Position) (position56) ));
													this.previous = token56;
													return token56;
												}
												
											}
											
										}
										
									}
									
									
									case 62:
									{
										global::Loreline.Internal.Lang.Null<int> c93 = c;
										int c94 = (c93).@value;
										if (( ( c94 >= 48 ) && ( c94 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c95 = c;
											int c96 = (c95).@value;
											if (( ( ( ( c96 >= 97 ) && ( c96 <= 122 ) ) || ( ( c96 >= 65 ) && ( c96 <= 90 ) ) ) || ( c96 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset24 = 1;
												if (( (( (( ( this.pos + offset24 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset24 ))).@value) : (0) )) == 61 )) {
													{
														int count54 = 2;
														while (( ( count54-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position57 = startPos;
													if (( position57 == null )) {
														position57 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position57.length = ( this.pos - position57.offset );
													global::Loreline.Runtime.Token token57 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpGreaterEq) ), ((global::Loreline.Runtime.Position) (position57) ));
													this.previous = token57;
													return token57;
												}
												else {
													{
														int count55 = 1;
														while (( ( count55-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position58 = startPos;
													if (( position58 == null )) {
														position58 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position58.length = ( this.pos - position58.offset );
													global::Loreline.Runtime.Token token58 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpGreater) ), ((global::Loreline.Runtime.Position) (position58) ));
													this.previous = token58;
													return token58;
												}
												
											}
											
										}
										
									}
									
									
									case 93:
									{
										{
											int count56 = 1;
											while (( ( count56-- > 0 ) && ( this.pos < this.length ) )) {
												if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
													this.line++;
													this.column = 1;
												}
												else {
													this.column++;
												}
												
												this.pos++;
											}
											
										}
										
										this.strictExprs.pop();
										global::Loreline.Runtime.Position position59 = startPos;
										if (( position59 == null )) {
											position59 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
										}
										
										position59.length = ( this.pos - position59.offset );
										global::Loreline.Runtime.Token token59 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.RBracket) ), ((global::Loreline.Runtime.Position) (position59) ));
										this.previous = token59;
										return token59;
									}
									
									
									case 124:
									{
										global::Loreline.Internal.Lang.Null<int> c97 = c;
										int c98 = (c97).@value;
										if (( ( c98 >= 48 ) && ( c98 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c99 = c;
											int c100 = (c99).@value;
											if (( ( ( ( c100 >= 97 ) && ( c100 <= 122 ) ) || ( ( c100 >= 65 ) && ( c100 <= 90 ) ) ) || ( c100 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												int offset25 = 1;
												if (( (( (( ( this.pos + offset25 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset25 ))).@value) : (0) )) == 124 )) {
													{
														int count57 = 2;
														while (( ( count57-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													global::Loreline.Runtime.Position position60 = startPos;
													if (( position60 == null )) {
														position60 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position60.length = ( this.pos - position60.offset );
													global::Loreline.Runtime.Token token60 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpOr(false)) ), ((global::Loreline.Runtime.Position) (position60) ));
													this.previous = token60;
													return token60;
												}
												else {
													{
														int count58 = 1;
														while (( ( count58-- > 0 ) && ( this.pos < this.length ) )) {
															if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
																this.line++;
																this.column = 1;
															}
															else {
																this.column++;
															}
															
															this.pos++;
														}
														
													}
													
													this.error("Expected |", false);
													global::Loreline.Runtime.Position position61 = startPos;
													if (( position61 == null )) {
														position61 = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
													}
													
													position61.length = ( this.pos - position61.offset );
													global::Loreline.Runtime.Token token61 = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.OpOr(false)) ), ((global::Loreline.Runtime.Position) (position61) ));
													this.previous = token61;
													return token61;
												}
												
											}
											
										}
										
									}
									
									
									default:
									{
										global::Loreline.Internal.Lang.Null<int> c101 = c;
										int c102 = (c101).@value;
										if (( ( c102 >= 48 ) && ( c102 <= 57 ) )) {
											return this.readNumber();
										}
										else {
											global::Loreline.Internal.Lang.Null<int> c103 = c;
											int c104 = (c103).@value;
											if (( ( ( ( c104 >= 97 ) && ( c104 <= 122 ) ) || ( ( c104 >= 65 ) && ( c104 <= 90 ) ) ) || ( c104 == 95 ) )) {
												return this.readIdentifier();
											}
											else {
												this.error(global::Loreline.Internal.Lang.Runtime.concat("Unexpected character: ", global::Loreline.Internal.Lang.StringExt.fromCharCode((c).@value)), true);
												return null;
											}
											
										}
										
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
			}
		}
		
		
		public virtual int countIndentation() {
			unchecked {
				int pos = this.pos;
				int spaces = 0;
				while (( pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
					if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 32)) {
						 ++ spaces;
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 9)) {
						spaces += 4;
					}
					else {
						break;
					}
					
					 ++ pos;
				}
				
				if (( ( ( pos >= this.length ) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 10) ) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 13) )) {
					return this.indentStack[( this.indentStack.length - 1 )];
				}
				
				return spaces;
			}
		}
		
		
		public virtual global::Loreline.Runtime.TokenType parentBlockType() {
			unchecked {
				int i = ( this.stack.length - 1 );
				while (( i >= 0 )) {
					if (( ( ( this.stack[i] != ((int) (8) ) ) && ( this.stack[i] != ((int) (9) ) ) ) && ( this.stack[i] != ((int) (10) ) ) )) {
						switch (this.stack[i]) {
							case 0:
							case 1:
							{
								return global::Loreline.Runtime.TokenType.KwBeat;
							}
							
							
							case 2:
							case 3:
							{
								return global::Loreline.Runtime.TokenType.KwState;
							}
							
							
							case 4:
							case 5:
							{
								return global::Loreline.Runtime.TokenType.KwCharacter;
							}
							
							
							case 6:
							case 7:
							{
								return global::Loreline.Runtime.TokenType.KwBeat;
							}
							
							
							case 8:
							{
								return global::Loreline.Runtime.TokenType.LBrace;
							}
							
							
							case 9:
							{
								return global::Loreline.Runtime.TokenType.Indent;
							}
							
							
							case 10:
							{
								return global::Loreline.Runtime.TokenType.LBracket;
							}
							
							
						}
						
					}
					
					 -- i;
				}
				
				return global::Loreline.Runtime.TokenType.KwBeat;
			}
		}
		
		
		public virtual bool inBeat() {
			return ( this.parentBlockType() == global::Loreline.Runtime.TokenType.KwBeat );
		}
		
		
		public virtual bool inStateOrCharacter() {
			global::Loreline.Runtime.TokenType parent = this.parentBlockType();
			if (( parent != global::Loreline.Runtime.TokenType.KwState )) {
				return ( parent == global::Loreline.Runtime.TokenType.KwCharacter );
			}
			else {
				return true;
			}
			
		}
		
		
		public virtual global::Loreline.Runtime.Token readLineBreak() {
			unchecked {
				global::Loreline.Runtime.Position start = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 13)) {
					{
						int count = 1;
						while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
								this.line++;
								this.column = 1;
							}
							else {
								this.column++;
							}
							
							this.pos++;
						}
						
					}
					
					if (( ( this.pos < this.length ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10) )) {
						int count1 = 1;
						while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
								this.line++;
								this.column = 1;
							}
							else {
								this.column++;
							}
							
							this.pos++;
						}
						
					}
					
				}
				else {
					int count2 = 1;
					while (( ( count2-- > 0 ) && ( this.pos < this.length ) )) {
						if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
							this.line++;
							this.column = 1;
						}
						else {
							this.column++;
						}
						
						this.pos++;
					}
					
				}
				
				global::Loreline.Runtime.Position position = start;
				if (( position == null )) {
					position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				}
				
				position.length = ( this.pos - position.offset );
				global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LineBreak) ), ((global::Loreline.Runtime.Position) (position) ));
				this.previous = token;
				return token;
			}
		}
		
		
		public bool isWhitespace(int c) {
			unchecked {
				if (( c != 32 )) {
					return ( c == 9 );
				}
				else {
					return true;
				}
				
			}
		}
		
		
		public virtual string matchIdentifier(int pos) {
			unchecked {
				if (( this.length == 0 )) {
					return null;
				}
				
				global::Loreline.Internal.Lang.Null<int> firstChar = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
				int c = (firstChar).@value;
				if ( ! ((( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) ))) ) {
					return null;
				}
				
				int identifierLength = 1;
				while (( identifierLength < this.length )) {
					int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + identifierLength ))).@value;
					if ( ! ((( ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ) || ( ( c1 >= 48 ) && ( c1 <= 57 ) ) ))) ) {
						break;
					}
					
					 ++ identifierLength;
				}
				
				return global::Loreline.Internal.Lang.StringExt.substr(this.input, pos, new global::Loreline.Internal.Lang.Null<int>(identifierLength, true));
			}
		}
		
		
		public virtual int skipWhitespaceAndComments(int pos) {
			unchecked {
				int startPos = pos;
				bool foundContent = false;
				while (( pos < this.length )) {
					while (( ( pos < this.length ) && (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 32) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 9) )) )) {
						 ++ pos;
						foundContent = true;
					}
					
					if (( pos < ( this.length - 1 ) )) {
						if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 47)) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 47)) {
								pos = startPos;
								return pos;
							}
							else if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 42)) {
								pos += 2;
								foundContent = true;
								bool commentClosed = false;
								while (( pos < ( this.length - 1 ) )) {
									if (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 42) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 47) )) {
										pos += 2;
										commentClosed = true;
										break;
									}
									
									 ++ pos;
								}
								
								if ( ! (commentClosed) ) {
									pos = startPos;
									return pos;
								}
								
								continue;
							}
							
						}
						
					}
					
					break;
				}
				
				if (foundContent) {
					return pos;
				}
				else {
					return startPos;
				}
				
			}
		}
		
		
		public virtual bool isIfStart(int pos) {
			unchecked {
				pos = this.skipWhitespaceAndComments(pos);
				if (( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 105)) )) {
					return false;
				}
				
				 ++ pos;
				if (( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 102)) )) {
					return false;
				}
				
				int startPos =  ++ pos;
				pos = this.skipWhitespaceAndComments(pos);
				if (( ( pos < this.length ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 33) )) {
					 ++ pos;
					pos = this.skipWhitespaceAndComments(pos);
				}
				
				if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 40)) {
					return true;
				}
				
				bool tmp = default(bool);
				if (( pos == startPos )) {
					int c = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, startPos)).@value;
					tmp = ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) );
				}
				else {
					tmp = false;
				}
				
				if (tmp) {
					return false;
				}
				
				bool tmp1 = default(bool);
				if (( pos < this.length )) {
					int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value;
					tmp1 =  ! ((( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ))) ;
				}
				else {
					tmp1 = true;
				}
				
				if (tmp1) {
					return false;
				}
				
				global::Loreline.Runtime.Lexer _gthis = this;
				while (( pos < this.length )) {
					if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 40)) {
						return true;
					}
					else {
						bool result = true;
						int len = _gthis.length;
						if (( pos >= len )) {
							result = false;
						}
						else {
							bool tmp2 = default(bool);
							if (( ( ( ( pos + 1 ) < len ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos)).toDynamic(), 111) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 1 ))).toDynamic(), 114) )) {
								int c2 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 2 ))).@value;
								tmp2 =  ! ((( ( ( ( c2 >= 97 ) && ( c2 <= 122 ) ) || ( ( c2 >= 65 ) && ( c2 <= 90 ) ) ) || ( c2 == 95 ) ))) ;
							}
							else {
								tmp2 = false;
							}
							
							if (tmp2) {
								result = false;
							}
							else {
								bool tmp3 = default(bool);
								if (( ( ( ( ( pos + 2 ) < len ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos)).toDynamic(), 97) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 1 ))).toDynamic(), 110) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 2 ))).toDynamic(), 100) )) {
									int c3 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 3 ))).@value;
									tmp3 =  ! ((( ( ( ( c3 >= 97 ) && ( c3 <= 122 ) ) || ( ( c3 >= 65 ) && ( c3 <= 90 ) ) ) || ( c3 == 95 ) ))) ;
								}
								else {
									tmp3 = false;
								}
								
								if (tmp3) {
									result = false;
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c4 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
									int c5 = (c4).@value;
									if ( ! ((( ( ( ( c5 >= 97 ) && ( c5 <= 122 ) ) || ( ( c5 >= 65 ) && ( c5 <= 90 ) ) ) || ( c5 == 95 ) ))) ) {
										result = false;
									}
									else {
										 ++ pos;
										while (( pos < _gthis.length )) {
											c4 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
											int c6 = (c4).@value;
											if ( ! ((( ( ( ( ( c6 >= 97 ) && ( c6 <= 122 ) ) || ( ( c6 >= 65 ) && ( c6 <= 90 ) ) ) || ( c6 == 95 ) ) || ( ( c6 >= 48 ) && ( c6 <= 57 ) ) ))) ) {
												break;
											}
											
											 ++ pos;
										}
										
									}
									
								}
								
							}
							
						}
						
						if ( ! (result) ) {
							return false;
						}
						
					}
					
					pos = this.skipWhitespaceAndComments(pos);
					if (( pos >= this.length )) {
						return true;
					}
					
					global::Loreline.Internal.Lang.Null<int> c7 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
					if (global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 46)) {
						 ++ pos;
						pos = this.skipWhitespaceAndComments(pos);
						bool result1 = true;
						int len1 = _gthis.length;
						if (( pos >= len1 )) {
							result1 = false;
						}
						else {
							bool tmp4 = default(bool);
							if (( ( ( ( pos + 1 ) < len1 ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos)).toDynamic(), 111) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 1 ))).toDynamic(), 114) )) {
								int c8 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 2 ))).@value;
								tmp4 =  ! ((( ( ( ( c8 >= 97 ) && ( c8 <= 122 ) ) || ( ( c8 >= 65 ) && ( c8 <= 90 ) ) ) || ( c8 == 95 ) ))) ;
							}
							else {
								tmp4 = false;
							}
							
							if (tmp4) {
								result1 = false;
							}
							else {
								bool tmp5 = default(bool);
								if (( ( ( ( ( pos + 2 ) < len1 ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos)).toDynamic(), 97) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 1 ))).toDynamic(), 110) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 2 ))).toDynamic(), 100) )) {
									int c9 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, ( pos + 3 ))).@value;
									tmp5 =  ! ((( ( ( ( c9 >= 97 ) && ( c9 <= 122 ) ) || ( ( c9 >= 65 ) && ( c9 <= 90 ) ) ) || ( c9 == 95 ) ))) ;
								}
								else {
									tmp5 = false;
								}
								
								if (tmp5) {
									result1 = false;
								}
								else {
									global::Loreline.Internal.Lang.Null<int> c10 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
									int c11 = (c10).@value;
									if ( ! ((( ( ( ( c11 >= 97 ) && ( c11 <= 122 ) ) || ( ( c11 >= 65 ) && ( c11 <= 90 ) ) ) || ( c11 == 95 ) ))) ) {
										result1 = false;
									}
									else {
										 ++ pos;
										while (( pos < _gthis.length )) {
											c10 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
											int c12 = (c10).@value;
											if ( ! ((( ( ( ( ( c12 >= 97 ) && ( c12 <= 122 ) ) || ( ( c12 >= 65 ) && ( c12 <= 90 ) ) ) || ( c12 == 95 ) ) || ( ( c12 >= 48 ) && ( c12 <= 57 ) ) ))) ) {
												break;
											}
											
											 ++ pos;
										}
										
									}
									
								}
								
							}
							
						}
						
						if ( ! (result1) ) {
							return true;
						}
						
						pos = this.skipWhitespaceAndComments(pos);
						if (( pos >= this.length )) {
							return true;
						}
						
						c7 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
					}
					
					if (global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 91)) {
						 ++ pos;
						int bracketLevel = 1;
						while (( ( pos < this.length ) && ( bracketLevel > 0 ) )) {
							c7 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
							if (global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 91)) {
								 ++ bracketLevel;
							}
							
							if (global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 93)) {
								 -- bracketLevel;
							}
							
							 ++ pos;
						}
						
						pos = this.skipWhitespaceAndComments(pos);
						if (( pos >= this.length )) {
							return true;
						}
						
						c7 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
					}
					
					bool tmp6 = default(bool);
					if (( ( global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 97) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 110) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 2 ))).toDynamic(), 100) )) {
						int c13 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 3 ))).@value;
						tmp6 =  ! ((( ( ( ( c13 >= 97 ) && ( c13 <= 122 ) ) || ( ( c13 >= 65 ) && ( c13 <= 90 ) ) ) || ( c13 == 95 ) ))) ;
					}
					else {
						tmp6 = false;
					}
					
					if (tmp6) {
						return true;
					}
					
					bool tmp7 = default(bool);
					if (( global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 111) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 114) )) {
						int c14 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 2 ))).@value;
						tmp7 =  ! ((( ( ( ( c14 >= 97 ) && ( c14 <= 122 ) ) || ( ( c14 >= 65 ) && ( c14 <= 90 ) ) ) || ( c14 == 95 ) ))) ;
					}
					else {
						tmp7 = false;
					}
					
					if (tmp7) {
						return true;
					}
					
					if (( ( ( ( ( ( global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 40) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 38) ) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 124) ) || ( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 61) && global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 61) ) ) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 62) ) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 60) ) || ( ( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 61)) ) && (( ( ( ( global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 43) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 45) ) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 42) ) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 47) ) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 123) )) ) )) {
						return true;
					}
					
					if (( ( global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 10) || global::Loreline.Internal.Lang.Runtime.eq((c7).toDynamic(), 13) ) || ( pos >= this.length ) )) {
						pos = startPos;
						return true;
					}
					
					return false;
				}
				
				return true;
			}
		}
		
		
		public virtual bool isIdentifierExpressionStart(int pos) {
			unchecked {
				pos = this.skipWhitespaceAndComments(pos);
				pos = this.skipWhitespaceAndComments(pos);
				if (( pos >= this.length )) {
					return false;
				}
				
				if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 40)) {
					return true;
				}
				
				global::Loreline.Runtime.Lexer _gthis = this;
				bool result = true;
				if (( pos >= _gthis.length )) {
					result = false;
				}
				else {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
					int c1 = (c).@value;
					if ( ! ((( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ))) ) {
						result = false;
					}
					else {
						 ++ pos;
						while (( pos < _gthis.length )) {
							c = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
							int c2 = (c).@value;
							if ( ! ((( ( ( ( ( c2 >= 97 ) && ( c2 <= 122 ) ) || ( ( c2 >= 65 ) && ( c2 <= 90 ) ) ) || ( c2 == 95 ) ) || ( ( c2 >= 48 ) && ( c2 <= 57 ) ) ))) ) {
								break;
							}
							
							 ++ pos;
						}
						
					}
					
				}
				
				if ( ! (result) ) {
					return false;
				}
				
				while (( pos < this.length )) {
					pos = this.skipWhitespaceAndComments(pos);
					if (( pos >= this.length )) {
						return true;
					}
					
					global::Loreline.Internal.Lang.Null<int> c3 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
					int c4 = (c3).@value;
					if (( ( ( ( (  ! ((( ( c4 == 32 ) || ( c4 == 9 ) )))  && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 46)) ) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 91)) ) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 10)) ) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 13)) ) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 47)) ) )) {
						return false;
					}
					
					if (( ( global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 10) || global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 13) ) || ( ( global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 47) && ( ( pos + 1 ) < this.length ) ) && (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 47) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 42) )) ) )) {
						return true;
					}
					
					if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 46)) {
						 ++ pos;
						pos = this.skipWhitespaceAndComments(pos);
						if (( pos >= this.length )) {
							return true;
						}
						
						bool result1 = true;
						if (( pos >= _gthis.length )) {
							result1 = false;
						}
						else {
							global::Loreline.Internal.Lang.Null<int> c5 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
							int c6 = (c5).@value;
							if ( ! ((( ( ( ( c6 >= 97 ) && ( c6 <= 122 ) ) || ( ( c6 >= 65 ) && ( c6 <= 90 ) ) ) || ( c6 == 95 ) ))) ) {
								result1 = false;
							}
							else {
								 ++ pos;
								while (( pos < _gthis.length )) {
									c5 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
									int c7 = (c5).@value;
									if ( ! ((( ( ( ( ( c7 >= 97 ) && ( c7 <= 122 ) ) || ( ( c7 >= 65 ) && ( c7 <= 90 ) ) ) || ( c7 == 95 ) ) || ( ( c7 >= 48 ) && ( c7 <= 57 ) ) ))) ) {
										break;
									}
									
									 ++ pos;
								}
								
							}
							
						}
						
						if ( ! (result1) ) {
							return true;
						}
						
						continue;
					}
					
					if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 91)) {
						 ++ pos;
						int bracketLevel = 1;
						while (( ( pos < this.length ) && ( bracketLevel > 0 ) )) {
							c3 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
							if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 91)) {
								 ++ bracketLevel;
							}
							
							if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 93)) {
								 -- bracketLevel;
							}
							
							 ++ pos;
						}
						
						continue;
					}
					
					int c8 = (c3).@value;
					if (( ( c8 == 32 ) || ( c8 == 9 ) )) {
						 ++ pos;
						continue;
					}
					
					break;
				}
				
				return true;
			}
		}
		
		
		public virtual bool isTransitionStart(int pos) {
			unchecked {
				if (( ( ( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 45)) ) || ( pos >= ( this.length - 1 ) ) ) || ( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 62)) ) )) {
					return false;
				}
				
				pos += 2;
				pos = this.skipWhitespaceAndComments(pos);
				if (( pos >= this.length )) {
					return false;
				}
				
				global::Loreline.Internal.Lang.Null<int> @char = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
				if (global::Loreline.Internal.Lang.Runtime.eq((@char).toDynamic(), 46)) {
					 ++ pos;
				}
				else {
					int c = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value;
					if (( ( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) ) || ( ( c >= 48 ) && ( c <= 57 ) ) )) {
						 ++ pos;
						while (true) {
							bool tmp = default(bool);
							if (( pos < this.length )) {
								int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value;
								tmp = ( ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ) || ( ( c1 >= 48 ) && ( c1 <= 57 ) ) );
							}
							else {
								tmp = false;
							}
							
							if ( ! (tmp) ) {
								break;
							}
							
							 ++ pos;
						}
						
					}
					else {
						return false;
					}
					
				}
				
				pos = this.skipWhitespaceAndComments(pos);
				if (( pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c2 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
					if (( ( ( ( ( ! (global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 10)) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 13)) ) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 32)) ) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 9)) ) ) && ( ! (global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 47)) ) )) {
						return false;
					}
					
				}
				
				return true;
			}
		}
		
		
		public virtual bool isLabelStart(int pos) {
			unchecked {
				pos = this.skipWhitespaceAndComments(pos);
				int c = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value;
				if ( ! ((( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) ))) ) {
					return false;
				}
				
				int startPos = pos;
				 ++ pos;
				while (true) {
					bool tmp = default(bool);
					if (( pos < this.length )) {
						int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value;
						tmp = ( ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ) || ( ( c1 >= 48 ) && ( c1 <= 57 ) ) );
					}
					else {
						tmp = false;
					}
					
					if ( ! (tmp) ) {
						break;
					}
					
					 ++ pos;
				}
				
				while (true) {
					bool tmp1 = default(bool);
					if (( pos < this.length )) {
						int c2 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).@value;
						tmp1 = ( ( c2 == 32 ) || ( c2 == 9 ) );
					}
					else {
						tmp1 = false;
					}
					
					if ( ! (tmp1) ) {
						break;
					}
					
					 ++ pos;
				}
				
				if (( ( pos >= this.length ) || ( ! (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 58)) ) )) {
					return false;
				}
				
				string word = global::Loreline.Internal.Lang.StringExt.substr(this.input, startPos, new global::Loreline.Internal.Lang.Null<int>(( pos - startPos ), true));
				if (global::Loreline.Runtime.Lexer.KEYWORDS.exists(word)) {
					return false;
				}
				
				return true;
			}
		}
		
		
		public virtual bool isCallStart(int pos) {
			unchecked {
				int startPos = pos;
				global::Loreline.Runtime.Lexer _gthis = this;
				bool result = true;
				if (( pos >= _gthis.length )) {
					result = false;
				}
				else {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
					int c1 = (c).@value;
					if ( ! ((( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ))) ) {
						result = false;
					}
					else {
						 ++ pos;
						while (( pos < _gthis.length )) {
							c = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
							int c2 = (c).@value;
							if ( ! ((( ( ( ( ( c2 >= 97 ) && ( c2 <= 122 ) ) || ( ( c2 >= 65 ) && ( c2 <= 90 ) ) ) || ( c2 == 95 ) ) || ( ( c2 >= 48 ) && ( c2 <= 57 ) ) ))) ) {
								break;
							}
							
							 ++ pos;
						}
						
					}
					
				}
				
				if ( ! (result) ) {
					pos = startPos;
					return false;
				}
				
				while (( pos < this.length )) {
					pos = this.skipWhitespaceAndComments(pos);
					if (( pos >= this.length )) {
						pos = startPos;
						return false;
					}
					
					global::Loreline.Internal.Lang.Null<int> c3 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
					if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 40)) {
						pos = startPos;
						return true;
					}
					
					if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 46)) {
						 ++ pos;
						pos = this.skipWhitespaceAndComments(pos);
						bool result1 = true;
						if (( pos >= _gthis.length )) {
							result1 = false;
						}
						else {
							global::Loreline.Internal.Lang.Null<int> c4 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
							int c5 = (c4).@value;
							if ( ! ((( ( ( ( c5 >= 97 ) && ( c5 <= 122 ) ) || ( ( c5 >= 65 ) && ( c5 <= 90 ) ) ) || ( c5 == 95 ) ))) ) {
								result1 = false;
							}
							else {
								 ++ pos;
								while (( pos < _gthis.length )) {
									c4 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
									int c6 = (c4).@value;
									if ( ! ((( ( ( ( ( c6 >= 97 ) && ( c6 <= 122 ) ) || ( ( c6 >= 65 ) && ( c6 <= 90 ) ) ) || ( c6 == 95 ) ) || ( ( c6 >= 48 ) && ( c6 <= 57 ) ) ))) ) {
										break;
									}
									
									 ++ pos;
								}
								
							}
							
						}
						
						if ( ! (result1) ) {
							pos = startPos;
							return false;
						}
						
						continue;
					}
					
					if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 91)) {
						 ++ pos;
						while (( pos < this.length )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 93)) {
								 ++ pos;
								break;
							}
							
							 ++ pos;
						}
						
						continue;
					}
					
					pos = startPos;
					return false;
				}
				
				pos = startPos;
				return false;
			}
		}
		
		
		public virtual bool isAssignStart(int pos) {
			unchecked {
				int startPos = pos;
				global::Loreline.Runtime.Lexer _gthis = this;
				bool result = true;
				if (( pos >= _gthis.length )) {
					result = false;
				}
				else {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
					int c1 = (c).@value;
					if ( ! ((( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ))) ) {
						result = false;
					}
					else {
						 ++ pos;
						while (( pos < _gthis.length )) {
							c = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
							int c2 = (c).@value;
							if ( ! ((( ( ( ( ( c2 >= 97 ) && ( c2 <= 122 ) ) || ( ( c2 >= 65 ) && ( c2 <= 90 ) ) ) || ( c2 == 95 ) ) || ( ( c2 >= 48 ) && ( c2 <= 57 ) ) ))) ) {
								break;
							}
							
							 ++ pos;
						}
						
					}
					
				}
				
				if ( ! (result) ) {
					pos = startPos;
					return false;
				}
				
				while (( pos < this.length )) {
					pos = this.skipWhitespaceAndComments(pos);
					if (( pos >= this.length )) {
						pos = startPos;
						return false;
					}
					
					global::Loreline.Internal.Lang.Null<int> c3 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos);
					if (( global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 61) || ( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( pos + 1 ))).toDynamic(), 61) && (( ( ( global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 43) || global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 45) ) || global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 42) ) || global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 47) )) ) )) {
						pos = startPos;
						return true;
					}
					
					if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 46)) {
						 ++ pos;
						pos = this.skipWhitespaceAndComments(pos);
						bool result1 = true;
						if (( pos >= _gthis.length )) {
							result1 = false;
						}
						else {
							global::Loreline.Internal.Lang.Null<int> c4 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
							int c5 = (c4).@value;
							if ( ! ((( ( ( ( c5 >= 97 ) && ( c5 <= 122 ) ) || ( ( c5 >= 65 ) && ( c5 <= 90 ) ) ) || ( c5 == 95 ) ))) ) {
								result1 = false;
							}
							else {
								 ++ pos;
								while (( pos < _gthis.length )) {
									c4 = global::Loreline.Internal.Lang.StringExt.charCodeAt(_gthis.input, pos);
									int c6 = (c4).@value;
									if ( ! ((( ( ( ( ( c6 >= 97 ) && ( c6 <= 122 ) ) || ( ( c6 >= 65 ) && ( c6 <= 90 ) ) ) || ( c6 == 95 ) ) || ( ( c6 >= 48 ) && ( c6 <= 57 ) ) ))) ) {
										break;
									}
									
									 ++ pos;
								}
								
							}
							
						}
						
						if ( ! (result1) ) {
							pos = startPos;
							return false;
						}
						
						continue;
					}
					
					if (global::Loreline.Internal.Lang.Runtime.eq((c3).toDynamic(), 91)) {
						 ++ pos;
						while (( pos < this.length )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 93)) {
								 ++ pos;
								break;
							}
							
							 ++ pos;
						}
						
						continue;
					}
					
					pos = startPos;
					return false;
				}
				
				pos = startPos;
				return false;
			}
		}
		
		
		public virtual bool isColon(int pos, global::Loreline.Internal.Lang.Null<bool> skipWhitespaces) {
			unchecked {
				bool skipWhitespaces1 = ( ( ! (skipWhitespaces.hasValue) ) ? (true) : ((skipWhitespaces).@value) );
				if (skipWhitespaces1) {
					while (( ( pos < this.length ) && (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 32) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 9) )) )) {
						 ++ pos;
					}
					
				}
				
				if (( pos < this.length )) {
					return global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, pos)).toDynamic(), 58);
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public virtual bool isAfterLabel(global::Loreline.Internal.Lang.Null<bool> inSameLine) {
			unchecked {
				bool inSameLine1 = ( ( ! (inSameLine.hasValue) ) ? (true) : ((inSameLine).@value) );
				int i = ( this.tokenized.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.Token token = ((global::Loreline.Runtime.Token) (this.tokenized[i]) );
					if ((  ! (global::Loreline.Runtime.TokenTypeHelpers.isComment(token.type))  && (( inSameLine1 || ( ( ( token.type != global::Loreline.Runtime.TokenType.LineBreak ) && ( token.type != global::Loreline.Runtime.TokenType.Indent ) ) && ( token.type != global::Loreline.Runtime.TokenType.Unindent ) ) )) )) {
						if (( ( token.type == global::Loreline.Runtime.TokenType.Colon ) && ( i > 0 ) )) {
							return global::Loreline.Runtime.TokenTypeHelpers.isIdentifier(((global::Loreline.Runtime.Token) (this.tokenized[( i - 1 )]) ).type);
						}
						else {
							return false;
						}
						
					}
					
					 -- i;
				}
				
				return false;
			}
		}
		
		
		public virtual bool isAfterComma() {
			unchecked {
				int i = ( this.tokenized.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.Token token = ((global::Loreline.Runtime.Token) (this.tokenized[i]) );
					if (( ( (  ! (global::Loreline.Runtime.TokenTypeHelpers.isComment(token.type))  && ( token.type != global::Loreline.Runtime.TokenType.LineBreak ) ) && ( token.type != global::Loreline.Runtime.TokenType.Indent ) ) && ( token.type != global::Loreline.Runtime.TokenType.Unindent ) )) {
						return ( token.type == global::Loreline.Runtime.TokenType.Comma );
					}
					
					 -- i;
				}
				
				return false;
			}
		}
		
		
		public virtual bool isAfterLBracket() {
			unchecked {
				int i = ( this.tokenized.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.Token token = ((global::Loreline.Runtime.Token) (this.tokenized[i]) );
					if (( ( (  ! (global::Loreline.Runtime.TokenTypeHelpers.isComment(token.type))  && ( token.type != global::Loreline.Runtime.TokenType.LineBreak ) ) && ( token.type != global::Loreline.Runtime.TokenType.Indent ) ) && ( token.type != global::Loreline.Runtime.TokenType.Unindent ) )) {
						return ( token.type == global::Loreline.Runtime.TokenType.LBracket );
					}
					
					 -- i;
				}
				
				return false;
			}
		}
		
		
		public virtual bool isInsideBrackets() {
			unchecked {
				int i = ( this.stack.length - 1 );
				while (( ( i >= 0 ) && ( this.stack[i] == ((int) (9) ) ) )) {
					 -- i;
				}
				
				if (( i >= 0 )) {
					return ( this.stack[i] == ((int) (10) ) );
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public virtual bool followsAssignStart() {
			unchecked {
				int i = ( this.tokenized.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.Token token = ((global::Loreline.Runtime.Token) (this.tokenized[i]) );
					if (( ( global::Loreline.Runtime.TokenTypeHelpers.isComment(token.type) || ( token.type == global::Loreline.Runtime.TokenType.Indent ) ) || ( token.type == global::Loreline.Runtime.TokenType.Unindent ) )) {
						 -- i;
					}
					else if (global::Loreline.Runtime.TokenTypeHelpers.isAssignOp(token.type)) {
						return true;
					}
					else {
						return false;
					}
					
				}
				
				return false;
			}
		}
		
		
		public virtual bool followsOnlyLabelOrCommentsInLine() {
			unchecked {
				bool foundLabel = false;
				int i = ( this.tokenized.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.Token token = ((global::Loreline.Runtime.Token) (this.tokenized[i]) );
					if (( ( global::Loreline.Runtime.TokenTypeHelpers.isComment(token.type) || ( token.type == global::Loreline.Runtime.TokenType.Indent ) ) || ( token.type == global::Loreline.Runtime.TokenType.Unindent ) )) {
						 -- i;
					}
					else if ((  ! (foundLabel)  && ( token.type == global::Loreline.Runtime.TokenType.Colon ) )) {
						 -- i;
						if (( i >= 0 )) {
							if (global::Loreline.Runtime.TokenTypeHelpers.isIdentifier(((global::Loreline.Runtime.Token) (this.tokenized[i]) ).type)) {
								foundLabel = true;
								 -- i;
							}
							
						}
						else {
							return false;
						}
						
					}
					else if (( token.type == global::Loreline.Runtime.TokenType.LineBreak )) {
						return true;
					}
					else {
						return false;
					}
					
				}
				
				return true;
			}
		}
		
		
		public virtual bool followsOnlyWhitespacesOrCommentsInLine() {
			unchecked {
				int i = ( this.tokenized.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.Token token = ((global::Loreline.Runtime.Token) (this.tokenized[i]) );
					if (( ( global::Loreline.Runtime.TokenTypeHelpers.isComment(token.type) || ( token.type == global::Loreline.Runtime.TokenType.Indent ) ) || ( token.type == global::Loreline.Runtime.TokenType.Unindent ) )) {
						 -- i;
					}
					else if (( token.type == global::Loreline.Runtime.TokenType.LineBreak )) {
						return true;
					}
					else {
						return false;
					}
					
				}
				
				return true;
			}
		}
		
		
		public virtual bool hasNonSpecialChar(string str) {
			{
				int _g = 0;
				int _g1 = str.Length;
				while (( _g < _g1 )) {
					int i = _g++;
					bool found = false;
					global::Loreline.Internal.Lang.Null<int> code = global::Loreline.Internal.Lang.StringExt.charCodeAt(str, i);
					{
						int _g2 = 0;
						int _g3 = global::Loreline.Runtime.Lexer.hasNonSpecialChar_specialChars.Length;
						while (( _g2 < _g3 )) {
							int j = _g2++;
							if (global::Loreline.Internal.Lang.Runtime.eq((code).toDynamic(), (global::Loreline.Internal.Lang.StringExt.charCodeAt(global::Loreline.Runtime.Lexer.hasNonSpecialChar_specialChars, j)).toDynamic())) {
								found = true;
								break;
							}
							
						}
						
					}
					
					if ( ! (found) ) {
						return true;
					}
					
				}
				
			}
			
			return false;
		}
		
		
		public virtual bool isNumber(string @value) {
			unchecked {
				int pos = 0;
				int length = @value.Length;
				while (true) {
					bool tmp = default(bool);
					if (( pos < length )) {
						int c = (global::Loreline.Internal.Lang.StringExt.charCodeAt(@value, pos)).@value;
						tmp = ( ( c >= 48 ) && ( c <= 57 ) );
					}
					else {
						tmp = false;
					}
					
					if ( ! (tmp) ) {
						break;
					}
					
					 ++ pos;
				}
				
				bool tmp1 = default(bool);
				if (( ( ( pos < length ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(@value, pos)).toDynamic(), 46) ) && ( ( pos + 1 ) < length ) )) {
					int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(@value, ( pos + 1 ))).@value;
					tmp1 = ( ( c1 >= 48 ) && ( c1 <= 57 ) );
				}
				else {
					tmp1 = false;
				}
				
				if (tmp1) {
					 ++ pos;
					while (true) {
						bool tmp2 = default(bool);
						if (( pos < length )) {
							int c2 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(@value, pos)).@value;
							tmp2 = ( ( c2 >= 48 ) && ( c2 <= 57 ) );
						}
						else {
							tmp2 = false;
						}
						
						if ( ! (tmp2) ) {
							break;
						}
						
						 ++ pos;
					}
					
				}
				
				return ( pos == length );
			}
		}
		
		
		public virtual void makeLooseOrStrictAfterBracket() {
			unchecked {
				int i = ( this.tokenized.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.Token token = ((global::Loreline.Runtime.Token) (this.tokenized[i]) );
					{
						global::Loreline.Runtime.TokenType _g = token.type;
						switch (_g._hx_index) {
							case 12:
							{
								string _g1 = ( _g as global::Loreline.Runtime.TokenType_Identifier ).name;
								this.strictExprs.push(((int) (1) ));
								return;
							}
							
							
							case 39:
							case 41:
							{
								this.strictExprs.push(((int) (1) ));
								return;
							}
							
							
							case 42:
							{
								string _g2 = ( _g as global::Loreline.Runtime.TokenType_CommentLine ).content;
								break;
							}
							
							
							case 43:
							{
								string _g3 = ( _g as global::Loreline.Runtime.TokenType_CommentMultiLine ).content;
								break;
							}
							
							
							case 44:
							case 45:
							case 46:
							{
								break;
							}
							
							
							default:
							{
								this.strictExprs.push(((int) (0) ));
								return;
							}
							
						}
						
					}
					
					 -- i;
				}
				
				this.strictExprs.push(((int) (2) ));
			}
		}
		
		
		public virtual void makeStrictIfFollowingCallable() {
			unchecked {
				if (this.followsCallableOrIndexable()) {
					this.strictExprs.push(((int) (1) ));
				}
				else {
					this.strictExprs.push(((int) (2) ));
				}
				
			}
		}
		
		
		public virtual bool followsCallableOrIndexable() {
			unchecked {
				int i = ( this.tokenized.length - 1 );
				while (( i >= 0 )) {
					global::Loreline.Runtime.Token token = ((global::Loreline.Runtime.Token) (this.tokenized[i]) );
					{
						global::Loreline.Runtime.TokenType _g = token.type;
						switch (_g._hx_index) {
							case 12:
							{
								string _g1 = ( _g as global::Loreline.Runtime.TokenType_Identifier ).name;
								return true;
							}
							
							
							case 39:
							case 41:
							{
								return true;
							}
							
							
							case 42:
							{
								string _g2 = ( _g as global::Loreline.Runtime.TokenType_CommentLine ).content;
								break;
							}
							
							
							case 43:
							{
								string _g3 = ( _g as global::Loreline.Runtime.TokenType_CommentMultiLine ).content;
								break;
							}
							
							
							case 44:
							case 45:
							case 46:
							{
								break;
							}
							
							
							default:
							{
								return false;
							}
							
						}
						
					}
					
					 -- i;
				}
				
				return false;
			}
		}
		
		
		public virtual bool isStrict() {
			unchecked {
				int i = ( this.strictExprs.length - 1 );
				while (( ( i >= 0 ) && ( this.strictExprs[i] == ((int) (2) ) ) )) {
					 -- i;
				}
				
				if (( i >= 0 )) {
					return ( this.strictExprs[i] == ((int) (1) ) );
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token tryReadUnquotedString() {
			unchecked {
				if (this.isStrict()) {
					return null;
				}
				
				global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
				int offset = 1;
				int cc = ( (( ( this.pos + offset ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset ))).@value) : (0) );
				if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 47) && ( this.pos < ( this.length - 1 ) ) )) {
					global::Loreline.Internal.Lang.Null<int> next = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + 1 ));
					if (( global::Loreline.Internal.Lang.Runtime.eq((next).toDynamic(), 47) || global::Loreline.Internal.Lang.Runtime.eq((next).toDynamic(), 42) )) {
						return null;
					}
					
				}
				
				bool tmp = default(bool);
				if ( ! ((( ( ( ( ( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 123) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 125) ) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 91) ) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 93) ) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 34) ) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 58) ))) ) {
					int c1 = (c).@value;
					tmp = ( ( c1 == 32 ) || ( c1 == 9 ) );
				}
				else {
					tmp = true;
				}
				
				if (tmp) {
					return null;
				}
				
				global::Loreline.Runtime.TokenType parent = this.parentBlockType();
				if (( ( ( parent != global::Loreline.Runtime.TokenType.KwBeat ) && ( parent != global::Loreline.Runtime.TokenType.KwState ) ) && ( parent != global::Loreline.Runtime.TokenType.KwCharacter ) )) {
					return null;
				}
				
				bool inBrackets = this.isInsideBrackets();
				bool isAssignValue = this.followsAssignStart();
				bool isAfterLabel = this.isAfterLabel(default(global::Loreline.Internal.Lang.Null<bool>));
				bool isValue = ( ( ( ( parent == global::Loreline.Runtime.TokenType.KwState ) || ( parent == global::Loreline.Runtime.TokenType.KwCharacter ) ) || inBrackets ) || isAssignValue );
				if (isValue) {
					if (( this.isCallStart(this.pos) || this.isLabelStart(this.pos) )) {
						return null;
					}
					
				}
				else if ((  ! (isAfterLabel)  && (( ( ( this.isIdentifierExpressionStart(this.pos) || this.isIfStart(this.pos) ) || this.isCallStart(this.pos) ) || this.isAssignStart(this.pos) )) )) {
					return null;
				}
				
				if ( ! (isValue) ) {
					if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 61) || ( ( cc == 61 ) && (( ( ( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 43) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 45) ) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 42) ) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 47) )) ) )) {
						return null;
					}
					
				}
				
				string identifier = this.matchIdentifier(this.pos);
				if (( identifier != null )) {
					if ( ! (isValue) ) {
						if (( ( ( ( ( identifier != "if" ) && ( identifier != "null" ) ) && ( identifier != "true" ) ) && ( identifier != "false" ) ) && global::Loreline.Runtime.Lexer.KEYWORDS.exists(identifier) )) {
							return null;
						}
						
						if (this.isColon(( this.pos + identifier.Length ), default(global::Loreline.Internal.Lang.Null<bool>))) {
							return null;
						}
						
					}
					
				}
				
				bool allowTags =  ! (isValue) ;
				bool isDialogue = false;
				if (isValue) {
					if (inBrackets) {
						if (( ( (  ! (isAfterLabel)  &&  ! (this.followsOnlyWhitespacesOrCommentsInLine())  ) &&  ! (this.isAfterComma())  ) &&  ! (this.isAfterLBracket())  )) {
							return null;
						}
						
					}
					else if ((  ! (isAssignValue)  &&  ! (isAfterLabel)  )) {
						return null;
					}
					
				}
				else {
					isDialogue = this.followsOnlyLabelOrCommentsInLine();
					if ((  ! (isDialogue)  &&  ! (this.followsOnlyWhitespacesOrCommentsInLine())  )) {
						return null;
					}
					
					if ( ! (isDialogue) ) {
						if (( ( cc == 62 ) && global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 45) )) {
							return null;
						}
						
					}
					
				}
				
				global::Loreline.Runtime.Position start = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				global::Loreline.Internal.Root.StringBuf buf = new global::Loreline.Internal.Root.StringBuf();
				global::Loreline.Internal.Root.Array<object> attachments = new global::Loreline.Internal.Root.Array<object>();
				int startLine = this.line;
				int startColumn = this.column;
				int startPos = this.pos;
				bool escaped = false;
				int tagStart = -1;
				bool tagIsClosing = false;
				int currentColumn = this.column;
				int currentLine = this.line;
				bool valid = true;
				bool hasContent = false;
				while (( this.pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c2 = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
					int c3 = (c2).@value;
					bool isSpace = ( ( c3 == 32 ) || ( c3 == 9 ) );
					if ( ! (hasContent) ) {
						if (( (  ! (isSpace)  && ( tagStart == -1 ) ) && (( ( ! (global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 60)) ) ||  ! (allowTags)  )) )) {
							hasContent = true;
						}
						
					}
					
					if (escaped) {
						buf.addChar(92);
						buf.addChar((c2).@value);
						escaped = false;
						{
							int count = 1;
							while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
						currentColumn += 2;
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 92)) {
						escaped = true;
						{
							int count1 = 1;
							while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
					}
					else if (( ( ( ( tagStart == -1 ) && isSpace ) &&  ! (hasContent)  ) && ( attachments.length == 0 ) )) {
						int count2 = 1;
						while (( ( count2-- > 0 ) && ( this.pos < this.length ) )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
								this.line++;
								this.column = 1;
							}
							else {
								this.column++;
							}
							
							this.pos++;
						}
						
					}
					else if (( ( tagStart == -1 ) && (( ( global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 10) || global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 13) ) || global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 123) )) )) {
						break;
					}
					else if (( ( ( tagStart == -1 ) &&  ! (isValue)  ) && this.isIfStart(this.pos) )) {
						break;
					}
					else if (( ( tagStart == -1 ) && (( ( global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 47) && ( this.pos < ( this.length - 1 ) ) ) && (( global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + 1 ))).toDynamic(), 47) || global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + 1 ))).toDynamic(), 42) )) )) )) {
						break;
					}
					else if (( ( ( ( ( tagStart == -1 ) && global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 45) ) && ( this.pos < ( this.length - 1 ) ) ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + 1 ))).toDynamic(), 62) ) && this.isTransitionStart(this.pos) )) {
						break;
					}
					else if (( ( ( tagStart == -1 ) && isValue ) && (( ( global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 44) || global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 93) ) || global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 125) )) )) {
						break;
					}
					else if (( allowTags && global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 60) )) {
						if (( tagStart != -1 )) {
							this.error("Unexpected < inside tag", true);
						}
						
						global::Loreline.Internal.Lang.Null<int> nextChar = ( (( ( this.pos + 1 ) < this.length )) ? (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + 1 ))) : (new global::Loreline.Internal.Lang.Null<int>(0, true)) );
						tagIsClosing = global::Loreline.Internal.Lang.Runtime.eq((nextChar).toDynamic(), 47);
						int checkPos = ( this.pos + (( (tagIsClosing) ? (2) : (1) )) );
						if (( checkPos < this.length )) {
							global::Loreline.Internal.Lang.Null<int> nameStart = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, checkPos);
							int c4 = (nameStart).@value;
							if (( ( ( ( ( ( ( c4 >= 97 ) && ( c4 <= 122 ) ) || ( ( c4 >= 65 ) && ( c4 <= 90 ) ) ) || ( c4 == 95 ) ) || global::Loreline.Internal.Lang.Runtime.eq((nameStart).toDynamic(), 95) ) || global::Loreline.Internal.Lang.Runtime.eq((nameStart).toDynamic(), 36) ) || ( tagIsClosing && global::Loreline.Internal.Lang.Runtime.eq((nameStart).toDynamic(), 62) ) )) {
								tagStart = buf.b.Length;
							}
							
						}
						
						buf.addChar((c2).@value);
						{
							int count3 = 1;
							while (( ( count3-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
						 ++ currentColumn;
					}
					else if (( allowTags && global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 62) )) {
						buf.addChar((c2).@value);
						{
							int count4 = 1;
							while (( ( count4-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
						 ++ currentColumn;
						if (( tagStart != -1 )) {
							attachments.push(global::Loreline.Runtime.LStringAttachment.Tag(tagIsClosing, tagStart, ( buf.b.Length - tagStart )));
							tagStart = -1;
						}
						
					}
					else if (( global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 36) &&  ! (escaped)  )) {
						int interpStart = buf.b.Length;
						int interpLine = currentLine;
						int interpColumn = currentColumn;
						int tokenStartPos = this.pos;
						try {
							{
								int count5 = 1;
								while (( ( count5-- > 0 ) && ( this.pos < this.length ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
										this.line++;
										this.column = 1;
									}
									else {
										this.column++;
									}
									
									this.pos++;
								}
								
							}
							
							 ++ currentColumn;
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 123)) {
								{
									int count6 = 1;
									while (( ( count6-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								 ++ currentColumn;
								global::Loreline.Runtime.Position interpPos = new global::Loreline.Runtime.Position(((int) (interpLine) ), ((int) (( interpColumn + 2 )) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								global::Loreline.Internal.Root.Array<object> tokens = this.readComplexInterpolation(interpPos);
								int interpLength = ( this.pos - tokenStartPos );
								attachments.push(global::Loreline.Runtime.LStringAttachment.Interpolation(true, ( tagStart != -1 ), tokens, interpStart, interpLength));
								{
									string x = global::Loreline.Internal.Lang.StringExt.substr(this.input, tokenStartPos, new global::Loreline.Internal.Lang.Null<int>(interpLength, true));
									buf.b.Append(((string) (global::Loreline.Internal.Root.Std.@string(x)) ));
								}
								
							}
							else {
								int c5 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).@value;
								if (( ( ( ( c5 >= 97 ) && ( c5 <= 122 ) ) || ( ( c5 >= 65 ) && ( c5 <= 90 ) ) ) || ( c5 == 95 ) )) {
									global::Loreline.Runtime.Position interpPos1 = new global::Loreline.Runtime.Position(((int) (interpLine) ), ((int) (( interpColumn + 1 )) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
									global::Loreline.Internal.Root.Array<object> tokens1 = this.readFieldAccessInterpolation(interpPos1);
									int interpLength1 = ( this.pos - tokenStartPos );
									attachments.push(global::Loreline.Runtime.LStringAttachment.Interpolation(false, ( tagStart != -1 ), tokens1, interpStart, interpLength1));
									{
										string x1 = global::Loreline.Internal.Lang.StringExt.substr(this.input, tokenStartPos, new global::Loreline.Internal.Lang.Null<int>(interpLength1, true));
										buf.b.Append(((string) (global::Loreline.Internal.Root.Std.@string(x1)) ));
									}
									
								}
								else {
									this.error("Expected identifier or { after $", false);
									int interpLength2 = ( this.pos - tokenStartPos );
									attachments.push(global::Loreline.Runtime.LStringAttachment.Interpolation(false, ( tagStart != -1 ), new global::Loreline.Internal.Root.Array<object>(new object[]{}), interpStart, interpLength2));
									{
										string x2 = global::Loreline.Internal.Lang.StringExt.substr(this.input, tokenStartPos, new global::Loreline.Internal.Lang.Null<int>(interpLength2, true));
										buf.b.Append(((string) (global::Loreline.Internal.Root.Std.@string(x2)) ));
									}
									
								}
								
							}
							
						}
						catch (global::System.Exception _g){
							object _g1 = global::Loreline.Internal.Exception.caught(_g).unwrap();
							if (( _g1 is global::Loreline.Runtime.LexerError )) {
								global::Loreline.Runtime.LexerError e = ((global::Loreline.Runtime.LexerError) (_g1) );
								if (( e.pos == null )) {
									e.pos = new global::Loreline.Runtime.Position(((int) (interpLine) ), ((int) (interpColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								}
								
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(e)) );
							}
							else {
								throw;
							}
							
						}
						
						
						currentColumn = ( interpColumn + (( this.pos - tokenStartPos )) );
					}
					else {
						if (global::Loreline.Internal.Lang.Runtime.eq((c2).toDynamic(), 10)) {
							 ++ currentLine;
							currentColumn = 1;
						}
						else {
							 ++ currentColumn;
						}
						
						buf.addChar((c2).@value);
						{
							int count7 = 1;
							while (( ( count7-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
					}
					
				}
				
				if (valid) {
					string content = buf.b.ToString();
					int rawContentLength = content.Length;
					content = content.TrimEnd();
					int contentLength = content.Length;
					if (( ( ( ( ( ( contentLength > 0 ) && this.hasNonSpecialChar(content) ) &&  ! (this.isNumber(content))  ) && ( content != "null" ) ) && ( content != "true" ) ) && ( content != "false" ) )) {
						attachments.sort(((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(typeof(global::Loreline.Runtime.Lexer), "compareAttachments", 1900414603)) ));
						global::Loreline.Internal.Root.Array<object> type = ( (( attachments.length > 0 )) ? (attachments) : (null) );
						global::Loreline.Runtime.Position position = start;
						if (( position == null )) {
							position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
						}
						
						position.length = ( this.pos - position.offset );
						global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LString(((int) (0) ), content, type)) ), ((global::Loreline.Runtime.Position) (position) ));
						this.previous = token;
						global::Loreline.Runtime.Token token1 = token;
						token1.pos.length += ( contentLength - rawContentLength );
						return token1;
					}
					
				}
				
				this.line = startLine;
				this.column = startColumn;
				this.pos = startPos;
				return null;
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token readString(global::Loreline.Runtime.Position stringStart) {
			unchecked {
				{
					int count = 1;
					while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
						if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
							this.line++;
							this.column = 1;
						}
						else {
							this.column++;
						}
						
						this.pos++;
					}
					
				}
				
				global::Loreline.Internal.Root.StringBuf buf = new global::Loreline.Internal.Root.StringBuf();
				global::Loreline.Internal.Root.Array<object> attachments = new global::Loreline.Internal.Root.Array<object>();
				bool escaped = false;
				int tagStart = -1;
				bool tagIsClosing = false;
				int currentColumn = ( stringStart.column + 1 );
				int currentLine = stringStart.line;
				bool allowTags = ( this.parentBlockType() == global::Loreline.Runtime.TokenType.KwBeat );
				while (( this.pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
					if (escaped) {
						buf.addChar(92);
						buf.addChar((c).@value);
						escaped = false;
						{
							int count1 = 1;
							while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
						currentColumn += 2;
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 92)) {
						escaped = true;
						{
							int count2 = 1;
							while (( ( count2-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
					}
					else if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 34) && ( tagStart == -1 ) )) {
						{
							int count3 = 1;
							while (( ( count3-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
						attachments.sort(((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(typeof(global::Loreline.Runtime.Lexer), "compareAttachments", 1900414603)) ));
						string type = buf.b.ToString();
						global::Loreline.Internal.Root.Array<object> type1 = ( (( attachments.length > 0 )) ? (attachments) : (null) );
						global::Loreline.Runtime.Position position = stringStart;
						if (( position == null )) {
							position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
						}
						
						position.length = ( this.pos - position.offset );
						global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LString(((int) (1) ), type, type1)) ), ((global::Loreline.Runtime.Position) (position) ));
						this.previous = token;
						return token;
					}
					else if (( allowTags && global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 60) )) {
						if (( tagStart != -1 )) {
							this.error("Unexpected < inside tag", true);
						}
						
						global::Loreline.Internal.Lang.Null<int> nextChar = ( (( ( this.pos + 1 ) < this.length )) ? (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + 1 ))) : (new global::Loreline.Internal.Lang.Null<int>(0, true)) );
						tagIsClosing = global::Loreline.Internal.Lang.Runtime.eq((nextChar).toDynamic(), 47);
						int checkPos = ( this.pos + (( (tagIsClosing) ? (2) : (1) )) );
						if (( checkPos < this.length )) {
							global::Loreline.Internal.Lang.Null<int> nameStart = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, checkPos);
							int c1 = (nameStart).@value;
							if (( ( ( ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ) || global::Loreline.Internal.Lang.Runtime.eq((nameStart).toDynamic(), 95) ) || global::Loreline.Internal.Lang.Runtime.eq((nameStart).toDynamic(), 36) ) || ( tagIsClosing && global::Loreline.Internal.Lang.Runtime.eq((nameStart).toDynamic(), 62) ) )) {
								tagStart = buf.b.Length;
							}
							
						}
						
						buf.addChar((c).@value);
						{
							int count4 = 1;
							while (( ( count4-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
						 ++ currentColumn;
					}
					else if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 62)) {
						buf.addChar((c).@value);
						{
							int count5 = 1;
							while (( ( count5-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
						 ++ currentColumn;
						if (( tagStart != -1 )) {
							attachments.push(global::Loreline.Runtime.LStringAttachment.Tag(tagIsClosing, tagStart, ( buf.b.Length - tagStart )));
							tagStart = -1;
						}
						
					}
					else if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 36) &&  ! (escaped)  )) {
						int interpStart = buf.b.Length;
						int interpLine = currentLine;
						int interpColumn = currentColumn;
						int tokenStartPos = this.pos;
						try {
							{
								int count6 = 1;
								while (( ( count6-- > 0 ) && ( this.pos < this.length ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
										this.line++;
										this.column = 1;
									}
									else {
										this.column++;
									}
									
									this.pos++;
								}
								
							}
							
							 ++ currentColumn;
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 123)) {
								{
									int count7 = 1;
									while (( ( count7-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								 ++ currentColumn;
								global::Loreline.Runtime.Position interpPos = new global::Loreline.Runtime.Position(((int) (interpLine) ), ((int) (( interpColumn + 2 )) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								global::Loreline.Internal.Root.Array<object> tokens = this.readComplexInterpolation(interpPos);
								int interpLength = ( this.pos - tokenStartPos );
								attachments.push(global::Loreline.Runtime.LStringAttachment.Interpolation(true, ( tagStart != -1 ), tokens, interpStart, interpLength));
								{
									string x = global::Loreline.Internal.Lang.StringExt.substr(this.input, tokenStartPos, new global::Loreline.Internal.Lang.Null<int>(interpLength, true));
									buf.b.Append(((string) (global::Loreline.Internal.Root.Std.@string(x)) ));
								}
								
							}
							else {
								int c2 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).@value;
								if (( ( ( ( c2 >= 97 ) && ( c2 <= 122 ) ) || ( ( c2 >= 65 ) && ( c2 <= 90 ) ) ) || ( c2 == 95 ) )) {
									global::Loreline.Runtime.Position interpPos1 = new global::Loreline.Runtime.Position(((int) (interpLine) ), ((int) (( interpColumn + 1 )) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
									global::Loreline.Internal.Root.Array<object> tokens1 = this.readFieldAccessInterpolation(interpPos1);
									int interpLength1 = ( this.pos - tokenStartPos );
									attachments.push(global::Loreline.Runtime.LStringAttachment.Interpolation(false, ( tagStart != -1 ), tokens1, interpStart, interpLength1));
									{
										string x1 = global::Loreline.Internal.Lang.StringExt.substr(this.input, tokenStartPos, new global::Loreline.Internal.Lang.Null<int>(interpLength1, true));
										buf.b.Append(((string) (global::Loreline.Internal.Root.Std.@string(x1)) ));
									}
									
								}
								else {
									this.error("Expected identifier or { after $", false);
									int interpLength2 = ( this.pos - tokenStartPos );
									attachments.push(global::Loreline.Runtime.LStringAttachment.Interpolation(false, ( tagStart != -1 ), new global::Loreline.Internal.Root.Array<object>(new object[]{}), interpStart, interpLength2));
									{
										string x2 = global::Loreline.Internal.Lang.StringExt.substr(this.input, tokenStartPos, new global::Loreline.Internal.Lang.Null<int>(interpLength2, true));
										buf.b.Append(((string) (global::Loreline.Internal.Root.Std.@string(x2)) ));
									}
									
								}
								
							}
							
						}
						catch (global::System.Exception _g){
							object _g1 = global::Loreline.Internal.Exception.caught(_g).unwrap();
							if (( _g1 is global::Loreline.Runtime.LexerError )) {
								global::Loreline.Runtime.LexerError e = ((global::Loreline.Runtime.LexerError) (_g1) );
								if (( e.pos == null )) {
									e.pos = new global::Loreline.Runtime.Position(((int) (interpLine) ), ((int) (interpColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
								}
								
								throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(e)) );
							}
							else {
								throw;
							}
							
						}
						
						
						currentColumn = ( interpColumn + (( this.pos - tokenStartPos )) );
					}
					else {
						if (global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 10)) {
							 ++ currentLine;
							currentColumn = 1;
						}
						else {
							 ++ currentColumn;
						}
						
						buf.addChar((c).@value);
						{
							int count8 = 1;
							while (( ( count8-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
					}
					
				}
				
				this.error("Unterminated string", true);
				return null;
			}
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> readComplexInterpolation(global::Loreline.Runtime.Position interpStart) {
			unchecked {
				this.strictExprs.push(((int) (1) ));
				global::Loreline.Internal.Root.Array<object> tokens = new global::Loreline.Internal.Root.Array<object>();
				int braceLevel = 1;
				int currentColumn = interpStart.column;
				int currentLine = interpStart.line;
				while (( ( this.pos < this.length ) && ( braceLevel > 0 ) )) {
					if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 34)) {
						global::Loreline.Runtime.Position stringPos = new global::Loreline.Runtime.Position(((int) (currentLine) ), ((int) (currentColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
						tokens.push(this.readString(stringPos));
						currentColumn += ( this.pos - stringPos.offset );
						continue;
					}
					
					global::Loreline.Runtime.Token token = this.nextToken();
					tokens.push(token);
					if (( token.type == global::Loreline.Runtime.TokenType.LineBreak )) {
						 ++ currentLine;
						currentColumn = 1;
					}
					else if (( ( token.type == global::Loreline.Runtime.TokenType.Indent ) || ( token.type == global::Loreline.Runtime.TokenType.Unindent ) )) {
					}
					else {
						int tokenLength = default(int);
						global::Loreline.Runtime.TokenType _g = token.type;
						switch (_g._hx_index) {
							case 8:
							{
								global::Loreline.Internal.Root.Array<object> _g1 = ( _g as global::Loreline.Runtime.TokenType_LString ).attachments;
								int q = ( _g as global::Loreline.Runtime.TokenType_LString ).quotes;
								string s = ( _g as global::Loreline.Runtime.TokenType_LString ).s;
								tokenLength = ( s.Length + (( (( q != ((int) (0) ) )) ? (2) : (0) )) );
								break;
							}
							
							
							case 9:
							{
								double n = ( _g as global::Loreline.Runtime.TokenType_LNumber ).n;
								tokenLength = global::Loreline.Internal.Root.Std.@string(n).Length;
								break;
							}
							
							
							case 12:
							{
								string name = ( _g as global::Loreline.Runtime.TokenType_Identifier ).name;
								tokenLength = name.Length;
								break;
							}
							
							
							default:
							{
								tokenLength = 1;
								break;
							}
							
						}
						
						currentColumn += tokenLength;
					}
					
					switch (token.type._hx_index) {
						case 36:
						{
							 ++ braceLevel;
							break;
						}
						
						
						case 37:
						{
							 -- braceLevel;
							break;
						}
						
						
						default:
						{
							break;
						}
						
					}
					
					if (( token.type == global::Loreline.Runtime.TokenType.Eof )) {
						this.error("Unterminated interpolation expression", true);
					}
					
				}
				
				global::Loreline.Runtime.Token __temp_expr1 = ((global::Loreline.Runtime.Token) ((tokens.pop()).@value) );
				this.strictExprs.pop();
				return tokens;
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token nextTokenWithPosition(global::Loreline.Runtime.Position startPos) {
			int savedLine = this.line;
			int savedColumn = this.column;
			int savedPos = this.pos;
			global::Loreline.Runtime.Token token = this.nextToken();
			int len = token.pos.length;
			int tokenOffset = ( this.pos - savedPos );
			token.pos = new global::Loreline.Runtime.Position(((int) (startPos.line) ), ((int) (( startPos.column + tokenOffset )) ), ((int) (( startPos.offset + tokenOffset )) ), new global::Loreline.Internal.Lang.Null<int>(len, true));
			this.line = savedLine;
			this.column = savedColumn;
			return token;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> readFieldAccessInterpolation(global::Loreline.Runtime.Position stringStart) {
			unchecked {
				global::Loreline.Internal.Root.Array<object> tokens = new global::Loreline.Internal.Root.Array<object>();
				int c = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).@value;
				if ( ! ((( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) ))) ) {
					this.error("Expected identifier in field access", true);
				}
				
				tokens.push(this.readIdentifierTokenInInterpolation(stringStart));
				while (( this.pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> _g = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
					if ( ! (_g.hasValue) ) {
						break;
					}
					else {
						switch (((_g)).@value) {
							case 40:
							{
								global::Loreline.Runtime.Position parenPos = this.makePositionRelativeTo(stringStart);
								tokens.push(new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LParen) ), ((global::Loreline.Runtime.Position) (parenPos) )));
								{
									int count = 1;
									while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								this.stack.push(((int) (8) ));
								this.strictExprs.push(((int) (1) ));
								int parenLevel = 1;
								while (( ( this.pos < this.length ) && ( parenLevel > 0 ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 41)) {
										 -- parenLevel;
										if (( parenLevel == 0 )) {
											global::Loreline.Runtime.Position closeParenPos = this.makePositionRelativeTo(stringStart);
											tokens.push(new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.RParen) ), ((global::Loreline.Runtime.Position) (closeParenPos) )));
											{
												int count1 = 1;
												while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											this.stack.pop();
											this.strictExprs.pop();
											break;
										}
										
									}
									else if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 40)) {
										 ++ parenLevel;
									}
									
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 44)) {
										global::Loreline.Runtime.Position commaPos = this.makePositionRelativeTo(stringStart);
										tokens.push(new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Comma) ), ((global::Loreline.Runtime.Position) (commaPos) )));
										{
											int count2 = 1;
											while (( ( count2-- > 0 ) && ( this.pos < this.length ) )) {
												if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
													this.line++;
													this.column = 1;
												}
												else {
													this.column++;
												}
												
												this.pos++;
											}
											
										}
										
									}
									else {
										tokens.push(this.nextTokenWithPosition(stringStart));
									}
									
								}
								
								if (( parenLevel > 0 )) {
									this.error("Unterminated function call in interpolation", true);
								}
								
								break;
							}
							
							
							case 46:
							{
								bool tmp = default(bool);
								if (( ( this.pos + 1 ) < this.length )) {
									int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + 1 ))).@value;
									tmp = ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) );
								}
								else {
									tmp = false;
								}
								
								if (tmp) {
									global::Loreline.Runtime.Position dotPos = this.makePositionRelativeTo(stringStart);
									{
										int count3 = 1;
										while (( ( count3-- > 0 ) && ( this.pos < this.length ) )) {
											if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
												this.line++;
												this.column = 1;
											}
											else {
												this.column++;
											}
											
											this.pos++;
										}
										
									}
									
									tokens.push(new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.Dot) ), ((global::Loreline.Runtime.Position) (dotPos) )));
									tokens.push(this.readIdentifierTokenInInterpolation(stringStart));
								}
								else {
									goto label1;
								}
								
								break;
							}
							
							
							case 91:
							{
								global::Loreline.Runtime.Position bracketPos = this.makePositionRelativeTo(stringStart);
								tokens.push(new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.LBracket) ), ((global::Loreline.Runtime.Position) (bracketPos) )));
								{
									int count4 = 1;
									while (( ( count4-- > 0 ) && ( this.pos < this.length ) )) {
										if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
											this.line++;
											this.column = 1;
										}
										else {
											this.column++;
										}
										
										this.pos++;
									}
									
								}
								
								this.stack.push(((int) (10) ));
								this.strictExprs.push(((int) (1) ));
								int bracketLevel = 1;
								while (( ( this.pos < this.length ) && ( bracketLevel > 0 ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 93)) {
										 -- bracketLevel;
										if (( bracketLevel == 0 )) {
											global::Loreline.Runtime.Position closeBracketPos = this.makePositionRelativeTo(stringStart);
											tokens.push(new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.RBracket) ), ((global::Loreline.Runtime.Position) (closeBracketPos) )));
											{
												int count5 = 1;
												while (( ( count5-- > 0 ) && ( this.pos < this.length ) )) {
													if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
														this.line++;
														this.column = 1;
													}
													else {
														this.column++;
													}
													
													this.pos++;
												}
												
											}
											
											this.stack.pop();
											this.strictExprs.pop();
											break;
										}
										
									}
									else if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 91)) {
										 ++ bracketLevel;
									}
									
									tokens.push(this.nextTokenWithPosition(stringStart));
								}
								
								if (( bracketLevel > 0 )) {
									this.error("Unterminated array access in interpolation", true);
								}
								
								break;
							}
							
							
							default:
							{
								goto label1;
							}
							
						}
						
					}
					
				}
				label1: {};
				return tokens;
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token readIdentifierTokenInInterpolation(global::Loreline.Runtime.Position stringStart) {
			unchecked {
				global::Loreline.Runtime.Position startPos = this.makePositionRelativeTo(stringStart);
				int startOffset = this.pos;
				while (( this.pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
					int c1 = (c).@value;
					if ( ! ((( ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ) || ( ( c1 >= 48 ) && ( c1 <= 57 ) ) ))) ) {
						break;
					}
					
					{
						int count = 1;
						while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
								this.line++;
								this.column = 1;
							}
							else {
								this.column++;
							}
							
							this.pos++;
						}
						
					}
					
				}
				
				string name = global::Loreline.Internal.Lang.StringExt.substr(this.input, startOffset, new global::Loreline.Internal.Lang.Null<int>(( this.pos - startOffset ), true));
				global::Loreline.Runtime.TokenType tokenType = ( (global::Loreline.Runtime.Lexer.KEYWORDS.exists(name)) ? (((global::Loreline.Runtime.TokenType) ((global::Loreline.Runtime.Lexer.KEYWORDS.@get(name)).@value) )) : (global::Loreline.Runtime.TokenType.Identifier(name)) );
				return new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (tokenType) ), ((global::Loreline.Runtime.Position) (startPos) ));
			}
		}
		
		
		public virtual global::Loreline.Runtime.Position makePositionRelativeTo(global::Loreline.Runtime.Position stringStart) {
			unchecked {
				int line = stringStart.line;
				int column = stringStart.column;
				int i = stringStart.offset;
				while (( i < this.pos )) {
					if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, i)).toDynamic(), 10)) {
						 ++ line;
						column = 1;
					}
					else {
						 ++ column;
					}
					
					 ++ i;
				}
				
				return new global::Loreline.Runtime.Position(((int) (line) ), ((int) (column) ), ((int) (this.pos) ), new global::Loreline.Internal.Lang.Null<int>(stringStart.length, true));
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token readLineComment() {
			unchecked {
				global::Loreline.Runtime.Position start = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				{
					int count = 2;
					while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
						if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
							this.line++;
							this.column = 1;
						}
						else {
							this.column++;
						}
						
						this.pos++;
					}
					
				}
				
				int contentStart = this.pos;
				while (( this.pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
					if (( global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 10) || global::Loreline.Internal.Lang.Runtime.eq((c).toDynamic(), 13) )) {
						break;
					}
					
					{
						int count1 = 1;
						while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
								this.line++;
								this.column = 1;
							}
							else {
								this.column++;
							}
							
							this.pos++;
						}
						
					}
					
				}
				
				global::Loreline.Runtime.TokenType type = global::Loreline.Runtime.TokenType.CommentLine(global::Loreline.Internal.Lang.StringExt.substr(this.input, contentStart, new global::Loreline.Internal.Lang.Null<int>(( this.pos - contentStart ), true)));
				global::Loreline.Runtime.Position position = start;
				if (( position == null )) {
					position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				}
				
				position.length = ( this.pos - position.offset );
				global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (type) ), ((global::Loreline.Runtime.Position) (position) ));
				this.previous = token;
				return token;
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token readMultiLineComment() {
			unchecked {
				global::Loreline.Runtime.Position start = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				{
					int count = 2;
					while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
						if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
							this.line++;
							this.column = 1;
						}
						else {
							this.column++;
						}
						
						this.pos++;
					}
					
				}
				
				int contentStart = this.pos;
				int nestLevel = 1;
				while (( ( this.pos < this.length ) && ( nestLevel > 0 ) )) {
					bool tmp = default(bool);
					if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 42)) {
						int offset = 1;
						tmp = ( (( (( ( this.pos + offset ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset ))).@value) : (0) )) == 47 );
					}
					else {
						tmp = false;
					}
					
					if (tmp) {
						 -- nestLevel;
						if (( nestLevel == 0 )) {
							string content = global::Loreline.Internal.Lang.StringExt.substr(this.input, contentStart, new global::Loreline.Internal.Lang.Null<int>(( this.pos - contentStart ), true));
							{
								int count1 = 2;
								while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
										this.line++;
										this.column = 1;
									}
									else {
										this.column++;
									}
									
									this.pos++;
								}
								
							}
							
							global::Loreline.Runtime.Position position = start;
							if (( position == null )) {
								position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
							}
							
							position.length = ( this.pos - position.offset );
							global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (global::Loreline.Runtime.TokenType.CommentMultiLine(content)) ), ((global::Loreline.Runtime.Position) (position) ));
							this.previous = token;
							return token;
						}
						
						{
							int count2 = 2;
							while (( ( count2-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
					}
					else {
						bool tmp1 = default(bool);
						if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 47)) {
							int offset1 = 1;
							tmp1 = ( (( (( ( this.pos + offset1 ) < this.length )) ? ((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset1 ))).@value) : (0) )) == 42 );
						}
						else {
							tmp1 = false;
						}
						
						if (tmp1) {
							 ++ nestLevel;
							{
								int count3 = 2;
								while (( ( count3-- > 0 ) && ( this.pos < this.length ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
										this.line++;
										this.column = 1;
									}
									else {
										this.column++;
									}
									
									this.pos++;
								}
								
							}
							
						}
						else {
							int count4 = 1;
							while (( ( count4-- > 0 ) && ( this.pos < this.length ) )) {
								if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
									this.line++;
									this.column = 1;
								}
								else {
									this.column++;
								}
								
								this.pos++;
							}
							
						}
						
					}
					
				}
				
				this.error("Unterminated multi-line comment", true);
				return null;
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token readNumber() {
			unchecked {
				global::Loreline.Runtime.Position start = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				int startPos = this.pos;
				while (true) {
					bool tmp = default(bool);
					if (( this.pos < this.length )) {
						int c = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).@value;
						tmp = ( ( c >= 48 ) && ( c <= 57 ) );
					}
					else {
						tmp = false;
					}
					
					if ( ! (tmp) ) {
						break;
					}
					
					int count = 1;
					while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
						if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
							this.line++;
							this.column = 1;
						}
						else {
							this.column++;
						}
						
						this.pos++;
					}
					
				}
				
				bool tmp1 = default(bool);
				if (( ( ( this.pos < this.length ) && global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 46) ) && ( ( this.pos + 1 ) < this.length ) )) {
					int c1 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + 1 ))).@value;
					tmp1 = ( ( c1 >= 48 ) && ( c1 <= 57 ) );
				}
				else {
					tmp1 = false;
				}
				
				if (tmp1) {
					{
						int count1 = 1;
						while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
								this.line++;
								this.column = 1;
							}
							else {
								this.column++;
							}
							
							this.pos++;
						}
						
					}
					
					while (true) {
						bool tmp2 = default(bool);
						if (( this.pos < this.length )) {
							int c2 = (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).@value;
							tmp2 = ( ( c2 >= 48 ) && ( c2 <= 57 ) );
						}
						else {
							tmp2 = false;
						}
						
						if ( ! (tmp2) ) {
							break;
						}
						
						int count2 = 1;
						while (( ( count2-- > 0 ) && ( this.pos < this.length ) )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
								this.line++;
								this.column = 1;
							}
							else {
								this.column++;
							}
							
							this.pos++;
						}
						
					}
					
				}
				
				global::Loreline.Runtime.TokenType type = global::Loreline.Runtime.TokenType.LNumber(global::Loreline.Internal.Root.Std.parseFloat(global::Loreline.Internal.Lang.StringExt.substr(this.input, startPos, new global::Loreline.Internal.Lang.Null<int>(( this.pos - startPos ), true))));
				global::Loreline.Runtime.Position position = start;
				if (( position == null )) {
					position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				}
				
				position.length = ( this.pos - position.offset );
				global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (type) ), ((global::Loreline.Runtime.Position) (position) ));
				this.previous = token;
				global::Loreline.Runtime.Token token1 = token;
				return token1;
			}
		}
		
		
		public virtual global::Loreline.Runtime.Token readIdentifier() {
			unchecked {
				global::Loreline.Runtime.Position start = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				int startPos = this.pos;
				while (( this.pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> c = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
					int c1 = (c).@value;
					if ( ! ((( ( ( ( ( c1 >= 97 ) && ( c1 <= 122 ) ) || ( ( c1 >= 65 ) && ( c1 <= 90 ) ) ) || ( c1 == 95 ) ) || ( ( c1 >= 48 ) && ( c1 <= 57 ) ) ))) ) {
						break;
					}
					
					{
						int count = 1;
						while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
							if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
								this.line++;
								this.column = 1;
							}
							else {
								this.column++;
							}
							
							this.pos++;
						}
						
					}
					
				}
				
				string word = global::Loreline.Internal.Lang.StringExt.substr(this.input, startPos, new global::Loreline.Internal.Lang.Null<int>(( this.pos - startPos ), true));
				global::Loreline.Runtime.TokenType tokenType = ( (global::Loreline.Runtime.Lexer.KEYWORDS.exists(word)) ? (((global::Loreline.Runtime.TokenType) ((global::Loreline.Runtime.Lexer.KEYWORDS.@get(word)).@value) )) : (global::Loreline.Runtime.TokenType.Identifier(word)) );
				global::Loreline.Runtime.Position position = start;
				if (( position == null )) {
					position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
				}
				
				position.length = ( this.pos - position.offset );
				global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (tokenType) ), ((global::Loreline.Runtime.Position) (position) ));
				this.previous = token;
				return token;
			}
		}
		
		
		public global::Loreline.Runtime.Position makePosition() {
			return new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
		}
		
		
		public global::Loreline.Runtime.Token makeToken(global::Loreline.Runtime.TokenType type, global::Loreline.Runtime.Position position) {
			if (( position == null )) {
				position = new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>));
			}
			
			position.length = ( this.pos - position.offset );
			global::Loreline.Runtime.Token token = new global::Loreline.Runtime.Token(((global::Loreline.Runtime.TokenType) (type) ), ((global::Loreline.Runtime.Position) (position) ));
			this.previous = token;
			return token;
		}
		
		
		public void advance(global::Loreline.Internal.Lang.Null<int> count) {
			unchecked {
				int count1 = ( ( ! (count.hasValue) ) ? (1) : ((count).@value) );
				while (( ( count1-- > 0 ) && ( this.pos < this.length ) )) {
					if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
						this.line++;
						this.column = 1;
					}
					else {
						this.column++;
					}
					
					this.pos++;
				}
				
			}
		}
		
		
		public int peek(global::Loreline.Internal.Lang.Null<int> offset) {
			unchecked {
				int offset1 = ( ( ! (offset.hasValue) ) ? (1) : ((offset).@value) );
				if (( ( this.pos + offset1 ) < this.length )) {
					return (global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, ( this.pos + offset1 ))).@value;
				}
				else {
					return 0;
				}
				
			}
		}
		
		
		public virtual global::Loreline.Runtime.LexerError error(string message, bool fatal) {
			global::Loreline.Runtime.LexerError err = new global::Loreline.Runtime.LexerError(((string) (message) ), ((global::Loreline.Runtime.Position) (new global::Loreline.Runtime.Position(((int) (this.startLine) ), ((int) (this.startColumn) ), ((int) (this.pos) ), default(global::Loreline.Internal.Lang.Null<int>))) ));
			if (( this.errors == null )) {
				this.errors = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			}
			
			this.errors.push(err);
			if (fatal) {
				throw ((global::System.Exception) (global::Loreline.Internal.Exception.thrown(err)) );
			}
			
			return err;
		}
		
		
		public virtual global::Loreline.Internal.Root.Array<object> getErrors() {
			if (( this.errors == null )) {
				this.errors = new global::Loreline.Internal.Root.Array<object>(new object[]{});
			}
			
			return this.errors;
		}
		
		
		public virtual void skipWhitespace() {
			unchecked {
				while (( this.pos < this.length )) {
					global::Loreline.Internal.Lang.Null<int> _g = global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos);
					if ( ! (_g.hasValue) ) {
						return;
					}
					else {
						switch (((_g)).@value) {
							case 9:
							case 32:
							{
								int count = 1;
								while (( ( count-- > 0 ) && ( this.pos < this.length ) )) {
									if (global::Loreline.Internal.Lang.Runtime.eq((global::Loreline.Internal.Lang.StringExt.charCodeAt(this.input, this.pos)).toDynamic(), 10)) {
										this.line++;
										this.column = 1;
									}
									else {
										this.column++;
									}
									
									this.pos++;
								}
								
								break;
							}
							
							
							default:
							{
								return;
							}
							
						}
						
					}
					
				}
				
			}
		}
		
		
		public bool isDigit(int c) {
			unchecked {
				if (( c >= 48 )) {
					return ( c <= 57 );
				}
				else {
					return false;
				}
				
			}
		}
		
		
		public bool isIdentifierStart(int c) {
			unchecked {
				if ( ! ((( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ))) ) {
					return ( c == 95 );
				}
				else {
					return true;
				}
				
			}
		}
		
		
		public bool isIdentifierPart(int c) {
			unchecked {
				if ( ! ((( ( ( ( c >= 97 ) && ( c <= 122 ) ) || ( ( c >= 65 ) && ( c <= 90 ) ) ) || ( c == 95 ) ))) ) {
					if (( c >= 48 )) {
						return ( c <= 57 );
					}
					else {
						return false;
					}
					
				}
				else {
					return true;
				}
				
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1054637901:
					{
						this.indentSize = ((int) (@value) );
						return @value;
					}
					
					
					case 933032312:
					{
						this.indentLevel = ((int) (@value) );
						return @value;
					}
					
					
					case 1547800410:
					{
						this.nextBlock = ((int) (@value) );
						return @value;
					}
					
					
					case 1047637208:
					{
						this.startColumn = ((int) (@value) );
						return @value;
					}
					
					
					case 10916214:
					{
						this.startLine = ((int) (@value) );
						return @value;
					}
					
					
					case 1183534806:
					{
						this.column = ((int) (@value) );
						return @value;
					}
					
					
					case 1202919412:
					{
						this.line = ((int) (@value) );
						return @value;
					}
					
					
					case 520590566:
					{
						this.length = ((int) (@value) );
						return @value;
					}
					
					
					case 5594516:
					{
						this.pos = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1365803947:
					{
						this.errors = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 938146215:
					{
						this.allowTabs = global::Loreline.Internal.Lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1054637901:
					{
						this.indentSize = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1598927078:
					{
						this.indentTokens = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 1229275964:
					{
						this.indentStack = ((global::Loreline.Internal.Root.Array<int>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<int>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 933032312:
					{
						this.indentLevel = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1801050517:
					{
						this.strictExprs = ((global::Loreline.Internal.Root.Array<int>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<int>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 1547800410:
					{
						this.nextBlock = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 67856200:
					{
						this.stack = ((global::Loreline.Internal.Root.Array<int>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<int>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 1100957193:
					{
						this.tokenized = ((global::Loreline.Internal.Root.Array<object>) (global::Loreline.Internal.Root.Array<object>.__hx_cast<object>(((global::Loreline.Internal.Root.Array) (@value) ))) );
						return @value;
					}
					
					
					case 598785079:
					{
						this.previous = ((global::Loreline.Runtime.Token) (@value) );
						return @value;
					}
					
					
					case 1047637208:
					{
						this.startColumn = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 10916214:
					{
						this.startLine = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1183534806:
					{
						this.column = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1202919412:
					{
						this.line = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 520590566:
					{
						this.length = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 5594516:
					{
						this.pos = ((int) (global::Loreline.Internal.Lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1042138122:
					{
						this.input = global::Loreline.Internal.Lang.Runtime.toString(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1821243014:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isIdentifierPart", 1821243014)) );
					}
					
					
					case 1449108079:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isIdentifierStart", 1449108079)) );
					}
					
					
					case 1984794979:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isDigit", 1984794979)) );
					}
					
					
					case 811715804:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "skipWhitespace", 811715804)) );
					}
					
					
					case 1304366305:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "getErrors", 1304366305)) );
					}
					
					
					case 1932118984:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "error", 1932118984)) );
					}
					
					
					case 1247076763:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "peek", 1247076763)) );
					}
					
					
					case 1863059586:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "advance", 1863059586)) );
					}
					
					
					case 1740896811:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "makeToken", 1740896811)) );
					}
					
					
					case 265499831:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "makePosition", 265499831)) );
					}
					
					
					case 996728671:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readIdentifier", 996728671)) );
					}
					
					
					case 452356799:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readNumber", 452356799)) );
					}
					
					
					case 241500744:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readMultiLineComment", 241500744)) );
					}
					
					
					case 1729900821:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readLineComment", 1729900821)) );
					}
					
					
					case 1529001214:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "makePositionRelativeTo", 1529001214)) );
					}
					
					
					case 838333445:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readIdentifierTokenInInterpolation", 838333445)) );
					}
					
					
					case 1016581564:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readFieldAccessInterpolation", 1016581564)) );
					}
					
					
					case 2125505269:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "nextTokenWithPosition", 2125505269)) );
					}
					
					
					case 1978344266:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readComplexInterpolation", 1978344266)) );
					}
					
					
					case 179047623:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readString", 179047623)) );
					}
					
					
					case 1233995395:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "tryReadUnquotedString", 1233995395)) );
					}
					
					
					case 1771682515:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isStrict", 1771682515)) );
					}
					
					
					case 195296495:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "followsCallableOrIndexable", 195296495)) );
					}
					
					
					case 1281817653:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "makeStrictIfFollowingCallable", 1281817653)) );
					}
					
					
					case 170467784:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "makeLooseOrStrictAfterBracket", 170467784)) );
					}
					
					
					case 2044994131:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isNumber", 2044994131)) );
					}
					
					
					case 1545159324:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "hasNonSpecialChar", 1545159324)) );
					}
					
					
					case 416145912:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "followsOnlyWhitespacesOrCommentsInLine", 416145912)) );
					}
					
					
					case 1184311830:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "followsOnlyLabelOrCommentsInLine", 1184311830)) );
					}
					
					
					case 2085560561:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "followsAssignStart", 2085560561)) );
					}
					
					
					case 710568689:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isInsideBrackets", 710568689)) );
					}
					
					
					case 213039886:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isAfterLBracket", 213039886)) );
					}
					
					
					case 2140389027:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isAfterComma", 2140389027)) );
					}
					
					
					case 619027138:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isAfterLabel", 619027138)) );
					}
					
					
					case 1726092565:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isColon", 1726092565)) );
					}
					
					
					case 1151280105:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isAssignStart", 1151280105)) );
					}
					
					
					case 1858831770:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isCallStart", 1858831770)) );
					}
					
					
					case 1913514584:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isLabelStart", 1913514584)) );
					}
					
					
					case 1516674499:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isTransitionStart", 1516674499)) );
					}
					
					
					case 1702898679:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isIdentifierExpressionStart", 1702898679)) );
					}
					
					
					case 1911284859:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isIfStart", 1911284859)) );
					}
					
					
					case 1049493423:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "skipWhitespaceAndComments", 1049493423)) );
					}
					
					
					case 1514749454:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "matchIdentifier", 1514749454)) );
					}
					
					
					case 397157895:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "isWhitespace", 397157895)) );
					}
					
					
					case 324379125:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "readLineBreak", 324379125)) );
					}
					
					
					case 2134890874:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "inStateOrCharacter", 2134890874)) );
					}
					
					
					case 2105131003:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "inBeat", 2105131003)) );
					}
					
					
					case 1740350493:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "parentBlockType", 1740350493)) );
					}
					
					
					case 444528186:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "countIndentation", 444528186)) );
					}
					
					
					case 997235974:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "nextToken", 997235974)) );
					}
					
					
					case 727184891:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "tokenize", 727184891)) );
					}
					
					
					case 1724402127:
					{
						return ((global::Loreline.Internal.Lang.Function) (new global::Loreline.Internal.Lang.Closure(this, "reset", 1724402127)) );
					}
					
					
					case 1365803947:
					{
						return this.errors;
					}
					
					
					case 938146215:
					{
						return this.allowTabs;
					}
					
					
					case 1054637901:
					{
						return this.indentSize;
					}
					
					
					case 1598927078:
					{
						return this.indentTokens;
					}
					
					
					case 1229275964:
					{
						return this.indentStack;
					}
					
					
					case 933032312:
					{
						return this.indentLevel;
					}
					
					
					case 1801050517:
					{
						return this.strictExprs;
					}
					
					
					case 1547800410:
					{
						return this.nextBlock;
					}
					
					
					case 67856200:
					{
						return this.stack;
					}
					
					
					case 1100957193:
					{
						return this.tokenized;
					}
					
					
					case 598785079:
					{
						return this.previous;
					}
					
					
					case 1047637208:
					{
						return this.startColumn;
					}
					
					
					case 10916214:
					{
						return this.startLine;
					}
					
					
					case 1183534806:
					{
						return this.column;
					}
					
					
					case 1202919412:
					{
						return this.line;
					}
					
					
					case 520590566:
					{
						return this.length;
					}
					
					
					case 5594516:
					{
						return this.pos;
					}
					
					
					case 1042138122:
					{
						return this.input;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1054637901:
					{
						return ((double) (this.indentSize) );
					}
					
					
					case 933032312:
					{
						return ((double) (this.indentLevel) );
					}
					
					
					case 1547800410:
					{
						return ((double) (this.nextBlock) );
					}
					
					
					case 1047637208:
					{
						return ((double) (this.startColumn) );
					}
					
					
					case 10916214:
					{
						return ((double) (this.startLine) );
					}
					
					
					case 1183534806:
					{
						return ((double) (this.column) );
					}
					
					
					case 1202919412:
					{
						return ((double) (this.line) );
					}
					
					
					case 520590566:
					{
						return ((double) (this.length) );
					}
					
					
					case 5594516:
					{
						return ((double) (this.pos) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1821243014:
					{
						return this.isIdentifierPart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1449108079:
					{
						return this.isIdentifierStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1984794979:
					{
						return this.isDigit(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 811715804:
					{
						this.skipWhitespace();
						break;
					}
					
					
					case 1304366305:
					{
						return this.getErrors();
					}
					
					
					case 1932118984:
					{
						return this.error(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]), global::Loreline.Internal.Lang.Runtime.toBool(dynargs[1]));
					}
					
					
					case 1247076763:
					{
						return this.peek(global::Loreline.Internal.Lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
					}
					
					
					case 1863059586:
					{
						this.advance(global::Loreline.Internal.Lang.Null<object>.ofDynamic<int>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
						break;
					}
					
					
					case 1740896811:
					{
						return this.makeToken(((global::Loreline.Runtime.TokenType) (dynargs[0]) ), ((global::Loreline.Runtime.Position) (( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )) ));
					}
					
					
					case 265499831:
					{
						return this.makePosition();
					}
					
					
					case 996728671:
					{
						return this.readIdentifier();
					}
					
					
					case 452356799:
					{
						return this.readNumber();
					}
					
					
					case 241500744:
					{
						return this.readMultiLineComment();
					}
					
					
					case 1729900821:
					{
						return this.readLineComment();
					}
					
					
					case 1529001214:
					{
						return this.makePositionRelativeTo(((global::Loreline.Runtime.Position) (dynargs[0]) ));
					}
					
					
					case 838333445:
					{
						return this.readIdentifierTokenInInterpolation(((global::Loreline.Runtime.Position) (dynargs[0]) ));
					}
					
					
					case 1016581564:
					{
						return this.readFieldAccessInterpolation(((global::Loreline.Runtime.Position) (dynargs[0]) ));
					}
					
					
					case 2125505269:
					{
						return this.nextTokenWithPosition(((global::Loreline.Runtime.Position) (dynargs[0]) ));
					}
					
					
					case 1978344266:
					{
						return this.readComplexInterpolation(((global::Loreline.Runtime.Position) (dynargs[0]) ));
					}
					
					
					case 179047623:
					{
						return this.readString(((global::Loreline.Runtime.Position) (dynargs[0]) ));
					}
					
					
					case 1233995395:
					{
						return this.tryReadUnquotedString();
					}
					
					
					case 1771682515:
					{
						return this.isStrict();
					}
					
					
					case 195296495:
					{
						return this.followsCallableOrIndexable();
					}
					
					
					case 1281817653:
					{
						this.makeStrictIfFollowingCallable();
						break;
					}
					
					
					case 170467784:
					{
						this.makeLooseOrStrictAfterBracket();
						break;
					}
					
					
					case 2044994131:
					{
						return this.isNumber(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 1545159324:
					{
						return this.hasNonSpecialChar(global::Loreline.Internal.Lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 416145912:
					{
						return this.followsOnlyWhitespacesOrCommentsInLine();
					}
					
					
					case 1184311830:
					{
						return this.followsOnlyLabelOrCommentsInLine();
					}
					
					
					case 2085560561:
					{
						return this.followsAssignStart();
					}
					
					
					case 710568689:
					{
						return this.isInsideBrackets();
					}
					
					
					case 213039886:
					{
						return this.isAfterLBracket();
					}
					
					
					case 2140389027:
					{
						return this.isAfterComma();
					}
					
					
					case 619027138:
					{
						return this.isAfterLabel(global::Loreline.Internal.Lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 0 )) ? (dynargs[0]) : (null) )));
					}
					
					
					case 1726092565:
					{
						return this.isColon(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ), global::Loreline.Internal.Lang.Null<object>.ofDynamic<bool>(( (( dynargs.Length > 1 )) ? (dynargs[1]) : (null) )));
					}
					
					
					case 1151280105:
					{
						return this.isAssignStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1858831770:
					{
						return this.isCallStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1913514584:
					{
						return this.isLabelStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1516674499:
					{
						return this.isTransitionStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1702898679:
					{
						return this.isIdentifierExpressionStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1911284859:
					{
						return this.isIfStart(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1049493423:
					{
						return this.skipWhitespaceAndComments(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1514749454:
					{
						return this.matchIdentifier(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 397157895:
					{
						return this.isWhitespace(((int) (global::Loreline.Internal.Lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 324379125:
					{
						return this.readLineBreak();
					}
					
					
					case 2134890874:
					{
						return this.inStateOrCharacter();
					}
					
					
					case 2105131003:
					{
						return this.inBeat();
					}
					
					
					case 1740350493:
					{
						return this.parentBlockType();
					}
					
					
					case 444528186:
					{
						return this.countIndentation();
					}
					
					
					case 997235974:
					{
						return this.nextToken();
					}
					
					
					case 727184891:
					{
						return this.tokenize();
					}
					
					
					case 1724402127:
					{
						this.reset();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Loreline.Internal.Root.Array<string> baseArr) {
			baseArr.push("errors");
			baseArr.push("allowTabs");
			baseArr.push("indentSize");
			baseArr.push("indentTokens");
			baseArr.push("indentStack");
			baseArr.push("indentLevel");
			baseArr.push("strictExprs");
			baseArr.push("nextBlock");
			baseArr.push("stack");
			baseArr.push("tokenized");
			baseArr.push("previous");
			baseArr.push("startColumn");
			baseArr.push("startLine");
			baseArr.push("column");
			baseArr.push("line");
			baseArr.push("length");
			baseArr.push("pos");
			baseArr.push("input");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


