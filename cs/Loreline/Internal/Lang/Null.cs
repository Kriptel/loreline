// Generated by Haxe 4.3.6
using global::Loreline.Internal.Root;

#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Internal.Lang {
	public struct Null<T> {
		
		//This function is here to be used with Reflection, when the global::Loreline.Internal.Lang.Null type is known
		public static global::Loreline.Internal.Lang.Null<T> _ofDynamic(object obj) {
			if (obj == null) {
				return new global::Loreline.Internal.Lang.Null<T>(default(T), false);
			} else if (typeof(T).Equals(typeof(double))) {
				return new global::Loreline.Internal.Lang.Null<T>((T) (object) global::Loreline.Internal.Lang.Runtime.toDouble(obj), true);
			} else if (typeof(T).Equals(typeof(int))) {
				return new global::Loreline.Internal.Lang.Null<T>((T) (object) global::Loreline.Internal.Lang.Runtime.toInt(obj), true);
			} else {
				return new global::Loreline.Internal.Lang.Null<T>((T) obj, true);
			}
		}

		public static implicit operator global::Loreline.Internal.Lang.Null<T>(T val) {
			return new global::Loreline.Internal.Lang.Null<T>(val, true);
		}

		public static implicit operator Null<T>(__NoValue__ noValue) {
			return new global::Loreline.Internal.Lang.Null<T>(default(T), false);
		}

		public sealed class __NoValue__ {
			private __NoValue__() {}
		}

		override public string ToString() {
			if (!hasValue) return "null";
			else return value.ToString();
		}
		public Null(T v, bool hasValue) {
			if (( hasValue && global::System.Object.ReferenceEquals(((object) (v) ), default(object)) )) {
				hasValue = false;
			}
			
			this.@value = v;
			this.hasValue = hasValue;
		}
		
		
		public static global::Loreline.Internal.Lang.Null<D> ofDynamic<D>(object obj) {
			if (obj == null) {
				return new global::Loreline.Internal.Lang.Null<D>(default(D), false);
			} else if (typeof(D).Equals(typeof(double))) {
				return new global::Loreline.Internal.Lang.Null<D>((D) (object) global::Loreline.Internal.Lang.Runtime.toDouble(obj), true);
			} else if (typeof(D).Equals(typeof(int))) {
				return new global::Loreline.Internal.Lang.Null<D>((D) (object) global::Loreline.Internal.Lang.Runtime.toInt(obj), true);
			} else {
				return new global::Loreline.Internal.Lang.Null<D>((D) obj, true);
			}
		}
		
		
		public readonly T @value;
		
		public readonly bool hasValue;
		
		public object toDynamic() {
			if (this.hasValue) {
				return this.@value;
			}
			
			return null;
		}
		
		
	}
}


