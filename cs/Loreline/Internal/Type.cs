// Generated by Haxe 4.3.6

#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public class ValueType : global::Loreline.Internal.Lang.Enum {
		
		protected ValueType(int index) : base(index) {
		}
		
		
		public static readonly global::Loreline.Internal.Root.ValueType TNull = new global::Loreline.Internal.Root.ValueType_TNull();
		
		public static readonly global::Loreline.Internal.Root.ValueType TInt = new global::Loreline.Internal.Root.ValueType_TInt();
		
		public static readonly global::Loreline.Internal.Root.ValueType TFloat = new global::Loreline.Internal.Root.ValueType_TFloat();
		
		public static readonly global::Loreline.Internal.Root.ValueType TBool = new global::Loreline.Internal.Root.ValueType_TBool();
		
		public static readonly global::Loreline.Internal.Root.ValueType TObject = new global::Loreline.Internal.Root.ValueType_TObject();
		
		public static readonly global::Loreline.Internal.Root.ValueType TFunction = new global::Loreline.Internal.Root.ValueType_TFunction();
		
		public static global::Loreline.Internal.Root.ValueType TClass(global::System.Type c) {
			return new global::Loreline.Internal.Root.ValueType_TClass(c);
		}
		
		
		public static global::Loreline.Internal.Root.ValueType TEnum(global::System.Type e) {
			return new global::Loreline.Internal.Root.ValueType_TEnum(e);
		}
		
		
		public static readonly global::Loreline.Internal.Root.ValueType TUnknown = new global::Loreline.Internal.Root.ValueType_TUnknown();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TNull : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TNull() : base(0) {
		}
		
		
		public override string getTag() {
			return "TNull";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TInt : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TInt() : base(1) {
		}
		
		
		public override string getTag() {
			return "TInt";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TFloat : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TFloat() : base(2) {
		}
		
		
		public override string getTag() {
			return "TFloat";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TBool : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TBool() : base(3) {
		}
		
		
		public override string getTag() {
			return "TBool";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TObject : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TObject() : base(4) {
		}
		
		
		public override string getTag() {
			return "TObject";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TFunction : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TFunction() : base(5) {
		}
		
		
		public override string getTag() {
			return "TFunction";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TClass : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TClass(global::System.Type c) : base(6) {
			this.c = c;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.c});
		}
		
		
		public override string getTag() {
			return "TClass";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(6, new object[]{this.c});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Internal.Root.ValueType_TClass en = ( other as global::Loreline.Internal.Root.ValueType_TClass );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.c) ), ((object) (en.c) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("TClass", new object[]{this.c});
		}
		
		
		public readonly global::System.Type c;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TEnum : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TEnum(global::System.Type e) : base(7) {
			this.e = e;
		}
		
		
		public override global::Loreline.Internal.Root.Array<object> getParams() {
			return new global::Loreline.Internal.Root.Array<object>(new object[]{this.e});
		}
		
		
		public override string getTag() {
			return "TEnum";
		}
		
		
		public override int GetHashCode() {
			unchecked {
				return global::Loreline.Internal.Lang.Enum.paramsGetHashCode(7, new object[]{this.e});
			}
		}
		
		
		public override bool Equals(object other) {
			if (global::System.Object.ReferenceEquals(((object) (this) ), ((object) (other) ))) {
				return true;
			}
			
			global::Loreline.Internal.Root.ValueType_TEnum en = ( other as global::Loreline.Internal.Root.ValueType_TEnum );
			if (( en == null )) {
				return false;
			}
			
			if ( ! (global::Loreline.Internal.Root.Type.enumEq<object>(((object) (this.e) ), ((object) (en.e) ))) ) {
				return false;
			}
			
			return true;
		}
		
		
		public override string toString() {
			return global::Loreline.Internal.Lang.Enum.paramsToString("TEnum", new object[]{this.e});
		}
		
		
		public readonly global::System.Type e;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public sealed class ValueType_TUnknown : global::Loreline.Internal.Root.ValueType {
		
		public ValueType_TUnknown() : base(8) {
		}
		
		
		public override string getTag() {
			return "TUnknown";
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060
namespace Loreline.Internal.Root {
	public class Type : global::Loreline.Internal.Lang.HxObject {
		
		public Type(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public Type() {
			global::Loreline.Internal.Root.Type.__hx_ctor__Type(this);
		}
		
		
		protected static void __hx_ctor__Type(global::Loreline.Internal.Root.Type __hx_this) {
		}
		
		
		public static global::System.Type getClass<T>(T o) {
			if (( ( global::System.Object.ReferenceEquals(((object) (o) ), default(object)) || ( o is global::Loreline.Internal.Lang.DynamicObject ) ) || ( o is global::System.Type ) )) {
				return null;
			}
			
			return ((global::System.Type) (((object) (o) ).GetType()) );
		}
		
		
		public static string getClassName(global::System.Type c) {
			unchecked {
				string ret = ((global::System.Type) (c) ).ToString();
				if (( ( ret.Length > 10 ) && ret.StartsWith("global::Loreline.Internal.Root.") )) {
					ret = global::Loreline.Internal.Lang.StringExt.substr(ret, 10, default(global::Loreline.Internal.Lang.Null<int>));
				}
				
				switch (ret) {
					case "System.Boolean":
					{
						return "Bool";
					}
					
					
					case "System.Double":
					{
						return "Float";
					}
					
					
					case "System.Int32":
					{
						return "Int";
					}
					
					
					case "System.Object":
					{
						return "Dynamic";
					}
					
					
					case "System.String":
					{
						return "String";
					}
					
					
					case "System.Type":
					{
						return "Class";
					}
					
					
					default:
					{
						return ((string) ((((global::System.String) (((object) (ret) )) )).Split(((char[]) (new char[]{((char) (96) )}) ))[0]) );
					}
					
				}
				
			}
		}
		
		
		public static string getEnumName(global::System.Type e) {
			unchecked {
				string ret = ((global::System.Type) (e) ).ToString();
				if (( ( ret.Length > 10 ) && ret.StartsWith("global::Loreline.Internal.Root.") )) {
					ret = global::Loreline.Internal.Lang.StringExt.substr(ret, 10, default(global::Loreline.Internal.Lang.Null<int>));
				}
				
				return ret;
			}
		}
		
		
		public static global::System.Type resolveClass(string name) {
			unchecked {
				if (( global::Loreline.Internal.Lang.StringExt.indexOf(name, ".", default(global::Loreline.Internal.Lang.Null<int>)) == -1 )) {
					name = global::Loreline.Internal.Lang.Runtime.concat("global::Loreline.Internal.Root.", name);
				}
				
				global::System.Type t = global::System.Type.GetType(((string) (name) ));
				if (global::System.Object.ReferenceEquals(((object) (t) ), default(object))) {
					global::System.Collections.IEnumerator all = ( global::System.AppDomain.CurrentDomain.GetAssemblies() as global::System.Array ).GetEnumerator();
					while (all.MoveNext()) {
						global::System.Reflection.Assembly t2 = ((global::System.Reflection.Assembly) (all.Current) );
						t = t2.GetType(((string) (name) ));
						if ( ! (global::System.Object.ReferenceEquals(((object) (t) ), default(object))) ) {
							break;
						}
						
					}
					
				}
				
				if (global::System.Object.ReferenceEquals(((object) (t) ), default(object))) {
					switch (name) {
						case "global::Loreline.Internal.Root.Bool":
						{
							return ((global::System.Type) (typeof(bool)) );
						}
						
						
						case "global::Loreline.Internal.Root.Class":
						{
							return ((global::System.Type) (typeof(global::System.Type)) );
						}
						
						
						case "global::Loreline.Internal.Root.Dynamic":
						{
							return ((global::System.Type) (typeof(object)) );
						}
						
						
						case "global::Loreline.Internal.Root.Float":
						{
							return ((global::System.Type) (typeof(double)) );
						}
						
						
						case "global::Loreline.Internal.Root.Int":
						{
							return ((global::System.Type) (typeof(int)) );
						}
						
						
						case "global::Loreline.Internal.Root.String":
						{
							return ((global::System.Type) (typeof(string)) );
						}
						
						
						default:
						{
							return null;
						}
						
					}
					
				}
				else if (( t.IsInterface && (((global::System.Type) (typeof(global::Loreline.Internal.Lang.IGenericObject)) )).IsAssignableFrom(((global::System.Type) (t) )) )) {
					{
						object[] _g_arr = ( t as global::System.Reflection.MemberInfo ).GetCustomAttributes(((bool) (true) ));
						uint _g_idx = ((uint) (0) );
						while (( _g_idx < ( _g_arr as global::System.Array ).Length )) {
							_g_idx += ((uint) (1) );
							object attr = ((object) (_g_arr[((int) (((uint) (( _g_idx - 1 )) )) )]) );
							global::Loreline.Internal.Lang.GenericInterface g = ( ((object) (attr) ) as global::Loreline.Internal.Lang.GenericInterface );
							if (( g != null )) {
								return ((global::System.Type) (g.generic) );
							}
							
						}
						
					}
					
					return ((global::System.Type) (t) );
				}
				else {
					return ((global::System.Type) (t) );
				}
				
			}
		}
		
		
		protected static readonly object[] __createEmptyInstance_EMPTY_ARGS = new object[]{((object) (global::Loreline.Internal.Lang.EmptyObject.EMPTY) )};
		
		public static T createEmptyInstance<T>(global::System.Type cl) {
			global::System.Type t = ((global::System.Type) (cl) );
			if (global::System.Object.ReferenceEquals(((object) (t) ), ((object) (typeof(string)) ))) {
				return (T)(object)"";
			}
			
			object res = null;
			try {
				res = global::System.Activator.CreateInstance(((global::System.Type) (t) ), ((object[]) (global::Loreline.Internal.Root.Type.__createEmptyInstance_EMPTY_ARGS) ));
			}
			catch (global::System.MissingMemberException _){
				res = global::System.Activator.CreateInstance(((global::System.Type) (t) ));
			}
			
			
			return (T)res;
		}
		
		
		public static global::Loreline.Internal.Root.Array<string> getInstanceFields(global::System.Type c) {
			unchecked {
				if (global::Loreline.Internal.Lang.Runtime.refEq(c, typeof(string))) {
					return global::Loreline.Internal.Lang.StringRefl.fields;
				}
				
				global::System.Type c1 = ((global::System.Type) (c) );
				global::Loreline.Internal.Root.Array<string> ret = new global::Loreline.Internal.Root.Array<string>(new string[]{});
				global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags> initial = new global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags>(global::System.Reflection.BindingFlags.Public, true);
				global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags> initial1 = new global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags>(( (((global::System.Reflection.BindingFlags) (( ( ! (initial.hasValue) ) ? (default(global::System.Reflection.BindingFlags)) : ((initial).@value) )) )) | ((global::System.Reflection.BindingFlags) (global::System.Reflection.BindingFlags.Instance) ) ), true);
				global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags> initial2 = new global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags>(( (((global::System.Reflection.BindingFlags) (( ( ! (initial1.hasValue) ) ? (default(global::System.Reflection.BindingFlags)) : ((initial1).@value) )) )) | ((global::System.Reflection.BindingFlags) (global::System.Reflection.BindingFlags.FlattenHierarchy) ) ), true);
				global::System.Reflection.MemberInfo[] mis = c1.GetMembers(((global::System.Reflection.BindingFlags) (( ( ! (initial2.hasValue) ) ? (default(global::System.Reflection.BindingFlags)) : ((initial2).@value) )) ));
				{
					int _g = 0;
					int _g1 = ( mis as global::System.Array ).Length;
					while (( _g < _g1 )) {
						int i = _g++;
						global::System.Reflection.MemberInfo i1 = ((global::System.Reflection.MemberInfo) (mis[i]) );
						if (( i1 is global::System.Reflection.PropertyInfo )) {
							continue;
						}
						
						string n = i1.Name;
						if ((  ! (n.StartsWith("__hx_"))  && ( (( (( ((uint) (0) ) < n.Length )) ? (((int) (n[0]) )) : (-1) )) != 46 ) )) {
							switch (n) {
								case "Equals":
								case "GetHashCode":
								case "GetType":
								case "ToString":
								{
									break;
								}
								
								
								default:
								{
									ret.push(n);
									break;
								}
								
							}
							
						}
						
					}
					
				}
				
				return ret;
			}
		}
		
		
		public static global::Loreline.Internal.Root.Array<string> getClassFields(global::System.Type c) {
			if (global::System.Object.ReferenceEquals(((object) (c) ), ((object) (typeof(string)) ))) {
				return new global::Loreline.Internal.Root.Array<string>(new string[]{"fromCharCode"});
			}
			
			global::Loreline.Internal.Root.Array<string> ret = new global::Loreline.Internal.Root.Array<string>(new string[]{});
			global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags> initial = new global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags>(global::System.Reflection.BindingFlags.Public, true);
			global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags> initial1 = new global::Loreline.Internal.Lang.Null<global::System.Reflection.BindingFlags>(( (((global::System.Reflection.BindingFlags) (( ( ! (initial.hasValue) ) ? (default(global::System.Reflection.BindingFlags)) : ((initial).@value) )) )) | ((global::System.Reflection.BindingFlags) (global::System.Reflection.BindingFlags.Static) ) ), true);
			global::System.Reflection.MemberInfo[] infos = ((global::System.Type) (c) ).GetMembers(((global::System.Reflection.BindingFlags) (( ( ! (initial1.hasValue) ) ? (default(global::System.Reflection.BindingFlags)) : ((initial1).@value) )) ));
			{
				int _g = 0;
				int _g1 = ( infos as global::System.Array ).Length;
				while (( _g < _g1 )) {
					int i = _g++;
					string name = ((global::System.Reflection.MemberInfo) (infos[i]) ).Name;
					if ( ! (name.StartsWith("__hx_")) ) {
						ret.push(name);
					}
					
				}
				
			}
			
			return ret;
		}
		
		
		public static global::Loreline.Internal.Root.ValueType @typeof(object v) {
			if (( v == null )) {
				return global::Loreline.Internal.Root.ValueType.TNull;
			}
			
			global::System.Type t = ( v as global::System.Type );
			if ( ! (global::System.Object.ReferenceEquals(((object) (t) ), default(object))) ) {
				return global::Loreline.Internal.Root.ValueType.TObject;
			}
			
			t = ((global::System.Type) (v.GetType()) );
			if (t.IsEnum) {
				return global::Loreline.Internal.Root.ValueType.TEnum(((global::System.Type) (t) ));
			}
			
			if (( v is global::Loreline.Internal.Lang.Enum )) {
				return global::Loreline.Internal.Root.ValueType.TEnum(((global::System.Type) (t.BaseType) ));
			}
			
			if (t.IsValueType) {
				global::System.IConvertible vc = ( ((object) (v) ) as global::System.IConvertible );
				if (( vc != null )) {
					switch (vc.GetTypeCode()) {
						case global::System.TypeCode.Boolean:
						{
							return global::Loreline.Internal.Root.ValueType.TBool;
						}
						
						
						case global::System.TypeCode.Int32:
						{
							return global::Loreline.Internal.Root.ValueType.TInt;
						}
						
						
						case global::System.TypeCode.Double:
						{
							double d = vc.ToDouble(default(global::System.IFormatProvider));
							if (( ( ( d >= global::System.Int32.MinValue ) && ( d <= global::System.Int32.MaxValue ) ) && ( d == vc.ToInt32(default(global::System.IFormatProvider)) ) )) {
								return global::Loreline.Internal.Root.ValueType.TInt;
							}
							else {
								return global::Loreline.Internal.Root.ValueType.TFloat;
							}
							
						}
						
						
						default:
						{
							return global::Loreline.Internal.Root.ValueType.TClass(((global::System.Type) (t) ));
						}
						
					}
					
				}
				else {
					return global::Loreline.Internal.Root.ValueType.TClass(((global::System.Type) (t) ));
				}
				
			}
			
			if (( v is global::Loreline.Internal.Lang.IHxObject )) {
				if (( v is global::Loreline.Internal.Lang.DynamicObject )) {
					return global::Loreline.Internal.Root.ValueType.TObject;
				}
				
				return global::Loreline.Internal.Root.ValueType.TClass(((global::System.Type) (t) ));
			}
			else if (( v is global::Loreline.Internal.Lang.Function )) {
				return global::Loreline.Internal.Root.ValueType.TFunction;
			}
			else {
				return global::Loreline.Internal.Root.ValueType.TClass(((global::System.Type) (t) ));
			}
			
		}
		
		
		public static bool enumEq<T>(T a, T b) {
			if (global::Loreline.Internal.Lang.Runtime.eq(a, default(T))) {
				return global::Loreline.Internal.Lang.Runtime.eq(b, default(T));
			}
			else if (global::Loreline.Internal.Lang.Runtime.eq(b, default(T))) {
				return false;
			}
			else {
				return a.Equals(b);
			}
			
		}
		
		
		public static string enumConstructor(object e) {
			if (( e is global::System.Enum )) {
				return ( (((global::System.Enum) (e) )) as global::System.ValueType ).ToString();
			}
			else {
				return (((global::Loreline.Internal.Lang.Enum) (e) )).getTag();
			}
			
		}
		
		
		public static int enumIndex(object e) {
			if (( e is global::System.Enum )) {
				global::System.Array values = global::System.Enum.GetValues(((global::System.Type) (((object) (e) ).GetType()) ));
				return global::System.Array.IndexOf(((global::System.Array) (values) ), ((object) (e) ));
			}
			else {
				return (((global::Loreline.Internal.Lang.Enum) (e) ))._hx_index;
			}
			
		}
		
		
	}
}


