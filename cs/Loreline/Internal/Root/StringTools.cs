// Generated by Haxe 4.3.6
using global::Loreline.Internal.Root;

#pragma warning disable 109, 114, 219, 429, 168, 162, IL2026, IL2070, IL2072, IL2060, CS0108
namespace Loreline.Internal.Root {
	public class StringTools : global::Loreline.Internal.Lang.HxObject {
		
		public StringTools(global::Loreline.Internal.Lang.EmptyObject empty) {
		}
		
		
		public StringTools() {
			global::Loreline.Internal.Root.StringTools.__hx_ctor__StringTools(this);
		}
		
		
		protected static void __hx_ctor__StringTools(global::Loreline.Internal.Root.StringTools __hx_this) {
		}
		
		
		public static string htmlEscape(string s, global::Loreline.Internal.Lang.Null<bool> quotes) {
			unchecked {
				global::Loreline.Internal.Root.StringBuf buf = new global::Loreline.Internal.Root.StringBuf();
				{
					int _g_offset = 0;
					string _g_s = s;
					while (( _g_offset < _g_s.Length )) {
						string s1 = _g_s;
						int index = _g_offset++;
						int c = ( (( ((uint) (index) ) < s1.Length )) ? (((int) (s1[index]) )) : (-1) );
						if (( ( c >= 55296 ) && ( c <= 56319 ) )) {
							int index1 = ( index + 1 );
							c = ( ( ( c - 55232 ) << 10 ) | ( (( (( ((uint) (index1) ) < s1.Length )) ? (((int) (s1[index1]) )) : (-1) )) & 1023 ) );
						}
						
						int c1 = c;
						if (( c1 >= 65536 )) {
							 ++ _g_offset;
						}
						
						int code = c1;
						switch (code) {
							case 34:
							{
								if (((quotes)).@value) {
									buf.b.Append(((string) ("&quot;") ));
								}
								else {
									buf.addChar(code);
								}
								
								break;
							}
							
							
							case 38:
							{
								buf.b.Append(((string) ("&amp;") ));
								break;
							}
							
							
							case 39:
							{
								if (((quotes)).@value) {
									buf.b.Append(((string) ("&#039;") ));
								}
								else {
									buf.addChar(code);
								}
								
								break;
							}
							
							
							case 60:
							{
								buf.b.Append(((string) ("&lt;") ));
								break;
							}
							
							
							case 62:
							{
								buf.b.Append(((string) ("&gt;") ));
								break;
							}
							
							
							default:
							{
								buf.addChar(code);
								break;
							}
							
						}
						
					}
					
				}
				
				return buf.b.ToString();
			}
		}
		
		
		public static string lpad(string s, string c, int l) {
			if (( c.Length <= 0 )) {
				return s;
			}
			
			global::System.Text.StringBuilder buf_b = new global::System.Text.StringBuilder();
			l -= s.Length;
			while (( buf_b.Length < l )) {
				buf_b.Append(((string) (global::Loreline.Internal.Root.Std.@string(c)) ));
			}
			
			buf_b.Append(((string) (global::Loreline.Internal.Root.Std.@string(s)) ));
			return buf_b.ToString();
		}
		
		
		public static string replace(string s, string sub, string @by) {
			if (( sub.Length == 0 )) {
				return global::Loreline.Internal.Lang.StringExt.split(s, sub).@join(@by);
			}
			else {
				return s.Replace(sub, @by);
			}
			
		}
		
		
	}
}


